var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.09,1,0.557]],["body/components/AppComponent.html",[0,0.151,1,0.988,2,1.255,3,0.407,4,0.352,5,1.07,6,1.869,7,1.07,8,1.07,9,0.352,10,3.037,11,0.976,12,1.668,13,1.662,14,2.666,15,2.403,16,5.203,17,1.376,18,4.707,19,0.698,20,3.661,21,2.626,22,1.694,23,2.319,24,0.407,25,2.319,26,2.319,27,2.626,28,1.283,29,1.869,30,1.869,31,2.073,32,2.073,33,0.034,34,0.407,35,0.248,36,0.807,37,1.376,38,1.376,39,0.731,40,1.605,41,1.07,42,0.748,43,1.07,44,0.659,45,1.07,46,0.731,47,1.07,48,0.731,49,0.976,50,1.07,51,0.659,52,1.07,53,0.659,54,1.07,55,0.731,56,1.07,57,0.731,58,1.07,59,0.659,60,1.07,61,0.659,62,1.07,63,0.731,64,0.889,65,1.07,66,0.731,67,1.07,68,0.976,69,0.659,70,0.976,71,1.07,72,0.026,73,0.026]],["title/modules/AppModule.html",[74,1.581,75,1.753]],["body/modules/AppModule.html",[1,1.057,3,0.298,4,0.257,9,0.257,13,0.714,19,0.786,24,0.298,28,1.858,29,1.368,30,1.368,31,1.518,32,1.518,33,0.036,34,0.298,35,0.181,36,0.591,44,0.954,46,1.058,48,1.058,49,0.714,51,0.954,53,0.954,55,1.058,57,1.132,59,1.02,61,0.954,63,1.058,66,1.058,69,0.954,72,0.021,73,0.021,74,1.368,75,3.604,76,1.368,77,1.518,78,3.18,79,3.18,80,3.18,81,1.697,82,2.223,83,2.223,84,2.223,85,2.223,86,2.223,87,3.211,88,2.733,89,1.922,90,1.697,91,2.68,92,2.733,93,2.733,94,3.81,95,3.81,96,1.922,97,1.922,98,2.68,99,2.223,100,3.81,101,2.68,102,2.68,103,3.81,104,3.81,105,1.518,106,2.68,107,1.922,108,2.68,109,2.68,110,2.68,111,3.81,112,2.68,113,3.81,114,3.81,115,1.922,116,1.922,117,2.68,118,2.223,119,2.223,120,2.223,121,2.223,122,2.68,123,1.922,124,2.68,125,1.697,126,2.68,127,2.223,128,2.68]],["title/modules/AppRoutingModule.html",[74,1.581,87,1.753]],["body/modules/AppRoutingModule.html",[0,0.17,3,0.45,4,0.388,9,0.388,19,0.783,24,0.45,33,0.035,34,0.45,35,0.273,44,0.902,51,0.902,53,0.902,59,0.902,61,0.728,72,0.028,73,0.028,76,2.065,81,2.561,87,2.839,92,2.9,93,3.595,115,2.9,118,3.355,119,3.355,120,3.355,121,3.355,127,3.355,129,4.044,130,4.044,131,5.012,132,5.447,133,1.871,134,3.355,135,4.044,136,2.561,137,2.561,138,4.044,139,4.044,140,1.871,141,5.965,142,4.044,143,3.174,144,4.044,145,4.044,146,5.012,147,2.561,148,2.561,149,2.9,150,4.044,151,2.9,152,4.044]],["title/modules/AppServerModule.html",[74,1.581,153,1.961]],["body/modules/AppServerModule.html",[1,1.094,3,0.461,4,0.398,9,0.398,19,0.73,24,0.461,33,0.036,34,0.461,35,0.28,36,0.914,72,0.029,73,0.029,74,2.118,75,3.399,76,2.118,77,2.349,78,2.975,79,3.951,80,2.975,81,2.627,88,3.651,89,2.975,90,2.627,92,3.651,93,3.651,96,2.975,99,3.441,153,3.85,154,3.441,155,4.148,156,4.148,157,4.148,158,5.091,159,2.627,160,4.148]],["title/directives/BodyClassDirective.html",[39,0.618,69,0.557]],["body/directives/BodyClassDirective.html",[3,0.36,4,0.311,9,0.311,11,0.864,12,1.158,19,0.666,22,2.268,24,0.36,33,0.036,34,0.36,35,0.219,39,0.867,42,0.625,68,0.864,69,0.782,70,1.158,72,0.024,73,0.024,133,1.5,143,3.104,147,2.752,161,4.664,162,2.688,163,1.829,164,4.902,165,0.412,166,1.055,167,1.914,168,4.902,169,0.958,170,5.237,171,2.674,172,4.345,173,0.864,174,3.241,175,5.237,176,3.252,177,5.743,178,0.983,179,4.345,180,1.055,181,0.705,182,0.958,183,4.345,184,3.241,185,1.081,186,1.569,187,3.241,188,4.345,189,1.569,190,3.241,191,3.241,192,4.902,193,3.604,194,3.241,195,4.345,196,1.835,197,2.688,198,1.037,199,3.241,200,4.345,201,3.241,202,2.324,203,2.688,204,3.241,205,4.345,206,4.032,207,3.241,208,5.237,209,3.241,210,3.241,211,2.688,212,3.241,213,3.241]],["title/components/ContactComponent.html",[0,0.09,44,0.557]],["body/components/ContactComponent.html",[0,0.11,1,0.37,2,0.836,3,0.229,4,0.198,5,0.601,6,1.05,7,0.601,8,0.601,9,0.198,11,0.548,12,1.532,13,1.518,15,1.601,17,0.916,19,0.483,22,1.758,24,0.229,33,0.036,34,0.229,35,0.139,36,0.453,37,0.916,38,0.916,39,0.411,40,1.242,41,0.601,42,0.777,43,0.601,44,0.765,45,0.601,46,0.411,47,0.601,48,0.411,49,0.548,50,0.601,51,0.37,52,0.601,53,0.37,54,0.601,55,0.411,56,0.601,57,0.411,58,0.601,59,0.37,60,0.601,61,0.37,62,0.601,63,0.411,64,0.499,65,0.601,66,0.411,67,0.601,68,0.548,69,0.37,70,0.548,71,0.601,72,0.018,73,0.018,125,1.303,140,0.952,151,3.047,163,1.32,165,0.261,166,0.761,167,0.721,169,0.691,171,2.169,173,0.548,178,0.93,180,0.499,181,0.693,182,0.453,185,0.691,186,1.004,189,1.543,198,0.658,206,2.249,214,1.706,215,3.799,216,3.135,217,3.058,218,3.799,219,3.799,220,3.272,221,3.047,222,2.057,223,3.052,224,1.757,225,3.135,226,2.057,227,2.057,228,1.464,229,1.464,230,2.057,231,2.406,232,2.73,233,2.057,234,2.057,235,2.057,236,2.057,237,0.952,238,1.475,239,2.057,240,3.135,241,3.135,242,3.135,243,2.057,244,3.135,245,3.135,246,1.776,247,3.135,248,2.057,249,3.799,250,2.057,251,2.335,252,2.057,253,3.799,254,2.057,255,3.135,256,3.135,257,2.926,258,1.986,259,3.135,260,0.658,261,2.057,262,2.59,263,2.998,264,2.057,265,4.391,266,5.294,267,1.303,268,1.303,269,1.165,270,2.057,271,2.73,272,2.057,273,2.057,274,2.152,275,2.59,276,2.152,277,1.776,278,2.406,279,2.057,280,2.59,281,3.457,282,2.406,283,2.231,284,1.706,285,1.776,286,1.165,287,1.165,288,2.406,289,2.057,290,2.406,291,3.457,292,2.057,293,1.475,294,1.05,295,1.776,296,2.057,297,2.057,298,1.706,299,3.135,300,2.057,301,0.952,302,2.057,303,2.057,304,2.057,305,3.047,306,1.475,307,1.475,308,1.303,309,2.057,310,1.165,311,1.165,312,1.303,313,2.057,314,1.475,315,2.057,316,2.057,317,2.249,318,2.057,319,1.706,320,1.986,321,1.986,322,1.776,323,1.303]],["title/injectables/ContactService.html",[223,1.961,324,1.303]],["body/injectables/ContactService.html",[3,0.444,4,0.383,9,0.383,14,2.259,19,0.688,24,0.444,31,3.209,32,2.259,33,0.036,34,0.444,35,0.27,42,0.715,72,0.028,73,0.028,165,0.507,166,1.206,167,1.897,169,1.096,173,1.063,178,0.974,180,1.206,181,0.779,182,1.096,185,0.879,189,1.277,196,2.259,198,1.277,223,3.148,228,1.277,229,1.277,324,2.092,325,2.527,326,3.309,327,5.414,328,4.97,329,3.309,330,4.97,331,3.565,332,4.97,333,3.99,334,4.97,335,3.883,336,4.97,337,2.527,338,1.846,339,3.99]],["title/components/ErrorsComponent.html",[0,0.09,46,0.618]],["body/components/ErrorsComponent.html",[0,0.124,1,0.452,2,0.97,3,0.279,4,0.241,5,0.734,6,1.283,7,0.734,8,0.734,9,0.241,11,0.67,12,1.585,13,1.574,15,1.858,17,1.063,19,0.463,22,1.979,24,0.279,28,1.744,29,1.283,30,1.283,33,0.036,34,0.279,35,0.17,36,0.554,37,1.063,38,1.063,39,0.502,40,1.37,41,0.734,42,0.674,43,0.734,44,0.452,45,0.734,46,0.936,47,0.734,48,0.502,49,0.67,50,0.734,51,0.452,52,0.734,53,0.452,54,0.734,55,0.502,56,0.734,57,0.502,58,0.734,59,0.452,60,0.734,61,0.452,62,0.734,63,0.502,64,0.61,65,0.734,66,0.502,67,0.734,68,0.67,69,0.452,70,0.67,71,0.734,72,0.02,73,0.02,159,2.304,163,1.532,165,0.463,166,0.883,169,0.802,171,2.394,173,0.67,178,0.963,180,0.61,181,0.716,182,0.554,185,0.802,186,1.165,189,1.501,220,1.592,228,1.165,229,1.165,251,2.54,257,2.422,258,1.592,260,0.804,262,2.655,263,2.938,267,1.592,269,1.423,271,1.423,274,2.061,275,2.061,276,2.422,277,1.423,280,1.423,281,1.802,282,1.423,283,2.476,285,1.423,286,2.061,287,2.422,288,2.061,294,1.283,295,1.423,301,1.684,305,1.802,306,1.802,307,1.802,308,1.592,310,1.423,311,1.423,312,1.592,314,1.802,322,2.061,340,2.085,341,3.639,342,4.277,343,3.639,344,3.151,345,4.277,346,4.689,347,4.689,348,2.61,349,3.151,350,2.304,351,3.151,352,2.513,353,3.639,354,2.513,355,2.422,356,2.513,357,2.513,358,2.513,359,4.277,360,2.513,361,2.304,362,2.085,363,2.513,364,1.592,365,2.513,366,1.592,367,2.61,368,3.639,369,1.592,370,1.423,371,1.592,372,2.061,373,1.592,374,3.018,375,2.513,376,1.592,377,2.085,378,2.085,379,2.513,380,2.513,381,1.592,382,2.304,383,3.018,384,2.085,385,2.61,386,2.513,387,1.802,388,1.423,389,2.085,390,1.802,391,2.085,392,2.513]],["title/components/GameOverComponent.html",[0,0.09,48,0.618]],["body/components/GameOverComponent.html",[0,0.143,1,0.592,2,1.17,3,0.366,4,0.316,5,0.961,7,0.961,8,0.961,9,0.316,11,0.877,12,1.647,13,1.639,17,1.282,19,0.418,24,0.366,33,0.035,34,0.366,35,0.222,36,0.725,37,1.282,38,1.282,39,0.656,40,1.54,41,0.961,42,0.71,43,0.961,44,0.592,45,0.961,46,0.656,47,0.961,48,1.051,49,1.58,50,0.961,51,0.592,52,0.961,53,0.592,54,0.961,55,0.656,56,0.961,57,0.656,58,0.961,59,0.592,60,0.961,61,0.592,62,0.961,63,0.656,64,1.421,65,0.961,66,0.656,67,0.961,68,0.877,69,0.592,70,0.877,71,0.961,72,0.025,73,0.025,107,3.778,165,0.418,169,0.967,178,0.888,181,0.631,185,0.725,186,1.053,260,1.053,301,2.031,348,3.147,350,2.779,351,3.476,355,2.796,361,2.779,366,2.083,393,4.37,394,2.728,395,5.268,396,4.388,397,2.24,398,4.388,399,5.268,400,2.485,401,3.289,402,3.289,403,3.289,404,4.388,405,4.388]],["title/components/HomeComponent.html",[0,0.09,51,0.557]],["body/components/HomeComponent.html",[0,0.096,1,0.299,2,0.707,3,0.185,4,0.16,5,0.486,7,0.486,8,0.486,9,0.16,11,0.443,12,1.467,13,1.45,17,0.776,19,0.561,21,1.191,22,1.533,23,1.052,24,0.185,25,2.098,26,2.619,27,1.191,28,1.545,29,0.848,30,0.848,31,2.143,32,0.941,33,0.036,34,0.185,35,0.112,36,0.366,37,0.776,38,0.776,39,0.332,40,1.106,41,0.486,42,0.666,43,0.486,44,0.299,45,0.486,46,0.332,47,0.486,48,0.332,49,1.102,50,0.486,51,0.681,52,0.486,53,0.299,54,0.486,55,0.332,56,0.486,57,0.332,58,0.486,59,0.299,60,0.486,61,0.299,62,0.486,63,0.332,64,1.302,65,0.486,66,0.332,67,0.776,68,0.443,69,0.299,70,0.443,71,0.486,72,0.015,73,0.015,140,1.228,143,1.681,163,1.117,165,0.211,166,0.644,167,0.93,169,0.585,171,1.932,173,0.443,178,1.055,180,0.918,181,0.772,182,0.834,185,1.12,186,1.627,189,1.324,193,1.378,198,0.532,202,2.714,224,1.622,228,1.717,229,1.691,231,2.143,232,3.039,237,0.769,238,1.191,246,2.497,251,0.848,283,1.751,284,2.748,319,1.378,323,1.052,331,2.376,338,1.914,344,3.346,349,2.098,364,1.052,385,1.191,397,1.355,400,3.08,406,1.378,407,2.654,408,2.654,409,4.41,410,2.748,411,2.748,412,2.748,413,3.314,414,3.314,415,3.314,416,3.314,417,3.314,418,2.654,419,2.654,420,2.654,421,3.784,422,3.784,423,3.784,424,3.784,425,3.784,426,3.139,427,2.201,428,2.654,429,1.378,430,2.654,431,1.378,432,1.661,433,3.139,434,2.654,435,2.654,436,1.661,437,2.748,438,2.654,439,3.314,440,1.661,441,1.661,442,2.654,443,1.378,444,2.654,445,1.661,446,1.661,447,1.661,448,1.661,449,1.661,450,1.661,451,1.661,452,1.661,453,3.139,454,1.661,455,1.661,456,1.661,457,1.661,458,1.661,459,1.661,460,1.661,461,1.661,462,2.201,463,1.661,464,1.661,465,0.769,466,1.378,467,1.661,468,1.661,469,2.748,470,1.378,471,1.355,472,1.661,473,2.748,474,1.378,475,1.661,476,1.661,477,1.661,478,1.661,479,1.378,480,1.661,481,1.661,482,2.654,483,1.661,484,1.661,485,1.661,486,1.661,487,1.661,488,3.314,489,1.661,490,1.661,491,2.654,492,2.654,493,4.957,494,2.654,495,3.784,496,1.661,497,3.314,498,1.661,499,1.661,500,1.661,501,1.661,502,1.661,503,1.661,504,1.191,505,1.661,506,1.661,507,1.661,508,2.654,509,1.661,510,1.661,511,1.661,512,1.191,513,2.201,514,1.378,515,1.661,516,1.661,517,1.661,518,1.661,519,2.654,520,3.139,521,2.654,522,2.654,523,2.654,524,1.661,525,1.661]],["title/components/LoginComponent.html",[0,0.09,53,0.557]],["body/components/LoginComponent.html",[0,0.09,1,0.27,2,0.651,3,0.167,4,0.144,5,0.438,6,0.766,7,0.438,8,0.438,9,0.144,11,0.4,12,1.433,13,1.414,15,1.248,17,0.714,19,0.535,23,0.95,24,0.167,28,1.556,29,0.766,30,0.766,33,0.036,34,0.167,35,0.101,36,0.331,37,0.714,38,0.714,39,0.299,40,1.042,41,0.438,42,0.513,43,0.438,44,0.27,45,0.438,46,0.299,47,0.438,48,0.299,49,0.4,50,0.438,51,0.27,52,0.438,53,0.642,54,0.438,55,0.299,56,0.438,57,0.299,58,0.438,59,0.27,60,0.438,61,0.27,62,0.438,63,0.299,64,0.364,65,0.438,66,0.299,67,0.438,68,0.4,69,0.27,70,0.4,71,0.438,72,0.014,73,0.014,105,0.85,133,0.694,140,1.431,147,3.254,148,2.258,165,0.191,166,0.593,167,1.376,169,0.539,173,0.4,176,2.514,178,0.885,180,0.364,181,0.565,182,0.331,185,0.865,186,1.257,189,1.141,196,0.85,198,0.48,217,1.384,220,0.95,221,2.557,224,1.475,228,0.99,229,0.99,231,1.384,237,0.694,246,1.384,251,0.766,257,2.384,260,1.347,262,2.71,263,3.191,265,1.244,267,1.548,268,0.95,269,2.621,271,2.852,274,2.019,275,1.751,276,2.621,277,2.223,278,1.548,280,1.384,282,1.751,283,0.694,285,2.384,286,2.223,287,2.514,288,2.019,290,1.959,291,1.753,293,2.816,294,1.248,295,1.384,301,0.694,310,2.019,311,2.019,312,0.95,317,1.076,320,1.548,321,1.548,322,2.384,323,0.95,335,1.076,338,1.431,349,2.486,364,1.959,367,2.218,369,1.548,370,1.384,371,1.548,372,2.223,373,1.548,376,1.548,377,1.244,381,1.959,382,2.258,385,1.076,387,2.218,388,1.384,390,1.076,465,2.378,471,2.363,504,1.076,514,1.244,526,1.244,527,3.093,528,2.444,529,3.093,530,3.093,531,2.565,532,3.566,533,3.566,534,3.566,535,3.566,536,1.076,537,2.444,538,1.5,539,1.5,540,1.5,541,1.5,542,1.5,543,1.5,544,2.958,545,1.5,546,1.5,547,2.218,548,1.5,549,2.218,550,1.5,551,2.565,552,3.093,553,3.093,554,3.093,555,3.093,556,3.093,557,1.5,558,3.926,559,3.093,560,3.093,561,2.218,562,3.093,563,3.093,564,3.093,565,2.218,566,2.218,567,3.093,568,1.244,569,1.5,570,1.5,571,5.138,572,2.027,573,2.444,574,1.5,575,5.138,576,2.444,577,4.628,578,1.5,579,2.444,580,2.444,581,1.244,582,1.753,583,1.076,584,1.244,585,1.244,586,2.816,587,1.244,588,1.076,589,1.244,590,2.027,591,2.218,592,1.244,593,1.244,594,2.565,595,1.5,596,3.093,597,2.444,598,1.244,599,1.244,600,3.97,601,1.244,602,1.244,603,1.244,604,3.257,605,2.565,606,2.444,607,1.5,608,2.444,609,2.444,610,3.926,611,1.5,612,3.093,613,2.565,614,2.027,615,3.566,616,1.5,617,1.5,618,1.5,619,1.5,620,1.5,621,1.5,622,1.5,623,1.5,624,1.5]],["title/guards/LoginGuardian.html",[136,1.961,137,1.961]],["body/guards/LoginGuardian.html",[3,0.435,4,0.376,9,0.376,14,2.215,19,0.682,24,0.435,33,0.035,34,0.435,35,0.264,42,0.706,72,0.028,73,0.028,133,1.81,134,4.808,137,3.109,163,1.646,165,0.497,167,1.37,169,1.082,173,1.042,176,3.399,178,0.883,180,1.191,181,0.706,182,1.082,185,0.862,198,1.252,224,1.972,231,2.78,232,2.215,237,1.81,246,2.215,324,2.066,337,2.477,338,2.272,625,3.911,626,4.45,627,3.244,628,3.911,629,3.911,630,4.909,631,3.911,632,5.627,633,5.365,634,5.627,635,3.911,636,4.909,637,3.911,638,3.911,639,3.911]],["title/components/NavbarComponent.html",[0,0.09,55,0.618]],["body/components/NavbarComponent.html",[0,0.145,1,0.602,2,1.183,3,0.372,4,0.321,5,0.977,7,0.977,8,0.977,9,0.321,11,0.892,12,1.65,13,1.643,17,1.297,19,0.633,24,0.372,33,0.035,34,0.372,35,0.226,36,0.737,37,1.297,38,1.297,39,0.667,40,1.55,41,0.977,42,0.763,43,0.977,44,0.602,45,0.977,46,0.667,47,0.977,48,0.667,49,0.892,50,0.977,51,0.602,52,0.977,53,0.602,54,0.977,55,1.058,56,0.977,57,0.667,58,0.977,59,0.602,60,0.977,61,0.602,62,0.977,63,0.667,64,0.812,65,0.977,66,0.667,67,0.977,68,0.892,69,0.602,70,0.892,71,0.977,72,0.025,73,0.025,133,1.548,143,2.81,149,3.182,151,3.182,165,0.425,167,1.172,169,0.978,173,0.892,176,3.213,178,0.798,180,0.812,181,0.481,182,0.737,185,0.737,186,1.42,198,1.071,224,2.028,237,1.548,397,2.265,565,2.399,566,2.399,640,2.774,641,4.437,642,4.437,643,4.437,644,4.706,645,3.345,646,3.345,647,3.345,648,3.345,649,2.774]],["title/components/PauseComponent.html",[0,0.09,57,0.618]],["body/components/PauseComponent.html",[0,0.141,1,0.575,2,1.147,3,0.355,4,0.307,5,0.934,7,0.934,8,0.934,9,0.307,11,0.852,12,1.64,13,1.633,17,1.258,19,0.406,21,2.291,24,0.355,33,0.036,34,0.355,35,0.216,36,0.704,37,1.258,38,1.258,39,0.638,40,1.522,41,0.934,42,0.749,43,0.934,44,0.575,45,0.934,46,0.638,47,0.934,48,0.638,49,1.297,50,0.934,51,0.575,52,0.934,53,0.575,54,0.934,55,0.638,56,0.934,57,1.039,58,0.934,59,0.575,60,0.934,61,0.575,62,0.934,63,0.638,64,0.775,65,0.934,66,0.638,67,0.934,68,0.852,69,0.575,70,0.852,71,0.934,72,0.024,73,0.024,165,0.406,169,0.949,178,0.937,180,0.775,181,0.619,182,0.704,185,0.949,186,1.377,202,3.734,260,1.022,350,2.725,351,3.082,355,2.756,361,2.725,366,2.023,367,3.086,397,2.197,427,3.569,431,2.65,433,4.319,443,2.65,513,2.65,650,2.65,651,4.303,652,4.303,653,4.303,654,4.303,655,4.319,656,4.303,657,3.195,658,3.195,659,4.303,660,4.303,661,4.303,662,3.195,663,3.195,664,3.569,665,4.303,666,4.303,667,4.303]],["title/components/RegisterComponent.html",[0,0.09,59,0.557]],["body/components/RegisterComponent.html",[0,0.107,1,0.353,2,0.805,3,0.218,4,0.188,5,0.573,6,1,7,0.573,8,0.573,9,0.188,11,0.522,12,1.518,13,1.503,15,1.542,17,0.883,19,0.527,23,1.241,24,0.218,33,0.036,34,0.218,35,0.132,36,0.432,37,0.883,38,0.883,39,0.391,40,1.211,41,0.573,42,0.596,43,0.573,44,0.353,45,0.573,46,0.391,47,0.573,48,0.391,49,0.522,50,0.573,51,0.353,52,0.573,53,0.353,54,0.573,55,0.391,56,0.573,57,0.391,58,0.573,59,0.745,60,0.573,61,0.353,62,0.573,63,0.391,64,0.476,65,0.573,66,0.391,67,0.573,68,0.522,69,0.353,70,0.522,71,0.573,72,0.017,73,0.017,105,1.11,125,1.241,133,0.907,140,1.398,148,3.436,165,0.249,166,0.733,167,0.687,169,0.666,173,0.522,176,2.79,178,0.851,180,0.476,181,0.596,182,0.432,185,0.666,186,0.967,189,1.18,198,0.627,217,2.678,220,1.241,221,2.971,224,1.657,228,0.967,229,0.967,231,1.11,237,0.907,246,1.11,251,1.542,257,2.678,258,1.241,260,1.326,262,2.346,263,3.158,267,1.913,268,1.241,269,2.534,271,2.678,274,2.088,275,1.11,276,2.678,277,2.088,278,1.241,280,1.711,282,1.11,283,0.907,285,2.088,286,2.088,287,2.534,288,2.346,290,1.913,291,1.405,293,2.644,294,1.882,295,1.711,301,0.907,308,1.241,310,1.711,311,1.711,320,1.241,321,1.241,322,2.088,323,1.913,338,0.907,349,2.834,364,1.241,369,1.913,370,1.711,371,1.913,372,2.088,373,1.241,376,1.241,381,1.241,382,2.335,387,2.971,388,1.711,471,2.414,536,1.405,544,3.712,547,2.971,549,3.534,551,1.625,565,1.405,566,1.405,581,1.625,582,2.167,583,1.405,584,2.506,585,1.625,586,2.644,587,1.625,588,1.405,589,1.625,590,2.506,591,1.405,592,1.625,593,1.625,594,1.625,600,1.625,601,1.625,602,2.506,603,1.625,604,1.625,605,2.506,613,2.506,614,1.625,649,2.506,668,1.625,669,3.021,670,3.021,671,3.687,672,3.021,673,3.687,674,3.687,675,4.728,676,3.021,677,1.96,678,1.96,679,1.96,680,3.687,681,1.96,682,2.506,683,3.021,684,1.96,685,3.687,686,1.96,687,3.021,688,1.96,689,1.96,690,1.625,691,1.96,692,3.021,693,1.96,694,1.96,695,1.96,696,1.96,697,1.96,698,1.96,699,3.021,700,2.506,701,1.96,702,1.96,703,3.687,704,3.687,705,4.143,706,3.021,707,3.021,708,3.021,709,3.021,710,3.021,711,1.96,712,2.506,713,3.021,714,1.96,715,1.96,716,1.96,717,1.96,718,1.96,719,1.96,720,1.405,721,1.96,722,1.96]],["title/components/ScoreItemComponent.html",[0,0.09,63,0.618]],["body/components/ScoreItemComponent.html",[0,0.148,1,0.628,2,1.216,3,0.388,4,0.335,5,1.02,7,1.02,8,1.02,9,0.335,11,0.93,12,1.658,13,1.652,17,1.333,19,0.443,24,0.388,33,0.035,34,0.388,35,0.236,36,0.769,37,1.333,38,1.333,39,0.696,40,1.576,41,1.02,42,0.731,43,1.02,44,0.628,45,1.02,46,0.696,47,1.02,48,0.696,49,0.93,50,1.02,51,0.628,52,1.02,53,0.628,54,1.02,55,0.696,56,1.02,57,0.696,58,1.02,59,0.628,60,1.02,61,0.628,62,1.02,63,1.076,64,1.469,65,1.02,66,0.696,67,1.02,68,0.93,69,0.628,70,0.93,71,1.02,72,0.026,73,0.026,123,3.272,165,0.443,178,0.628,181,0.656,189,1.117,301,2.111,348,3.272,397,2.329,400,1.976,723,3.785,724,2.894,725,4.563,726,4.563,727,4.563,728,3.489,729,3.489,730,2.894,731,2.894,732,4.563,733,4.563]],["title/components/ScoreboardsComponent.html",[0,0.09,61,0.557]],["body/components/ScoreboardsComponent.html",[0,0.137,1,0.543,2,1.103,3,0.335,4,0.29,5,0.881,7,0.881,8,0.881,9,0.29,11,0.804,12,1.628,13,1.62,17,1.209,19,0.526,22,2.186,24,0.335,33,0.036,34,0.335,35,0.204,36,0.665,37,1.209,38,1.209,39,0.602,40,1.486,41,0.881,42,0.731,43,0.881,44,0.543,45,0.881,46,0.602,47,0.881,48,0.602,49,0.804,50,0.881,51,0.543,52,0.881,53,0.543,54,0.881,55,0.602,56,0.881,57,0.602,58,0.881,59,0.543,60,0.881,61,0.915,62,0.881,63,0.602,64,0.732,65,0.881,66,0.602,67,0.881,68,0.804,69,0.543,70,0.804,71,0.881,72,0.023,73,0.023,149,2.968,163,1.742,165,0.383,166,1.004,169,0.912,171,2.596,173,0.804,178,0.915,180,0.732,181,0.595,182,0.665,185,0.912,186,1.627,198,0.965,211,3.433,224,1.929,228,0.965,229,0.965,237,1.396,238,2.163,372,2.343,397,2.113,536,2.163,730,4.975,731,4.565,734,2.502,735,4.138,736,4.138,737,4.724,738,5.084,739,3.016,740,3.016,741,3.016,742,2.968,743,4.138,744,4.138,745,3.433,746,3.433,747,3.016,748,3.016,749,3.016,750,3.016,751,3.016,752,3.016]],["title/components/SettingsComponent.html",[0,0.09,66,0.618]],["body/components/SettingsComponent.html",[0,0.104,1,0.334,2,0.772,3,0.207,4,0.178,5,0.543,6,0.948,7,0.543,8,0.543,9,0.178,11,0.495,12,1.502,13,1.486,15,1.479,17,0.847,19,0.453,22,1.649,24,0.207,28,1.8,29,0.948,30,0.948,33,0.036,34,0.207,35,0.126,36,0.409,37,0.847,38,0.847,39,0.371,40,1.176,41,0.543,42,0.579,43,0.543,44,0.334,45,0.543,46,0.371,47,0.543,48,0.371,49,0.495,50,0.543,51,0.334,52,0.543,53,0.334,54,0.543,55,0.371,56,0.543,57,0.371,58,0.543,59,0.334,60,0.543,61,0.334,62,0.543,63,0.371,64,0.451,65,0.543,66,0.803,67,1.687,68,0.495,69,0.334,70,0.495,71,0.543,72,0.016,73,0.016,105,1.052,140,2.141,163,1.22,165,0.236,166,0.703,169,0.639,171,2.055,173,0.495,178,0.899,180,0.451,181,0.512,182,0.409,185,0.786,186,1.141,228,0.928,229,1.481,232,1.641,257,2.28,258,1.176,260,1.397,262,2.472,263,2.909,268,1.176,269,2.28,271,2.62,274,2.018,275,2.472,276,2.736,277,2.018,278,1.176,280,2.018,281,1.332,282,2.28,283,2.476,285,1.052,286,1.641,287,2.018,288,1.641,290,2.257,294,1.479,295,1.052,298,1.541,301,0.859,305,1.332,306,2.887,307,1.332,308,1.176,310,1.052,311,1.052,312,2.257,314,1.332,317,1.332,320,1.176,321,1.176,322,2.018,344,1.835,350,1.835,351,2.765,355,2.018,361,1.835,362,1.541,366,1.176,369,1.176,370,3.03,371,1.176,372,1.641,373,1.176,374,2.404,376,1.176,378,1.541,381,1.176,382,2.257,383,1.541,384,1.541,388,2.018,389,2.404,390,2.887,391,3.339,411,3.621,412,3.621,429,1.541,453,2.404,469,2.404,470,2.404,471,1.479,473,2.404,474,2.404,479,3.339,504,1.332,547,1.332,582,1.332,583,1.332,586,2.078,588,1.332,591,1.332,598,2.956,599,1.541,682,1.541,720,1.332,742,2.078,753,1.541,754,3.563,755,2.898,756,4.026,757,4.026,758,2.898,759,1.857,760,1.857,761,1.857,762,1.857,763,4.026,764,4.026,765,4.026,766,1.857,767,1.857,768,1.857,769,1.857,770,2.898,771,2.898,772,2.898,773,2.898,774,1.857,775,1.857,776,2.898,777,1.857,778,1.857,779,3.563,780,3.563,781,3.563,782,3.563,783,3.563,784,1.857,785,4.026,786,1.857,787,4.626,788,1.857,789,1.857,790,1.857,791,1.857,792,1.857,793,2.898,794,4.026,795,2.404,796,1.857,797,1.857,798,1.857,799,4.626,800,1.857,801,2.898,802,1.857,803,1.857,804,1.857,805,1.857,806,1.857,807,3.563,808,1.857,809,1.857,810,1.857,811,3.563,812,1.857,813,2.898,814,1.857,815,1.857,816,1.857,817,1.857,818,2.898,819,1.857]],["title/injectables/SnakeCommunicationsService.html",[28,1.085,324,1.303]],["body/injectables/SnakeCommunicationsService.html",[3,0.221,4,0.191,9,0.191,14,1.125,19,0.604,24,0.221,25,1.933,26,2.851,27,1.424,28,1.07,31,2.363,32,1.125,33,0.036,34,0.221,35,0.134,42,0.684,64,1.093,72,0.017,73,0.017,125,3.236,140,2.364,165,0.252,166,0.741,167,1.936,169,0.673,173,0.529,178,1.043,180,1.154,181,0.794,182,1.048,185,1.2,189,1.521,196,1.125,198,0.636,203,1.647,228,1.335,229,1.335,251,2.13,260,1.677,324,1.285,325,1.258,329,1.647,331,2.189,335,4.257,337,1.258,338,2.476,344,3.921,355,2.105,370,2.363,400,3.128,410,1.647,426,2.532,437,1.647,465,0.919,466,1.647,471,1.558,512,1.424,561,1.424,572,1.647,655,3.461,690,1.647,795,3.461,820,4.843,821,1.647,822,3.717,823,3.717,824,3.717,825,3.052,826,4.172,827,4.172,828,4.172,829,4.172,830,3.052,831,3.052,832,3.052,833,3.717,834,4.172,835,3.052,836,1.986,837,1.986,838,1.986,839,1.986,840,1.986,841,1.986,842,1.986,843,1.986,844,3.052,845,1.986,846,3.052,847,1.986,848,3.052,849,1.986,850,1.986,851,3.052,852,3.052,853,1.986,854,1.986,855,4.951,856,1.986,857,3.052,858,1.986,859,1.986,860,1.986,861,1.986,862,1.986,863,1.986,864,1.986,865,1.986,866,1.647,867,1.986,868,3.717,869,1.986,870,1.986,871,1.986,872,1.986,873,1.986,874,1.986,875,1.986,876,1.986,877,1.986,878,1.986,879,1.986,880,1.986,881,1.986,882,1.986,883,1.986,884,1.986,885,1.986,886,1.986,887,3.717,888,1.986,889,3.052,890,3.052,891,1.986,892,1.986,893,1.986,894,1.986,895,1.986,896,1.986,897,1.986,898,1.986,899,5.35,900,4.172,901,1.986,902,1.986,903,1.986,904,1.986,905,1.986,906,1.986,907,1.986,908,1.986,909,1.986,910,1.986,911,1.986,912,1.986,913,1.986]],["title/classes/User.html",[35,0.209,465,1.433]],["body/classes/User.html",[3,0.427,4,0.369,9,0.369,33,0.036,34,0.427,35,0.26,42,0.698,64,1.399,72,0.027,73,0.027,165,0.488,166,1.178,178,1.006,181,0.804,182,1.334,189,1.885,217,3.265,294,2.479,400,2.749,465,2.846,914,3.843,915,3.188,916,5.322,917,5.322,918,3.843,919,6.05,920,6.05,921,3.843,922,3.843,923,3.843,924,4.855,925,4.027]],["title/injectables/UserService.html",[224,1.085,324,1.303]],["body/injectables/UserService.html",[3,0.337,4,0.291,9,0.291,14,1.717,19,0.602,24,0.337,33,0.036,34,0.337,35,0.205,42,0.681,72,0.023,73,0.023,115,2.174,147,2.63,148,2.63,165,0.385,166,1.008,167,1.66,169,0.915,173,0.808,178,1.034,180,1.15,181,0.733,182,1.044,185,1.215,189,1.329,198,0.97,217,2.352,224,1.455,228,0.97,229,0.97,260,1.329,324,1.748,325,1.92,337,1.92,338,2.698,465,2.192,471,2.601,531,4.572,549,3.397,561,3.397,644,4.226,926,2.514,927,5.095,928,5.095,929,5.095,930,3.031,931,5.337,932,4.153,933,4.737,934,4.153,935,3.031,936,3.031,937,3.031,938,3.031,939,3.031,940,3.031,941,3.031,942,3.031,943,3.031,944,3.031,945,3.031,946,3.031,947,3.031,948,3.031,949,2.514,950,2.514,951,2.514,952,3.031,953,3.031,954,3.031,955,3.031,956,3.031,957,3.031,958,3.031,959,4.737,960,4.737,961,4.737,962,5.095,963,5.095,964,4.737,965,4.153,966,3.031,967,3.031,968,3.031,969,3.031]],["title/coverage.html",[970,3.495]],["body/coverage.html",[0,0.179,1,0.657,9,0.351,10,3.031,28,1.28,33,0.036,35,0.247,39,0.729,44,0.657,46,0.729,48,0.729,51,0.657,53,0.657,55,0.729,57,0.729,59,0.657,61,0.657,63,0.729,66,0.729,69,0.657,72,0.026,73,0.026,107,2.62,116,2.62,123,2.62,136,2.314,137,2.314,161,3.031,162,3.031,181,0.525,214,3.031,223,2.314,224,1.28,260,1.169,283,2.919,324,2.188,326,3.031,340,3.031,393,3.031,394,3.031,406,3.031,465,1.691,526,3.031,626,3.031,627,3.031,640,3.031,650,3.031,668,3.031,723,3.031,724,3.031,734,3.031,746,3.031,753,3.031,820,3.031,821,3.031,915,3.031,925,3.031,926,3.031,970,3.031,971,3.654,972,3.654,973,4.701,974,3.654,975,5.198,976,3.654,977,4.701,978,3.654,979,4.701,980,3.654,981,4.701,982,3.654,983,3.654,984,3.654,985,3.031,986,3.654,987,3.654,988,3.654,989,3.654]],["title/dependencies.html",[77,2.107,990,1.859]],["body/dependencies.html",[24,0.471,33,0.036,72,0.029,73,0.029,77,2.399,96,3.988,97,3.699,105,2.399,133,1.961,159,2.683,196,2.399,197,3.514,949,3.514,950,4.278,951,3.514,991,4.237,992,6.207,993,4.237,994,4.237,995,4.237,996,4.237,997,4.237,998,3.514,999,4.237,1000,4.237,1001,3.514,1002,4.237,1003,4.237,1004,4.237,1005,4.237,1006,4.237,1007,4.237,1008,4.237,1009,4.237,1010,4.237,1011,4.237]],["title/miscellaneous/enumerations.html",[1012,1.641,1013,3.086]],["body/miscellaneous/enumerations.html",[25,3.489,26,3.489,33,0.031,72,0.031,73,0.031,165,0.602,388,2.68,520,3.926,664,3.926,720,3.394,1012,2.997,1013,3.926,1014,5.509,1015,4.733,1016,4.733,1017,4.733,1018,3.926,1019,4.733,1020,4.733]],["title/index.html",[165,0.329,512,1.859,1021,2.592]],["body/index.html",[0,0.155,4,0.372,33,0.027,42,0.557,72,0.027,73,0.027,90,2.455,159,3.092,163,1.632,206,2.78,260,1.241,462,3.216,568,3.216,700,4.432,712,3.216,866,4.653,990,2.78,998,3.216,1018,4.049,1022,4.882,1023,3.877,1024,5.344,1025,5.344,1026,3.216,1027,3.877,1028,5.781,1029,5.991,1030,3.877,1031,3.877,1032,3.877,1033,3.877,1034,3.877,1035,3.877,1036,3.877,1037,3.877,1038,3.877,1039,3.877,1040,3.877,1041,5.344,1042,3.877,1043,3.877,1044,3.877,1045,3.877,1046,3.877,1047,4.882,1048,5.609,1049,3.877,1050,4.882,1051,4.882,1052,3.877,1053,5.902,1054,3.877,1055,3.877,1056,3.877,1057,4.882,1058,3.877,1059,3.877,1060,3.877,1061,3.877,1062,3.877,1063,3.877,1064,5.344,1065,3.877,1066,2.78,1067,3.877]],["title/modules.html",[76,2.151]],["body/modules.html",[33,0.031,72,0.031,73,0.031,75,2.709,76,2.442,87,2.709,97,3.976,153,3.029,1068,5.543,1069,5.543,1070,5.853,1071,4.783,1072,4.783]],["title/overview.html",[1066,3.022]],["body/overview.html",[1,1.08,2,0.935,28,1.787,33,0.036,35,0.237,36,0.774,39,0.7,44,0.917,46,1.018,48,1.018,51,0.917,53,0.917,55,1.018,57,1.079,59,0.972,61,0.917,63,1.018,66,1.018,69,0.917,72,0.026,73,0.026,74,1.792,75,3.652,76,1.792,77,1.987,78,2.517,79,2.517,80,2.517,81,2.223,82,2.911,83,2.911,84,2.911,85,2.911,86,2.911,87,3.061,88,3.285,89,2.517,90,2.223,136,2.223,153,3.55,154,2.911,325,2.223,742,3.657,745,3.799,1066,2.517,1073,3.51]],["title/properties.html",[166,0.903,990,1.859]],["body/properties.html",[33,0.033,72,0.032,73,0.032,166,1.196,1026,4.089,1074,4.929]],["title/miscellaneous/variables.html",[1012,1.641,1075,3.086]],["body/miscellaneous/variables.html",[33,0.035,72,0.03,73,0.03,116,3.798,165,0.563,181,0.637,228,1.695,229,1.417,232,2.507,985,3.672,1001,3.672,1012,2.803,1075,3.672,1076,4.426,1077,4.426,1078,4.426,1079,4.426,1080,4.426,1081,4.426,1082,5.667,1083,4.426,1084,4.426,1085,4.426,1086,5.296,1087,4.426,1088,4.426,1089,4.426,1090,4.426,1091,4.426,1092,4.426,1093,4.426,1094,4.426,1095,4.426,1096,4.426,1097,4.426,1098,4.426,1099,4.426]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":283,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1074,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":384,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["0.2s",{"_index":313,"title":{},"body":{"components/ContactComponent.html":{}}}],["0.3s",{"_index":390,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["0.5",{"_index":375,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["0.7",{"_index":798,"title":{},"body":{"components/SettingsComponent.html":{}}}],["0.9rem",{"_index":721,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0/1",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":265,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["070b10",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["1",{"_index":742,"title":{},"body":{"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["1.2em",{"_index":299,"title":{},"body":{"components/ContactComponent.html":{}}}],["1.3rem",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["100",{"_index":372,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["100vh",{"_index":716,"title":{},"body":{"components/RegisterComponent.html":{}}}],["10px",{"_index":282,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["12",{"_index":1073,"title":{},"body":{"overview.html":{}}}],["12px",{"_index":717,"title":{},"body":{"components/RegisterComponent.html":{}}}],["13.10.2",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["15px",{"_index":387,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["169384997647",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16px",{"_index":389,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["17.0.0",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["17.1.0",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":998,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["18px",{"_index":386,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["1:169384997647:web:53c3c0e1a388f9bc2ac47a",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b5e20",{"_index":300,"title":{},"body":{"components/ContactComponent.html":{}}}],["1dbf73",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["1em",{"_index":303,"title":{},"body":{"components/ContactComponent.html":{}}}],["1px",{"_index":317,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["2",{"_index":744,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["2.3.0",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":289,"title":{},"body":{"components/ContactComponent.html":{}}}],["20",{"_index":453,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["20px",{"_index":275,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["23px",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["247b56",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["25px",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["2bf73",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2bf73.appspot.com",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2bf73.firebaseapp.com",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":291,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["3",{"_index":745,"title":{},"body":{"components/ScoreboardsComponent.html":{},"overview.html":{}}}],["3.0.5",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":787,"title":{},"body":{"components/SettingsComponent.html":{}}}],["30px",{"_index":381,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["333",{"_index":805,"title":{},"body":{"components/SettingsComponent.html":{}}}],["388e3c",{"_index":292,"title":{},"body":{"components/ContactComponent.html":{}}}],["3ea62d",{"_index":819,"title":{},"body":{"components/SettingsComponent.html":{}}}],["3eff65",{"_index":818,"title":{},"body":{"components/SettingsComponent.html":{}}}],["4.18.2",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["40px",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["4b4f54",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4caf50",{"_index":315,"title":{},"body":{"components/ContactComponent.html":{}}}],["4px",{"_index":305,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["50",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{}}}],["50px",{"_index":272,"title":{},"body":{"components/ContactComponent.html":{}}}],["555",{"_index":806,"title":{},"body":{"components/SettingsComponent.html":{}}}],["5px",{"_index":277,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["6",{"_index":708,"title":{},"body":{"components/RegisterComponent.html":{}}}],["60",{"_index":743,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["600px",{"_index":270,"title":{},"body":{"components/ContactComponent.html":{}}}],["66bb6a",{"_index":309,"title":{},"body":{"components/ContactComponent.html":{}}}],["68f0b0",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["7.8.0",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["757575",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["80",{"_index":746,"title":{},"body":{"components/ScoreboardsComponent.html":{},"coverage.html":{}}}],["8592",{"_index":711,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8px",{"_index":383,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["90",{"_index":802,"title":{},"body":{"components/SettingsComponent.html":{}}}],["95f1c1",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["9999",{"_index":380,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["9px",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["a.points",{"_index":752,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["a:hover",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["absolute",{"_index":377,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{}}}],["abstractcontrol",{"_index":683,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accordingly",{"_index":773,"title":{},"body":{"components/SettingsComponent.html":{}}}],["account",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":632,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["actual_component",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":1060,"title":{},"body":{"index.html":{}}}],["again",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{}}}],["aizasyc4k7mi",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":286,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["already",{"_index":699,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alternative",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular",{"_index":1024,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":197,"title":{},"body":{"directives/BodyClassDirective.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["angular/compiler",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["apikey",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":327,"title":{},"body":{"injectables/ContactService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["app.component",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":160,"title":{},"body":{"modules/AppServerModule.html":{}}}],["appbodyclass",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":815,"title":{},"body":{"components/SettingsComponent.html":{}}}],["appid",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1034,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":900,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["appmodule",{"_index":75,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":87,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":153,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["arial",{"_index":714,"title":{},"body":{"components/RegisterComponent.html":{}}}],["artifacts",{"_index":1043,"title":{},"body":{"index.html":{}}}],["async",{"_index":833,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["auth",{"_index":931,"title":{},"body":{"injectables/UserService.html":{}}}],["auth,private",{"_index":952,"title":{},"body":{"injectables/UserService.html":{}}}],["auth/email",{"_index":698,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authdomain",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":273,"title":{},"body":{"components/ContactComponent.html":{}}}],["automatically",{"_index":1035,"title":{},"body":{"index.html":{}}}],["available",{"_index":1072,"title":{},"body":{"modules.html":{}}}],["await",{"_index":884,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["b",{"_index":750,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["b.points",{"_index":751,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["back",{"_index":713,"title":{},"body":{"components/RegisterComponent.html":{}}}],["background",{"_index":262,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["backgroundcolor",{"_index":345,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["bbb",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["best",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{}}}],["bestscore",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{}}}],["black",{"_index":504,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["block",{"_index":720,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["board",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardarray",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["boardcols",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardcolsitem",{"_index":779,"title":{},"body":{"components/SettingsComponent.html":{}}}],["boardrows",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardrowsitem",{"_index":780,"title":{},"body":{"components/SettingsComponent.html":{}}}],["body",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["bodyclassdirective",{"_index":69,"title":{"directives/BodyClassDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bold",{"_index":321,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["boolean",{"_index":231,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{}}}],["bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["border",{"_index":276,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["bottom",{"_index":290,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["box",{"_index":280,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["break",{"_index":495,"title":{},"body":{"components/HomeComponent.html":{}}}],["browse",{"_index":1070,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["btn:hover",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["build",{"_index":866,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"index.html":{}}}],["button",{"_index":306,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["button:active",{"_index":316,"title":{},"body":{"components/ContactComponent.html":{}}}],["button:hover",{"_index":314,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["c8e6c9",{"_index":279,"title":{},"body":{"components/ContactComponent.html":{}}}],["calc(100",{"_index":808,"title":{},"body":{"components/SettingsComponent.html":{}}}],["canactivate",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{}}}],["canactivate(route",{"_index":631,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["canactivate:[loginguardian",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["capabilities",{"_index":1062,"title":{},"body":{"index.html":{}}}],["case",{"_index":493,"title":{},"body":{"components/HomeComponent.html":{}}}],["catch",{"_index":886,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["catch(error",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["ccc",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["celltype",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/enumerations.html":{}}}],["celltype.block",{"_index":503,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.empty",{"_index":502,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.food",{"_index":505,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.snake",{"_index":506,"title":{},"body":{"components/HomeComponent.html":{}}}],["center",{"_index":287,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["change",{"_index":1037,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":771,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changestatemessage",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{}}}],["changestatemessage(gamestate",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{}}}],["characters",{"_index":709,"title":{},"body":{"components/RegisterComponent.html":{}}}],["check",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["choice",{"_index":1056,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["class.directive",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["class.directive.ts",{"_index":162,"title":{},"body":{"directives/BodyClassDirective.html":{},"coverage.html":{}}}],["class.directive.ts:10",{"_index":179,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:14",{"_index":187,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:22",{"_index":190,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:35",{"_index":184,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["classes",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["cli",{"_index":1025,"title":{},"body":{"index.html":{}}}],["close",{"_index":351,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["closed",{"_index":869,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["closeerrors",{"_index":347,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["closegameover",{"_index":399,"title":{},"body":{"components/GameOverComponent.html":{}}}],["closesettings",{"_index":756,"title":{},"body":{"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":154,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":156,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":155,"title":{},"body":{"modules/AppServerModule.html":{}}}],["code",{"_index":1039,"title":{},"body":{"index.html":{}}}],["col",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["color",{"_index":263,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["colorcell",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{}}}],["colorcell(row",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{}}}],["cols",{"_index":793,"title":{},"body":{"components/SettingsComponent.html":{}}}],["column",{"_index":297,"title":{},"body":{"components/ContactComponent.html":{}}}],["columns",{"_index":854,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["command",{"_index":1057,"title":{},"body":{"index.html":{}}}],["common/enums",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["common/user",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["communications.service",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["communications.service.ts",{"_index":821,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"coverage.html":{}}}],["communications.service.ts:106",{"_index":837,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:12",{"_index":858,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:13",{"_index":860,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:14",{"_index":856,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:15",{"_index":859,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:16",{"_index":835,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:47",{"_index":850,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:62",{"_index":841,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:66",{"_index":839,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:70",{"_index":849,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:76",{"_index":842,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:80",{"_index":843,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:84",{"_index":853,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:89",{"_index":840,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:93",{"_index":847,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:99",{"_index":845,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["conexión",{"_index":874,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["confirmpassword",{"_index":692,"title":{},"body":{"components/RegisterComponent.html":{}}}],["connection",{"_index":890,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.error(\"form",{"_index":701,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.error('error",{"_index":252,"title":{},"body":{"components/ContactComponent.html":{}}}],["console.error(error",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(\"game",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(\"score",{"_index":484,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(\"user",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('connection",{"_index":868,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log('error",{"_index":888,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log('idtoken",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('mail",{"_index":248,"title":{},"body":{"components/ContactComponent.html":{}}}],["console.log('unexpected",{"_index":895,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log(error",{"_index":365,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["console.log(newboardcolsvalue",{"_index":792,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log(this.loginservice.gettoken",{"_index":638,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["console.log(this.userservice.gettoken",{"_index":238,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["const",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["constructor",{"_index":173,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":930,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(contactservice",{"_index":222,"title":{},"body":{"components/ContactComponent.html":{}}}],["constructor(http",{"_index":329,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["constructor(loginservice",{"_index":628,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["constructor(private",{"_index":198,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":362,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(renderer",{"_index":174,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["constructor(router",{"_index":645,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(snakecommunicationsservice",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(snakecomunicationsservice",{"_index":352,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["constructor(userservice",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["contact",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/NavbarComponent.html":{}}}],["contact'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["contact.component.css",{"_index":215,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":216,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact/contact.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["contactcomponent",{"_index":44,"title":{"components/ContactComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactform",{"_index":239,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactservice",{"_index":223,"title":{"injectables/ContactService.html":{}},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"coverage.html":{}}}],["container",{"_index":267,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["content",{"_index":370,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["content.ng",{"_index":804,"title":{},"body":{"components/SettingsComponent.html":{}}}],["continue",{"_index":667,"title":{},"body":{"components/PauseComponent.html":{}}}],["cookie",{"_index":950,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["cookies",{"_index":932,"title":{},"body":{"injectables/UserService.html":{}}}],["cookies:cookieservice",{"_index":953,"title":{},"body":{"injectables/UserService.html":{}}}],["cookieservice",{"_index":933,"title":{},"body":{"injectables/UserService.html":{}}}],["correctly",{"_index":250,"title":{},"body":{"components/ContactComponent.html":{}}}],["courier",{"_index":259,"title":{},"body":{"components/ContactComponent.html":{}}}],["coverage",{"_index":970,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createuserwithemailandpassword",{"_index":943,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":955,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":310,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["d8e8d8",{"_index":264,"title":{},"body":{"components/ContactComponent.html":{}}}],["data",{"_index":334,"title":{},"body":{"injectables/ContactService.html":{}}}],["databaseurl",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddd",{"_index":809,"title":{},"body":{"components/SettingsComponent.html":{}}}],["declarations",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["decoration",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["decorators",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["default",{"_index":228,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":178,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["definitive",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["dependencies",{"_index":77,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":1031,"title":{},"body":{"index.html":{}}}],["development",{"_index":1027,"title":{},"body":{"index.html":{}}}],["direction",{"_index":296,"title":{},"body":{"components/ContactComponent.html":{}}}],["directive",{"_index":39,"title":{"directives/BodyClassDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1042,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1046,"title":{},"body":{"index.html":{}}}],["display",{"_index":294,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["displayname",{"_index":916,"title":{},"body":{"classes/User.html":{}}}],["dist",{"_index":1045,"title":{},"body":{"index.html":{}}}],["divider",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["document",{"_index":177,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["document:keydown",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{}}}],["document:keydown(event",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["don't",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1054,"title":{},"body":{"index.html":{}}}],["e8f5e9",{"_index":304,"title":{},"body":{"components/ContactComponent.html":{}}}],["ease",{"_index":391,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["email",{"_index":217,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email/password",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["emitevent",{"_index":776,"title":{},"body":{"components/SettingsComponent.html":{}}}],["empty",{"_index":1016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["encapsulation",{"_index":669,"title":{},"body":{"components/RegisterComponent.html":{}}}],["end",{"_index":1053,"title":{},"body":{"index.html":{}}}],["enter",{"_index":706,"title":{},"body":{"components/RegisterComponent.html":{}}}],["enumerations",{"_index":1013,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":887,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["err.message",{"_index":891,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["error",{"_index":251,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["error('no",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.code",{"_index":697,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessage",{"_index":349,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["erroroccurred",{"_index":822,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["errors",{"_index":341,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["errors.component.css",{"_index":342,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors.component.html",{"_index":343,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors/errors.component",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["errorscomponent",{"_index":46,"title":{"components/ErrorsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorsvisible",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["event",{"_index":202,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["event.key",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["eventemitter",{"_index":355,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["execute",{"_index":1050,"title":{},"body":{"index.html":{}}}],["experience",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["express",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["f1f1f1",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["failed",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":232,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuardian.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":258,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ff4c4c",{"_index":359,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["ffe6e6",{"_index":392,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["fff",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ffffff",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1038,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":1001,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":1059,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":797,"title":{},"body":{"components/SettingsComponent.html":{}}}],["flex",{"_index":295,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["font",{"_index":257,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["food",{"_index":1017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["form",{"_index":293,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["formcontrol(20",{"_index":763,"title":{},"body":{"components/SettingsComponent.html":{}}}],["formgroup",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup.get('password')!.value",{"_index":691,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup.get('passwordconfirm')!.value",{"_index":693,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formlogin",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{}}}],["formreg",{"_index":673,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1063,"title":{},"body":{"index.html":{}}}],["g",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["game",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["gameover",{"_index":1019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gameovercomponent",{"_index":48,"title":{"components/GameOverComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameovervisible",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestate",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["gamestates",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/enumerations.html":{}}}],["gamestates.gameover",{"_index":482,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.none",{"_index":500,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.paused",{"_index":496,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.running",{"_index":498,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.win",{"_index":499,"title":{},"body":{"components/HomeComponent.html":{}}}],["generate",{"_index":1041,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1023,"title":{},"body":{"index.html":{}}}],["getauth",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["getbestscore",{"_index":825,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getbestscore(howmany",{"_index":836,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getbestscore(howmany:number",{"_index":912,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getgamestates",{"_index":826,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["gets",{"_index":919,"title":{},"body":{"classes/User.html":{}}}],["getscore",{"_index":827,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getsnakeboardupdate",{"_index":828,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getting",{"_index":1021,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":927,"title":{},"body":{"injectables/UserService.html":{}}}],["github",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{}}}],["githubauthprovider",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["githubauthprovider()).then((usercredential",{"_index":967,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":712,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["goback",{"_index":675,"title":{},"body":{"components/RegisterComponent.html":{}}}],["google",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleauthprovider",{"_index":947,"title":{},"body":{"injectables/UserService.html":{}}}],["googleauthprovider()).then((usercredential",{"_index":966,"title":{},"body":{"injectables/UserService.html":{}}}],["graph",{"_index":1071,"title":{},"body":{"modules.html":{}}}],["green",{"_index":319,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{}}}],["group",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["guard",{"_index":136,"title":{"guards/LoginGuardian.html":{}},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["guardian",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guardian.ts",{"_index":627,"title":{},"body":{"guards/LoginGuardian.html":{},"coverage.html":{}}}],["guardian.ts:11",{"_index":635,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["guardian.ts:8",{"_index":629,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["guards",{"_index":625,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["h2",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ha",{"_index":875,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["handle",{"_index":893,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["handlekeydown",{"_index":654,"title":{},"body":{"components/PauseComponent.html":{}}}],["handlekeydown(event",{"_index":660,"title":{},"body":{"components/PauseComponent.html":{}}}],["handlekeypress",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["handlekeypress(event",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{}}}],["headers",{"_index":899,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["height",{"_index":373,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["help",{"_index":1064,"title":{},"body":{"index.html":{}}}],["hide",{"_index":801,"title":{},"body":{"components/SettingsComponent.html":{}}}],["hideerrors",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidegameover",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidepassword",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidepause",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidesettings",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["home.component.css",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":51,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["hostlistener('document:keydown",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{}}}],["hostlistener('window:keydown",{"_index":661,"title":{},"body":{"components/PauseComponent.html":{}}}],["hostlisteners",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["howmany",{"_index":838,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["http",{"_index":331,"title":{},"body":{"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["http://localhost:4200",{"_index":1033,"title":{},"body":{"index.html":{}}}],["http://localhost:5273/api/contact/send",{"_index":336,"title":{},"body":{"injectables/ContactService.html":{}}}],["httpclient",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["httpclientmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["https://snakepro",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubconnection",{"_index":823,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["icon",{"_index":718,"title":{},"body":{"components/RegisterComponent.html":{}}}],["icon:hover",{"_index":722,"title":{},"body":{"components/RegisterComponent.html":{}}}],["identifier",{"_index":925,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["idtoken",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["img",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["implements",{"_index":163,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuardian.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["index",{"_index":165,"title":{"index.html":{}},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["initializeapp",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.firebase",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["inject",{"_index":194,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["inject(document",{"_index":199,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["injectable",{"_index":324,"title":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":325,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":719,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inner",{"_index":812,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input",{"_index":301,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/SettingsComponent.html":{}}}],["input::placeholder",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["input:focus",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["input:hover",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["input[type=\"number",{"_index":807,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input[type=\"number\"]:focus",{"_index":817,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input[type=\"number\"]:hover",{"_index":816,"title":{},"body":{"components/SettingsComponent.html":{}}}],["inputs",{"_index":348,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/ScoreItemComponent.html":{}}}],["instanceof",{"_index":203,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["invalid",{"_index":702,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iserror",{"_index":218,"title":{},"body":{"components/ContactComponent.html":{}}}],["issuccess",{"_index":219,"title":{},"body":{"components/ContactComponent.html":{}}}],["item",{"_index":725,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["item.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":727,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item.component.html",{"_index":726,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item.component.ts",{"_index":724,"title":{},"body":{"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:9",{"_index":729,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item/score",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["items",{"_index":371,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["js",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(idtoken",{"_index":908,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify(key",{"_index":901,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify(score",{"_index":910,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify({columns",{"_index":905,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["justify",{"_index":369,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["karma",{"_index":1052,"title":{},"body":{"index.html":{}}}],["key",{"_index":690,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["keyboardevent",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["label",{"_index":298,"title":{},"body":{"components/ContactComponent.html":{},"components/SettingsComponent.html":{}}}],["left",{"_index":378,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["link",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["literal",{"_index":728,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["localstorage.getitem('boardcols",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["localstorage.getitem('boardrows",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["localstorage.setitem('boardcols",{"_index":788,"title":{},"body":{"components/SettingsComponent.html":{}}}],["localstorage.setitem('boardrows",{"_index":790,"title":{},"body":{"components/SettingsComponent.html":{}}}],["log",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["login(undefined",{"_index":936,"title":{},"body":{"injectables/UserService.html":{}}}],["login({email",{"_index":956,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.css",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":53,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginguardian",{"_index":137,"title":{"guards/LoginGuardian.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{},"coverage.html":{}}}],["loginservice",{"_index":630,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["loginwithgithub",{"_index":928,"title":{},"body":{"injectables/UserService.html":{}}}],["loginwithgoogle",{"_index":929,"title":{},"body":{"injectables/UserService.html":{}}}],["logout",{"_index":644,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["logs",{"_index":960,"title":{},"body":{"injectables/UserService.html":{}}}],["long",{"_index":710,"title":{},"body":{"components/RegisterComponent.html":{}}}],["m4bpjrsbvw",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":254,"title":{},"body":{"components/ContactComponent.html":{}}}],["margin",{"_index":271,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["match",{"_index":704,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":268,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["maximum",{"_index":794,"title":{},"body":{"components/SettingsComponent.html":{}}}],["measurementid",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":796,"title":{},"body":{"components/SettingsComponent.html":{}}}],["menu.ng",{"_index":800,"title":{},"body":{"components/SettingsComponent.html":{}}}],["message",{"_index":220,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["messagingsenderid",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":169,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["microsoft/signalr",{"_index":862,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["miscellaneous",{"_index":1012,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":694,"title":{},"body":{"components/RegisterComponent.html":{}}}],["module",{"_index":74,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["modules",{"_index":76,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["monospace",{"_index":261,"title":{},"body":{"components/ContactComponent.html":{}}}],["more",{"_index":1065,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navbar",{"_index":641,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["navbar.component.css",{"_index":643,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":642,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":55,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1032,"title":{},"body":{"index.html":{}}}],["navigatetoregister",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigationend",{"_index":195,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["need",{"_index":1058,"title":{},"body":{"index.html":{}}}],["new",{"_index":260,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newboardcolsvalue",{"_index":783,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardcolsvalue.tostring",{"_index":789,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardrowsvalue",{"_index":785,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardrowsvalue.tostring",{"_index":791,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ng",{"_index":1029,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["ngondestroy",{"_index":170,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["ngoninit",{"_index":171,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["ngx",{"_index":949,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["none",{"_index":388,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["null",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":400,"title":{},"body":{"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/ScoreItemComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{}}}],["object",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":335,"title":{},"body":{"injectables/ContactService.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["oldboardcolsvalue",{"_index":781,"title":{},"body":{"components/SettingsComponent.html":{}}}],["oldboardrowsvalue",{"_index":782,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ondestroy",{"_index":164,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["ongithublogin",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{}}}],["ongooglelogin",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["onsubmit",{"_index":221,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["opacity",{"_index":799,"title":{},"body":{"components/SettingsComponent.html":{}}}],["optional",{"_index":182,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":814,"title":{},"body":{"components/SettingsComponent.html":{}}}],["outline",{"_index":810,"title":{},"body":{"components/SettingsComponent.html":{}}}],["output",{"_index":361,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["outputs",{"_index":350,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["over",{"_index":395,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["over.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["over.component.css",{"_index":398,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.html",{"_index":396,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts",{"_index":394,"title":{},"body":{"components/GameOverComponent.html":{},"coverage.html":{}}}],["over.component.ts:10",{"_index":401,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts:12",{"_index":403,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts:9",{"_index":402,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over/game",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/GameOverComponent.html":{},"coverage.html":{}}}],["overview",{"_index":1066,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["package",{"_index":990,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":274,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["page",{"_index":206,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"index.html":{}}}],["parameters",{"_index":180,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["password",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["password).then((usercredential",{"_index":958,"title":{},"body":{"injectables/UserService.html":{}}}],["passwordconfirm",{"_index":688,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatchvalidator",{"_index":674,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwords",{"_index":703,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":651,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["pause.component.css",{"_index":653,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause.component.html",{"_index":652,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause/pause.component",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["pausecomponent",{"_index":57,"title":{"components/PauseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paused",{"_index":664,"title":{},"body":{"components/PauseComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pausegame",{"_index":829,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["pausevisible",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["platform",{"_index":1055,"title":{},"body":{"index.html":{}}}],["player",{"_index":730,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["playing",{"_index":405,"title":{},"body":{"components/GameOverComponent.html":{}}}],["please",{"_index":367,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{}}}],["pointer",{"_index":311,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["points",{"_index":731,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["position",{"_index":376,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["press",{"_index":665,"title":{},"body":{"components/PauseComponent.html":{}}}],["private",{"_index":167,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1022,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":851,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["properties",{"_index":166,"title":{"properties.html":{}},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provideauth",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["provideclienthydration",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":337,"title":{},"body":{"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["public",{"_index":344,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["radius",{"_index":382,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["reactiveformsmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":323,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirectto",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectunauthorizedto",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reestablished",{"_index":872,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["reference",{"_index":1067,"title":{},"body":{"index.html":{}}}],["register",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["register(undefined",{"_index":941,"title":{},"body":{"injectables/UserService.html":{}}}],["register({email",{"_index":954,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":671,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":672,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":59,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["relative",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reload",{"_index":1036,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":183,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["renderer2",{"_index":175,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["required",{"_index":705,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reset",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["response",{"_index":244,"title":{},"body":{"components/ContactComponent.html":{}}}],["response.user",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["restablecida",{"_index":877,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["restart",{"_index":368,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["results",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumegame",{"_index":655,"title":{},"body":{"components/PauseComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["retro",{"_index":266,"title":{},"body":{"components/ContactComponent.html":{}}}],["return",{"_index":338,"title":{},"body":{"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{}}}],["returns",{"_index":185,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["rgba(0",{"_index":374,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["right",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":636,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["router",{"_index":176,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":634,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["routersubscription",{"_index":168,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["routes",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["rows",{"_index":795,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["rtdb.europe",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1028,"title":{},"body":{"index.html":{}}}],["running",{"_index":1018,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxjs",{"_index":196,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"dependencies.html":{}}}],["sans",{"_index":715,"title":{},"body":{"components/RegisterComponent.html":{}}}],["saved",{"_index":485,"title":{},"body":{"components/HomeComponent.html":{}}}],["savedboardcols",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["savedboardrows",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["savescore",{"_index":830,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["savescore(score",{"_index":844,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["savesettings",{"_index":757,"title":{},"body":{"components/SettingsComponent.html":{}}}],["scaffolding",{"_index":1040,"title":{},"body":{"index.html":{}}}],["score",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{}}}],["score.player",{"_index":732,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["score.points",{"_index":733,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["scoreboard",{"_index":211,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ScoreboardsComponent.html":{}}}],["scoreboards",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["scoreboards'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["scoreboards.component.css",{"_index":736,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["scoreboards.component.html",{"_index":735,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["scoreboards/score",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["scoreboards/scoreboards.component",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["scoreboardscomponent",{"_index":61,"title":{"components/ScoreboardsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoreboardscomponent,canactivate:[loginguardian",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scoreitemcomponent",{"_index":63,"title":{"components/ScoreItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scores",{"_index":737,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["send",{"_index":255,"title":{},"body":{"components/ContactComponent.html":{}}}],["sendcontactform",{"_index":328,"title":{},"body":{"injectables/ContactService.html":{}}}],["sendcontactform(data",{"_index":332,"title":{},"body":{"injectables/ContactService.html":{}}}],["sending",{"_index":253,"title":{},"body":{"components/ContactComponent.html":{}}}],["sendtoken",{"_index":831,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sendtoken(idtoken",{"_index":846,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sent",{"_index":249,"title":{},"body":{"components/ContactComponent.html":{}}}],["serif",{"_index":308,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["serve",{"_index":1030,"title":{},"body":{"index.html":{}}}],["server",{"_index":159,"title":{},"body":{"modules/AppServerModule.html":{},"components/ErrorsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["servermodule",{"_index":158,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service",{"_index":951,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["services/contact.service",{"_index":236,"title":{},"body":{"components/ContactComponent.html":{}}}],["services/snake",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["services/user.service",{"_index":237,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["set",{"_index":959,"title":{},"body":{"injectables/UserService.html":{}}}],["setmovement",{"_index":832,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["setmovement(key",{"_index":848,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sets",{"_index":920,"title":{},"body":{"classes/User.html":{}}}],["settings",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.css",{"_index":754,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":755,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["settingscomponent",{"_index":66,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsvisible",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":281,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["showsettings",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["sido",{"_index":876,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sign",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{}}}],["signalr",{"_index":861,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signalr.hubconnection",{"_index":857,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":864,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signinwithemailandpassword",{"_index":944,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":957,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithpopup",{"_index":946,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithpopup(this.auth",{"_index":965,"title":{},"body":{"injectables/UserService.html":{}}}],["signout",{"_index":945,"title":{},"body":{"injectables/UserService.html":{}}}],["signout(this.auth",{"_index":968,"title":{},"body":{"injectables/UserService.html":{}}}],["size",{"_index":288,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["sizing",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["snake",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snakeboardupdate",{"_index":824,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["snakecommunicationsservice",{"_index":28,"title":{"injectables/SnakeCommunicationsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"coverage.html":{},"overview.html":{}}}],["snakecomunicationsservice",{"_index":346,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["snakepro",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakeproweb",{"_index":462,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["solid",{"_index":278,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["sortscores",{"_index":738,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":666,"title":{},"body":{"components/PauseComponent.html":{}}}],["span",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["span:hover",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["spin",{"_index":813,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/.../enums.ts",{"_index":1014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.ts",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.server.ts",{"_index":157,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/app.module.ts",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/body",{"_index":161,"title":{},"body":{"directives/BodyClassDirective.html":{},"coverage.html":{}}}],["src/app/contact/contact.component.ts",{"_index":214,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/contact/contact.component.ts:11",{"_index":235,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:12",{"_index":230,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:13",{"_index":234,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:14",{"_index":233,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:15",{"_index":225,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:19",{"_index":226,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:23",{"_index":227,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/errors/errors.component.ts",{"_index":340,"title":{},"body":{"components/ErrorsComponent.html":{},"coverage.html":{}}}],["src/app/errors/errors.component.ts:10",{"_index":356,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:11",{"_index":354,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:12",{"_index":353,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:14",{"_index":360,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:16",{"_index":358,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:24",{"_index":357,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/game",{"_index":393,"title":{},"body":{"components/GameOverComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:104",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:108",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:112",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:117",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:128",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:132",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:137",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":463,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:16",{"_index":452,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:17",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:18",{"_index":461,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":458,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:20",{"_index":459,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:21",{"_index":454,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":455,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":460,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:29",{"_index":457,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":456,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:32",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:71",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:89",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login",{"_index":626,"title":{},"body":{"guards/LoginGuardian.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:103",{"_index":542,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:17",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:26",{"_index":541,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:53",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:77",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":640,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:10",{"_index":646,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:17",{"_index":647,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/pause/pause.component.ts",{"_index":650,"title":{},"body":{"components/PauseComponent.html":{},"coverage.html":{}}}],["src/app/pause/pause.component.ts:11",{"_index":659,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/pause/pause.component.ts:17",{"_index":662,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/pause/pause.component.ts:9",{"_index":657,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":668,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:13",{"_index":679,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:14",{"_index":676,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":681,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":678,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:47",{"_index":677,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/scoreboards/score",{"_index":723,"title":{},"body":{"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["src/app/scoreboards/scoreboards.component.ts",{"_index":734,"title":{},"body":{"components/ScoreboardsComponent.html":{},"coverage.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:10",{"_index":747,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:14",{"_index":739,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:18",{"_index":740,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:23",{"_index":741,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/settings/settings.component.ts",{"_index":753,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:11",{"_index":759,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:12",{"_index":766,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:13",{"_index":758,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:15",{"_index":767,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:18",{"_index":761,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:39",{"_index":762,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:60",{"_index":760,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/common/enums.ts",{"_index":1015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/user.ts",{"_index":915,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/common/user.ts:10",{"_index":918,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:15",{"_index":921,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:20",{"_index":922,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:5",{"_index":923,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.ts",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/contact.service.ts",{"_index":326,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/services/contact.service.ts:13",{"_index":333,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/services/contact.service.ts:9",{"_index":330,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/services/snake",{"_index":820,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"coverage.html":{}}}],["src/services/user.service.ts",{"_index":926,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:10",{"_index":934,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:13",{"_index":942,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:17",{"_index":937,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:27",{"_index":939,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:38",{"_index":938,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:48",{"_index":940,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:54",{"_index":935,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{}}}],["startconnection",{"_index":834,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["started",{"_index":512,"title":{"index.html":{}},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["startgame",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["startgame(columns",{"_index":852,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["starting",{"_index":889,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["startsettings",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{}}}],["state",{"_index":633,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["statements",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1044,"title":{},"body":{"index.html":{}}}],["string",{"_index":189,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurl",{"_index":397,"title":{},"body":{"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["subject",{"_index":855,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["subscribe",{"_index":770,"title":{},"body":{"components/SettingsComponent.html":{}}}],["subscription",{"_index":192,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["success",{"_index":318,"title":{},"body":{"components/ContactComponent.html":{}}}],["successfully",{"_index":256,"title":{},"body":{"components/ContactComponent.html":{}}}],["support",{"_index":1068,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1069,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":492,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["test",{"_index":1049,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1061,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1048,"title":{},"body":{"index.html":{}}}],["text",{"_index":285,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["textarea",{"_index":302,"title":{},"body":{"components/ContactComponent.html":{}}}],["thanks",{"_index":404,"title":{},"body":{"components/GameOverComponent.html":{}}}],["then(idtoken",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{}}}],["then(response",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.bestscore",{"_index":488,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardarray",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardarray[row][col",{"_index":501,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardcols",{"_index":472,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardcols.setvalue(+savedboardcols",{"_index":768,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.setvalue(value",{"_index":778,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.value",{"_index":784,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.valuechanges.subscribe(value",{"_index":774,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardrows).subscribe",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardrows.setvalue(+savedboardrows",{"_index":769,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.setvalue(value",{"_index":775,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.value",{"_index":786,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.valuechanges.subscribe(value",{"_index":777,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.changestatemessage(gamestate",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.close.emit",{"_index":366,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["this.contactservice.sendcontactform(contactform).subscribe",{"_index":243,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.cookies.get(\"token",{"_index":969,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookies.set(\"token\",this.token",{"_index":963,"title":{},"body":{"injectables/UserService.html":{}}}],["this.email",{"_index":241,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.errormessage",{"_index":364,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.erroroccurred.emit('la",{"_index":873,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(err.message",{"_index":892,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(error.message",{"_index":870,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(string(err",{"_index":896,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.errorsvisible",{"_index":491,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formlogin",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formreg",{"_index":684,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formreg.valid",{"_index":695,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.gameovervisible",{"_index":494,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.gamestates.asobservable",{"_index":898,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.gamestates.next(gamestate",{"_index":881,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hidepassword",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.http.get(`http://localhost:5273/api/firebasedb/gettopscores?count=${howmany",{"_index":913,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/firebasedb/getuserdata",{"_index":909,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/firebasedb/savescore",{"_index":911,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/pausegame",{"_index":903,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/resumegame",{"_index":904,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/setmovement",{"_index":902,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post(`http://localhost:5273/api/game/start",{"_index":906,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post(this.apiurl",{"_index":339,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.hubconnection",{"_index":863,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"gamestates",{"_index":880,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"score",{"_index":882,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"snakeboardupdate",{"_index":878,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.onclose((error",{"_index":867,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.onreconnected((connectionid",{"_index":871,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.start",{"_index":885,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.iserror",{"_index":247,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.issuccess",{"_index":245,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.loginservice.gettoken",{"_index":637,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["this.message",{"_index":242,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.name",{"_index":240,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":689,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.pausevisible",{"_index":497,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.renderer.addclass(this.document.body",{"_index":208,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.renderer.removeclass(this.document.body",{"_index":205,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.resumegame",{"_index":663,"title":{},"body":{"components/PauseComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":201,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.router.navigate(['/home",{"_index":564,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":649,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/register",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":639,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["this.routersubscription",{"_index":200,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.routersubscription.unsubscribe",{"_index":213,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.score",{"_index":487,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.score.asobservable",{"_index":907,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.score.next(score",{"_index":883,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.score=0",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.scores.sort((a",{"_index":749,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.settingsvisible",{"_index":508,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakeboardupdate.asobservable",{"_index":897,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.snakeboardupdate.next(boardarray",{"_index":879,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.snakecommunicationsservice.erroroccurred.subscribe((error",{"_index":490,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getbestscore(1).subscribe((bestscore",{"_index":489,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getgamestates().subscribe((gamestate",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getscore().subscribe((score",{"_index":486,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getsnakeboardupdate().subscribe((board",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.pausegame().subscribe",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.resumegame().subscribe",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.savescore(this.score).subscribe",{"_index":483,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.sendtoken(idtoken).subscribe((user",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.snakecommunicationsservice.setmovement(event.key).subscribe",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.startconnection().then",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.startgame(this.boardcols",{"_index":509,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecomunicationsservice.erroroccurred.subscribe((error",{"_index":363,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["this.sortscores",{"_index":748,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.token",{"_index":962,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updatebodyclass(event.urlafterredirects",{"_index":204,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.userservice.login(this.formlogin.value",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.loginwithgithub",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.loginwithgoogle",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logout",{"_index":648,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userservice.register(this.formreg.value",{"_index":696,"title":{},"body":{"components/RegisterComponent.html":{}}}],["throw",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{}}}],["title",{"_index":284,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{}}}],["toggle",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["togglepasswordvisibility",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["tools",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":322,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["transform",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["transition",{"_index":312,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["translatey",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["translatey(0",{"_index":803,"title":{},"body":{"components/SettingsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["true",{"_index":246,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{}}}],["try",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["tslib",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":181,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":467,"title":{},"body":{"components/HomeComponent.html":{}}}],["uid",{"_index":917,"title":{},"body":{"classes/User.html":{}}}],["ultimate",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":193,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{}}}],["underline",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["unexpected",{"_index":894,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["unique",{"_index":924,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":1047,"title":{},"body":{"index.html":{}}}],["up",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["update",{"_index":772,"title":{},"body":{"components/SettingsComponent.html":{}}}],["updatebodyclass",{"_index":172,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["updatebodyclass(url",{"_index":188,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url",{"_index":191,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('contact",{"_index":212,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('home",{"_index":209,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('login",{"_index":207,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('scoreboards",{"_index":210,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["use",{"_index":700,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["user",{"_index":465,"title":{"classes/User.html":{}},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.getidtoken",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["usercredential",{"_index":964,"title":{},"body":{"injectables/UserService.html":{}}}],["usercredential.user.getidtoken().then((idtoken",{"_index":961,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":224,"title":{"injectables/UserService.html":{}},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["valid",{"_index":707,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":680,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":682,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["validators.email",{"_index":686,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.max(30",{"_index":765,"title":{},"body":{"components/SettingsComponent.html":{}}}],["validators.min(10",{"_index":764,"title":{},"body":{"components/SettingsComponent.html":{}}}],["validators.minlength(6",{"_index":687,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":685,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":229,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1075,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1026,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1051,"title":{},"body":{"index.html":{}}}],["videogamefont",{"_index":307,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["viewencapsulation",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewencapsulation.none",{"_index":670,"title":{},"body":{"components/RegisterComponent.html":{}}}],["visible",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":186,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["webkit",{"_index":811,"title":{},"body":{"components/SettingsComponent.html":{}}}],["weight",{"_index":320,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["west1.firebasedatabase.app",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":385,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["width",{"_index":269,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["win",{"_index":1020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["window:keydown",{"_index":656,"title":{},"body":{"components/PauseComponent.html":{}}}],["window:keydown(event",{"_index":658,"title":{},"body":{"components/PauseComponent.html":{}}}],["withurl(\"http://localhost:5273/snakegamehub",{"_index":865,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["wrapper",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["xlt2r3bhbzeo7_5yrvxg3xjjeq",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yellow",{"_index":507,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":379,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["zone.js",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, HostListener, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CellType, GameStates} from \"../common/Enums\";\nimport {SnakeCommunicationsService} from \"../services/snake-communications.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyClassDirective\n\nBodyClassDirective\n\nAppModule -->\n\nBodyClassDirective->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nErrorsComponent\n\nErrorsComponent\n\nAppModule -->\n\nErrorsComponent->AppModule\n\n\n\n\n\nGameOverComponent\n\nGameOverComponent\n\nAppModule -->\n\nGameOverComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPauseComponent\n\nPauseComponent\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nScoreItemComponent\n\nScoreItemComponent\n\nAppModule -->\n\nScoreItemComponent->AppModule\n\n\n\n\n\nScoreboardsComponent\n\nScoreboardsComponent\n\nAppModule -->\n\nScoreboardsComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSnakeCommunicationsService\n\nSnakeCommunicationsService\n\nAppModule -->\n\nSnakeCommunicationsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BodyClassDirective\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            ErrorsComponent\n                        \n                        \n                            GameOverComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PauseComponent\n                        \n                        \n                            PauseComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ScoreItemComponent\n                        \n                        \n                            ScoreboardsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SnakeCommunicationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule, provideClientHydration } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {SnakeCommunicationsService} from \"../services/snake-communications.service\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { ErrorsComponent } from './errors/errors.component';\nimport { GameOverComponent } from './game-over/game-over.component';\nimport { PauseComponent } from './pause/pause.component';\nimport {initializeApp, provideFirebaseApp} from \"@angular/fire/app\";\nimport {getAuth, provideAuth} from \"@angular/fire/auth\";\nimport {environment} from \"../environments/environment\";\nimport { RegisterComponent } from './register/register.component';\nimport {HomeComponent} from \"./home/home.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport { ScoreboardsComponent } from './scoreboards/scoreboards.component';\nimport { ScoreItemComponent } from './scoreboards/score-item/score-item.component';\nimport {BodyClassDirective} from \"./body-class.directive\";\nimport { ContactComponent } from './contact/contact.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SettingsComponent,\n    ErrorsComponent,\n    GameOverComponent,\n    PauseComponent,\n    PauseComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    ScoreboardsComponent,\n    ScoreItemComponent,\n    RegisterComponent,\n    BodyClassDirective,\n    ContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    provideClientHydration(),\n    SnakeCommunicationsService,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth())\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {canActivate, redirectUnauthorizedTo} from \"@angular/fire/auth-guard\";\nimport {ScoreboardsComponent} from \"./scoreboards/scoreboards.component\";\nimport {ContactComponent} from \"./contact/contact.component\";\nimport {LoginGuardian} from \"./login/login-guardian\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent, canActivate:[LoginGuardian]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'scoreboards', component: ScoreboardsComponent,canActivate:[LoginGuardian]},\n  {path: 'contact', component: ContactComponent, canActivate:[LoginGuardian]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.server.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BodyClassDirective.html":{"url":"directives/BodyClassDirective.html","title":"directive - BodyClassDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BodyClassDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/body-class.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appBodyClass]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                routerSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateBodyClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, router: Router, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/body-class.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBodyClass\n                        \n                    \n                \n            \n            \n                \nupdateBodyClass(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/body-class.directive.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Renderer2, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[appBodyClass]'\n})\nexport class BodyClassDirective implements OnInit, OnDestroy {\n  private routerSubscription: Subscription | undefined;\n\n  constructor(private renderer: Renderer2, private router: Router, @Inject(DOCUMENT) private document: Document) {}\n\n  ngOnInit() {\n    this.routerSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.updateBodyClass(event.urlAfterRedirects);\n      }\n    });\n  }\n\n  updateBodyClass(url: string) {\n    this.renderer.removeClass(this.document.body, 'login-page');\n    this.renderer.removeClass(this.document.body, 'home-page');\n    if (url.includes('login')) {\n      this.renderer.addClass(this.document.body, 'login-page');\n    } else if (url.includes('home')) {\n      this.renderer.addClass(this.document.body, 'home-page');\n    }else if (url.includes('scoreboards')) {\n      this.renderer.addClass(this.document.body, 'scoreboard-page');\n    }else if (url.includes('contact')) {\n      this.renderer.addClass(this.document.body, 'home-page');}\n  }\n\n  ngOnDestroy() {\n    if (this.routerSubscription) {\n      this.routerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contact/contact.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n\n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isError\n                            \n                            \n                                isSuccess\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(contactService: ContactService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contact/contact.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contactService\n                                                  \n                                                        \n                                                                        ContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact/contact.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact/contact.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { ContactService } from \"../../services/contact.service\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit{\n  name: string = '';\n  email: string = '';\n  message: string = '';\n  isSuccess: boolean = false;\n  isError: boolean = false;\n\n  constructor(private contactService: ContactService, private userService: UserService) {}\n\n  ngOnInit() {\n    console.log(this.userService.getToken());\n  }\n\n  onSubmit() {\n    const contactForm = {\n      name: this.name,\n      email: this.email,\n      message: this.message\n    };\n\n    this.contactService.sendContactForm(contactForm).subscribe(\n        (response: any) => {\n        this.isSuccess = true;\n        this.isError = false;\n        console.log('Mail sent correctly', response);\n          this.name = '';\n          this.email = '';\n          this.message = '';\n      },\n        (error: any) => {\n        this.isSuccess = false;\n        this.isError = true;\n        console.error('Error sending mail', error);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n\n  Contact Page\n  \n    Name\n    \n\n    Email\n    \n\n    Message\n    \n\n    Send\n  \n  Email sent successfully.\n  Error sending email.\n\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                body {\n  font-family: 'Courier New', Courier, monospace;\n  background-color: #d8e8d8;\n  color: #000;\n}\n\n.retro-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 5px solid #000;\n  background-color: #c8e6c9;\n  box-shadow: 10px 10px 0 #000;\n}\n\n.retro-title {\n  text-align: center;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n  text-shadow: 2px 2px 0 #388e3c;\n}\n\n.retro-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.retro-label {\n  font-size: 1.2em;\n  margin-bottom: 5px;\n  color: #1b5e20;\n}\n\n.retro-input, .retro-textarea {\n  font-size: 1em;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 2px solid #000;\n  background-color: #e8f5e9;\n  box-shadow: 4px 4px 0 #000;\n}\n\n.retro-button {\n  font-family: VideoGameFont, serif;\n  font-size: 1.2em;\n  padding: 10px;\n  border: 2px solid #000;\n  background-color: #66bb6a;\n  cursor: pointer;\n  box-shadow: 4px 4px 0 #000;\n  transition: all 0.2s;\n}\n\n.retro-button:hover {\n  background-color: #4caf50;\n  box-shadow: 2px 2px 0 #000;\n}\n\n.retro-button:active {\n  box-shadow: 1px 1px 0 #000;\n}\n\n.success-message {\n  color: green;\n  font-weight: bold;\n  margin-top: 20px;\n}\n\n.error-message {\n  color: red;\n  font-weight: bold;\n  margin-top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Contact Page      Name        Email        Message        Send    Email sent successfully.  Error sending email.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendContactForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/contact.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendContactForm\n                        \n                    \n                \n            \n            \n                \nsendContactForm(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/contact.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5273/api/Contact/send'\n                    \n                \n                    \n                        \n                                Defined in src/services/contact.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  private apiUrl = 'http://localhost:5273/api/Contact/send';\n\n  constructor(private http: HttpClient) {}\n\n  sendContactForm(data: any): Observable {\n    return this.http.post(this.apiUrl, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorsComponent.html":{"url":"components/ErrorsComponent.html","title":"component - ErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/errors.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-errors\n            \n\n\n\n            \n                styleUrls\n                ./errors.component.css\n            \n\n\n\n            \n                templateUrl\n                ./errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundcolor\n                            \n                            \n                                    Public\n                                snakeComunicationsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeErrors\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeComunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/errors/errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeComunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/errors/errors.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/errors/errors.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeErrors\n                        \n                    \n                \n            \n            \n                \ncloseErrors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/errors/errors.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/errors/errors.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        backgroundcolor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#ff4c4c'\n                    \n                \n                    \n                        \n                                Defined in src/app/errors/errors.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snakeComunicationsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnakeCommunicationsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/errors/errors.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { SnakeCommunicationsService } from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-errors',\n  templateUrl: './errors.component.html',\n  styleUrls: ['./errors.component.css']\n})\nexport class ErrorsComponent implements OnInit {\n  @Output() close = new EventEmitter();\n  @Input() errorMessage: string = '';\n  public backgroundcolor: string = '#ff4c4c';\n\n  constructor(public snakeComunicationsService: SnakeCommunicationsService) { }\n\n  ngOnInit() {\n    /*\n    this.snakeComunicationsService.errorOccurred.subscribe((error) => {\n      this.errorMessage = error;\n      console.log(error);\n    }); */\n  }\n\n  closeErrors() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n    Please restart the server\n    Close\n  \n\n\n    \n\n    \n                \n                    ./errors.component.css\n                \n                \n.error-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n}\n\n.error-message {\n  padding: 20px 30px;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  color: white;\n  font-size: 18px;\n  text-align: center;\n}\n\n.error-button {\n  margin-top: 15px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  background-color: white;\n  color: #ff4c4c;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  font-family: VideoGameFont, serif;\n}\n\n.error-button:hover {\n  background-color: #ffe6e6;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}    Please restart the server    Close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameOverComponent.html":{"url":"components/GameOverComponent.html","title":"component - GameOverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameOverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game-over/game-over.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-over\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./game-over.component.html\n            \n\n\n\n            \n                styleUrl\n                ./game-over.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeGameOver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game-over/game-over.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game-over/game-over.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeGameOver\n                        \n                    \n                \n            \n            \n                \ncloseGameOver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game-over/game-over.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-game-over',\n  templateUrl: './game-over.component.html',\n  styleUrl: './game-over.component.css'\n})\nexport class GameOverComponent {\n  @Output() close = new EventEmitter();\n  @Input() score!: number;\n\n  closeGameOver() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    Game Over\n    Thanks for playing! Your score was: {{score}}\n    \n      Close\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Game Over    Thanks for playing! Your score was: {{score}}          Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'GameOverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bestScore\n                            \n                            \n                                    Public\n                                boardArray\n                            \n                            \n                                boardCols\n                            \n                            \n                                boardRows\n                            \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                errorsVisible\n                            \n                            \n                                gameOverVisible\n                            \n                            \n                                pauseVisible\n                            \n                            \n                                score\n                            \n                            \n                                settingsVisible\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStateMessage\n                            \n                            \n                                colorCell\n                            \n                            \n                                    \n                                handleKeyPress\n                            \n                            \n                                hideErrors\n                            \n                            \n                                hideGameOver\n                            \n                            \n                                hidePause\n                            \n                            \n                                hideSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showSettings\n                            \n                            \n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeCommunicationsService: SnakeCommunicationsService, http: HttpClient, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:117\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStateMessage\n                        \n                    \n                \n            \n            \n                \nchangeStateMessage(gameState: GameStates)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                            GameStates\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colorCell\n                        \n                    \n                \n            \n            \n                \ncolorCell(row: number, col: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                col\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyPress\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyPress(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideErrors\n                        \n                    \n                \n            \n            \n                \nhideErrors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideGameOver\n                        \n                    \n                \n            \n            \n                \nhideGameOver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePause\n                        \n                    \n                \n            \n            \n                \nhidePause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideSettings\n                        \n                    \n                \n            \n            \n                \nhideSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSettings\n                        \n                    \n                \n            \n            \n                \nshowSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bestScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        boardArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CellType[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardCols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameOverVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pauseVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        settingsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SnakeProWeb'\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CellType, GameStates} from \"../../common/Enums\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"../../common/User\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css',\n})\n\nexport class HomeComponent implements OnInit{\n  title = 'SnakeProWeb';\n  public boardArray: CellType[][] = [];\n  public visible: boolean = true;\n  settingsVisible = false;\n  gameOverVisible = false;\n  pauseVisible: boolean = false;\n  boardCols: number = 20;\n  boardRows: number = 20;\n  score: number = 0;\n  bestScore: number = 0;\n\n  constructor(private snakeCommunicationsService: SnakeCommunicationsService, private http: HttpClient, private userService: UserService) {\n  }\n\n  public errorsVisible = false;\n  public errorMessage: string = '';\n\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      const savedboardCols = localStorage.getItem('boardCols');\n      if (savedboardCols !== null) {\n        this.boardCols = +savedboardCols;\n      }\n      const savedboardRows = localStorage.getItem('boardRows');\n      if (savedboardRows !== null) {\n        this.boardRows = +savedboardRows;\n      }\n    }\n    this.snakeCommunicationsService.startConnection().then(() => {\n      this.snakeCommunicationsService.getSnakeBoardUpdate().subscribe((board) => {\n        this.boardArray = board;\n      });\n      this.snakeCommunicationsService.getGameStates().subscribe((gameState: GameStates) => {\n        this.changeStateMessage(gameState)\n        if (gameState === GameStates.GameOver) {\n          this.snakeCommunicationsService.saveScore(this.score).subscribe(() => console.log(\"Score saved\"));\n        }\n      });\n      this.snakeCommunicationsService.getScore().subscribe((score) => {\n        this.score = score;\n        if (score > this.bestScore) {\n          this.bestScore = score;\n        }\n      });\n      this.snakeCommunicationsService.getBestScore(1).subscribe((bestScore) => {\n        this.bestScore = bestScore;\n      });\n    });\n\n    this.snakeCommunicationsService.errorOccurred.subscribe((error) => {\n      this.errorsVisible = true;\n      this.errorMessage = error;\n    });\n    console.log(this.userService.getToken());\n  }\n\n  changeStateMessage(gameState: GameStates) {\n    switch (gameState) {\n      case GameStates.GameOver:\n        this.gameOverVisible = true;\n        break;\n      case GameStates.Paused:\n        this.pauseVisible = true;\n        break;\n      case GameStates.Running:\n        this.pauseVisible = false;\n        break;\n      case GameStates.Win:\n      case GameStates.None:\n        break;\n    }\n  }\n\n\n  colorCell(row: number, col: number): string {\n    switch (this.boardArray[row][col]) {\n      case CellType.Empty:\n        return 'green';\n      case CellType.Block:\n        return 'black';\n      case CellType.Food:\n        return 'red';\n      case CellType.Snake:\n        return 'yellow';\n      default:\n        return 'white';\n    }\n  }\n\n  showSettings() {\n    this.settingsVisible = true;\n  }\n\n  hideSettings() {\n    this.settingsVisible = false;\n  }\n\n  startGame(): void {\n    this.snakeCommunicationsService.startGame(this.boardCols, this.boardRows).subscribe(() => console.log(\"Game started\"));\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyPress(event: KeyboardEvent) {\n    if (event.key === 'p') {\n      this.snakeCommunicationsService.pauseGame().subscribe();\n    } else if (event.key === ' ') {\n      this.snakeCommunicationsService.resumeGame().subscribe();\n    } else {\n      this.snakeCommunicationsService.setMovement(event.key).subscribe();\n    }\n  }\n\n\n  hideErrors() {\n    this.errorsVisible = false;\n  }\n\n  hideGameOver() {\n    this.gameOverVisible = false;\n    this.score=0;\n  }\n\n  hidePause() {\n    this.pauseVisible = false;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Ultimate Snake Game\n      The Definitive Snake Game Experience\n    \n    \n      SCORE: {{score}}\n      BEST SCORE: {{bestScore}}\n    \n  \n\n\n\n  \n    \n      \n    \n  \n\n\nSTART\nSETTINGS\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Ultimate Snake Game      The Definitive Snake Game Experience              SCORE: {{score}}      BEST SCORE: {{bestScore}}                        STARTSETTINGS'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formLogin\n                            \n                            \n                                hidePassword\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToRegister\n                            \n                            \n                                onGithubLogin\n                            \n                            \n                                onGoogleLogin\n                            \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToRegister\n                        \n                    \n                \n            \n            \n                \nnavigateToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGithubLogin\n                        \n                    \n                \n            \n            \n                \nonGithubLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGoogleLogin\n                        \n                    \n                \n            \n            \n                \nonGoogleLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  formLogin: FormGroup;\n  errorMessage: string | null = null;\n  hidePassword: boolean = true;\n  private token: string | null = null;\n\n  constructor(private userService: UserService, private router: Router, private snakeCommunicationsService: SnakeCommunicationsService) {\n    this.formLogin = new FormGroup({\n      email: new FormControl(),\n      password: new FormControl()\n    });\n  }\n\n  onSubmit() {\n    this.userService.login(this.formLogin.value)\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from email/password sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login. Please check your email and password.\";\n      });\n  }\n\n  navigateToRegister() {\n    this.router.navigate(['/register']);\n  }\n\n  onGoogleLogin() {\n    this.userService.loginWithGoogle()\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from Google sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login with Google. Please try again.\";\n      });\n\n  }\n\n  onGithubLogin() {\n    this.userService.loginWithGithub()\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from Github sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login with Github. Please try again.\";\n      });\n\n  }\n\n\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n\n    \n\n    \n        \n  \n    Log in\n    \n      \n        \n      \n      \n        \n        👁️\n      \n      Log in\n    \n\n\n    \n      {{ errorMessage }}\n    \n    \n    \n      Have Google or GitHub?\n      \n        \n        Log in with Google\n      \n      \n        \n        Log in with GitHub\n      \n    \n    \n      Don't have an account yet?\n      Sign up\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n.login-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.login-container {\n  max-width: 400px;\n  width: 400px;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.login-container h2 {\n  margin-bottom: 15px;\n  color: #ffffff;\n  font-size: 1.3rem;\n}\n\n.form-group {\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  box-sizing: border-box;\n  border: 2px solid #4b4f54;\n  border-radius: 5px;\n  background-color: #070b10;\n  color: #fff;\n}\n\n.form-group input::placeholder {\n  color: #bbb;\n  font-size: 14px;\n}\n\n.toggle-password {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #fff;\n}\n\n.login-btn {\n  width: 100%;\n  padding: 9px;\n  background-color: #68f0b0;\n  color: #247b56;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.login-btn:hover {\n  background-color: #95f1c1;\n}\n\n.alternative-login {\n  text-align: center;\n  margin-top: 30px;\n}\n\n.alternative-login p {\n  margin-bottom: 30px;\n  font-size: 14px;\n  margin-top: 20px;\n}\n\n.google-btn, .github-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 5px;\n  margin-top: 20px;\n  background-color: #070b10;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.google-btn img, .github-btn img {\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n}\n\n.google-btn span, .github-btn span {\n  font-weight: bold;\n  color: #fff;\n}\n\n\n.google-btn:hover, .github-btn:hover {\n  background-color: #f1f1f1;\n\n}\n\nspan:hover {\n  text-decoration: underline;\n}\n\n.register-link {\n  margin-top: 23px;\n  text-align: center;\n}\n\n.register-link span {\n  margin-right: 5px;\n  font-size: 14px;\n}\n\n.register-link a {\n  color: #1dbf73;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.register-link a:hover {\n  text-decoration: underline;\n}\n\n.error-message {\n  color: red;\n  margin-top: 15px;\n  text-align: center;\n}\n\n.divider {\n  width: 100%;\n  height: 2px;\n  background-color: white;\n  margin: 25px 0;\n}\n\n.google-btn:hover span,\n.github-btn:hover span {\n  color: #757575;\n}\n.google-btn span:hover,\n.github-btn span:hover {\n  color: black;\n}\n\n/*\n.form-group input:hover {\n  background-color: #95f1c1;\n}\n\n  .form-group input:focus {\n  background-color: #95f1c1;\n  color: #000;\n}\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Log in                                              👁️            Log in              {{ errorMessage }}                  Have Google or GitHub?                      Log in with Google                            Log in with GitHub                    Don\\'t have an account yet?      Sign up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuardian.html":{"url":"guards/LoginGuardian.html","title":"guard - LoginGuardian","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuardian\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/login/login-guardian.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login-guardian.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login-guardian.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuardian implements CanActivate {\n  constructor(private loginService: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.loginService.getToken()) {\n      console.log(this.loginService.getToken())\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  constructor(private router: Router,  private userService: UserService) {\n\n  }\n\n\n  logout(): void {\n    this.userService.logout()\n      .then(() => {\n        this.router.navigate(['/login']);\n      })\n      .catch(error => console.error(error));\n  }\n\n}\n\n    \n\n    \n        \n  \n    Home\n    Scoreboards\n    Contact\n    Logout\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Home    Scoreboards    Contact    Logout  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PauseComponent.html":{"url":"components/PauseComponent.html","title":"component - PauseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PauseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pause/pause.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pause\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./pause.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pause.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleKeyDown\n                            \n                            \n                                resumeGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pause/pause.component.ts:9\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resumeGame\n                        \n                    \n                \n            \n            \n                \nresumeGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-pause',\n  templateUrl: './pause.component.html',\n  styleUrl: './pause.component.css'\n})\nexport class PauseComponent {\n  @Output() close = new EventEmitter();\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === ' ') {\n      this.resumeGame();\n    }\n  }\n\n  resumeGame() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    The game is paused\n    Please press space to continue.\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      The game is paused    Please press space to continue.          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'PauseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formReg\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formReg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ViewEncapsulation} from '@angular/core';\nimport { FormControl, FormGroup, Validators, ValidatorFn, AbstractControl } from \"@angular/forms\";\nimport { UserService } from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css',],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RegisterComponent {\n  formReg: FormGroup;\n  errorMessage: string | null = null;\n\n  constructor(private userService: UserService, private router: Router) {\n    this.formReg = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      passwordConfirm: new FormControl('', [Validators.required, Validators.minLength(6)])\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator: ValidatorFn = (formGroup: AbstractControl): { [key: string]: boolean } | null => {\n    const password = formGroup.get('password')!.value;\n    const confirmPassword = formGroup.get('passwordConfirm')!.value;\n    return password === confirmPassword ? null : { 'mismatch': true };\n  };\n\n  onSubmit() {\n    if (this.formReg.valid) {\n      this.userService.register(this.formReg.value)\n        .then(response =>\n          this.router.navigate(['/login']))\n        .catch(error => {\n          console.error(error)\n          if (error.code === 'auth/email-already-in-use') {\n            this.errorMessage = 'Email already in use';\n          }\n        });\n    } else {\n      console.error(\"Form is invalid or passwords do not match.\");\n    }\n  }\n\n\n  goBack() {\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Register\n    \n      \n        \n        \n          Email is required.\n          Enter a valid email.\n        \n      \n      \n        \n        \n          Password is required.\n          Password must be at least 6 characters long.\n        \n      \n      \n        \n        \n          Passwords do not match.\n        \n      \n      Register\n      \n        {{ errorMessage }}\n      \n      &#8592; Go Back\n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                body {\n  background-color: #070b10;\n  color: #ffffff;\n  font-family: 'Arial', sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n}\n\n.register-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.register-container {\n  max-width: 400px;\n  width: 400px;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.register-container h2 {\n  margin-bottom: 15px;\n  color: #ffffff;\n  font-size: 1.3rem;\n}\n\n.form-group {\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  box-sizing: border-box;\n  border: 2px solid #4b4f54;\n  border-radius: 5px;\n  background-color: #070b10;\n  color: #fff;\n}\n\n.form-group input::placeholder {\n  color: #bbb;\n  font-size: 14px;\n}\n\n.error {\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.register-btn {\n  width: 100%;\n  padding: 9px;\n  background-color: #68f0b0;\n  color: #247b56;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.register-btn:hover {\n  background-color: #95f1c1;\n}\n\n.goback-icon {\n  display: inline-block;\n  margin-top: 15px;\n  color: #68f0b0;\n  cursor: pointer;\n  font-size: 0.9rem;\n  text-decoration: none;\n}\n\n.goback-icon:hover {\n  color: #95f1c1;\n  text-decoration: underline;\n}\n\n.error-message {\n  color: red;\n  margin-top: 15px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Register                                    Email is required.          Enter a valid email.                                              Password is required.          Password must be at least 6 characters long.                                              Passwords do not match.                    Register              {{ errorMessage }}            ← Go Back      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreItemComponent.html":{"url":"components/ScoreItemComponent.html","title":"component - ScoreItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScoreItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/scoreboards/score-item/score-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-item\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./score-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./score-item.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/scoreboards/score-item/score-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-score-item',\n  templateUrl: './score-item.component.html',\n  styleUrl: './score-item.component.css'\n})\nexport class ScoreItemComponent {\n  @Input() score!: { player: string, points: number };\n}\n\n    \n\n    \n        \n  {{ score.player }}\n  {{ score.points }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ score.player }}  {{ score.points }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreboardsComponent.html":{"url":"components/ScoreboardsComponent.html","title":"component - ScoreboardsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScoreboardsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/scoreboards/scoreboards.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scoreboards\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./scoreboards.component.html\n            \n\n\n\n            \n                styleUrl\n                ./scoreboards.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scores\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sortScores\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/scoreboards/scoreboards.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/scoreboards/scoreboards.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortScores\n                        \n                    \n                \n            \n            \n                \nsortScores()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/scoreboards/scoreboards.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        scores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { player: 'Player 1', points: 60 },\n    { player: 'Player 2', points: 100 },\n    { player: 'Player 3', points: 80 }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/scoreboards/scoreboards.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-scoreboards',\n  templateUrl: './scoreboards.component.html',\n  styleUrl: './scoreboards.component.css'\n})\nexport class ScoreboardsComponent implements OnInit {\n  scores = [\n    { player: 'Player 1', points: 60 },\n    { player: 'Player 2', points: 100 },\n    { player: 'Player 3', points: 80 }\n  ];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.sortScores();\n    console.log(this.userService.getToken());\n  }\n\n  sortScores(): void {\n    this.scores.sort((a, b) => b.points - a.points);\n  }\n\n}\n\n    \n\n    \n        \n\n\n  Scoreboard\n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Scoreboard                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreboardsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardCols\n                            \n                            \n                                boardRows\n                            \n                            \n                                    Public\n                                snakeCommunicationsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveSettings\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSettings\n                        \n                    \n                \n            \n            \n                \ncloseSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveSettings\n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardCols\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(20, [Validators.min(10), Validators.max(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardRows\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(20, [Validators.min(10), Validators.max(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snakeCommunicationsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnakeCommunicationsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Output, EventEmitter, OnInit} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  @Output() close = new EventEmitter();\n  boardCols = new FormControl(20, [Validators.min(10), Validators.max(30)]);\n  boardRows = new FormControl(20, [Validators.min(10), Validators.max(30)]);\n\n  constructor(public snakeCommunicationsService: SnakeCommunicationsService) {\n  }\n\n  ngOnInit() {\n    const savedboardCols = localStorage.getItem('boardCols');\n    if (savedboardCols !== null) {\n      this.boardCols.setValue(+savedboardCols);\n    }\n    const savedboardRows = localStorage.getItem('boardRows');\n    if (savedboardRows !== null) {\n      this.boardRows.setValue(+savedboardRows);\n    }\n\n    // Subscribe to changes in boardCols and update boardRows accordingly\n    this.boardCols.valueChanges.subscribe(value => {\n      this.boardRows.setValue(value, {emitEvent: false});\n    });\n\n    // Subscribe to changes in boardRows and update boardCols accordingly\n    this.boardRows.valueChanges.subscribe(value => {\n      this.boardCols.setValue(value, {emitEvent: false});\n    });\n  }\n\n  saveSettings() {\n    const boardColsItem = localStorage.getItem('boardCols');\n    const boardRowsItem = localStorage.getItem('boardRows');\n    const oldBoardColsValue = boardColsItem ? +boardColsItem : 20;\n    const oldBoardRowsValue = boardRowsItem ? +boardRowsItem : 20;\n\n    let newBoardColsValue = this.boardCols.value ?? oldBoardColsValue;\n    let newBoardRowsValue = this.boardRows.value ?? oldBoardRowsValue;\n\n    if (newBoardColsValue > 30) {\n      newBoardColsValue = oldBoardColsValue;\n    }\n    if (newBoardRowsValue > 30) {\n      newBoardRowsValue = oldBoardRowsValue;\n    }\n\n    localStorage.setItem('boardCols', newBoardColsValue.toString());\n    localStorage.setItem('boardRows', newBoardRowsValue.toString());\n    console.log(newBoardColsValue, newBoardRowsValue);\n  }\n\n  closeSettings() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    Settings\n\n    \n      Board Cols:\n      \n      \n        The maximum value is 30.\n      \n    \n\n    \n      Board Rows:\n      \n      \n        The maximum value is 30.\n      \n    \n\n    \n      Close\n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                #settings-menu {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.3s ease;\n  opacity: 1;\n}\n\n#settings-menu.ng-hide {\n  opacity: 0;\n}\n\n#settings-content {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  max-width: 400px;\n  width: 90%;\n  transition: transform 0.3s ease, opacity 0.3s ease;\n  transform: translateY(0);\n  opacity: 1;\n}\n\n#settings-content.ng-hide {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n\n#settings-content h2 {\n  margin-top: 0;\n  color: #333;\n}\n\n.input-group {\n  margin-bottom: 20px;\n}\n\n#settings-content label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #555;\n}\n\n#settings-content input[type=\"number\"] {\n  width: calc(100% - 20px);\n  margin-bottom: 10px;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  outline: none;\n  box-sizing: border-box;\n}\n\n#settings-content input[type=\"number\"]::-webkit-inner-spin-button,\n#settings-content input[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n#settings-content input[type=\"number\"]:hover,\n#settings-content input[type=\"number\"]:focus {\n  border-color: #3eff65;\n}\n\n.button-group {\n  margin-top: 20px;\n}\n\n#settings-content button {\n  background-color: #3eff65;\n  color: black;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s ease;\n  font-family: VideoGameFont, serif;\n}\n\n#settings-content button:hover {\n  background-color: #3ea62d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Settings          Board Cols:                    The maximum value is 30.                    Board Rows:                    The maximum value is 30.                    Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnakeCommunicationsService.html":{"url":"injectables/SnakeCommunicationsService.html","title":"injectable - SnakeCommunicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnakeCommunicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/snake-communications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorOccurred\n                            \n                            \n                                    Private\n                                gameStates\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                    Private\n                                score\n                            \n                            \n                                    Private\n                                snakeBoardUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBestScore\n                            \n                            \n                                    Public\n                                getGameStates\n                            \n                            \n                                    Public\n                                getScore\n                            \n                            \n                                    Public\n                                getSnakeBoardUpdate\n                            \n                            \n                                    Public\n                                pauseGame\n                            \n                            \n                                    Public\n                                resumeGame\n                            \n                            \n                                    Public\n                                saveScore\n                            \n                            \n                                    Public\n                                sendToken\n                            \n                            \n                                    Public\n                                setMovement\n                            \n                            \n                                    Public\n                                    Async\n                                startConnection\n                            \n                            \n                                    Public\n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/snake-communications.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getBestScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBestScore(howMany: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                howMany\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getGameStates\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGameStates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getScore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSnakeBoardUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSnakeBoardUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pauseGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    pauseGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resumeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    resumeGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveScore(score: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToken(idToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setMovement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMovement(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        startConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    startConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    startGame(columns: number, rows: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rows\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorOccurred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        snakeBoardUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport {CellType, GameStates} from \"../common/Enums\";\nimport {Observable, Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from \"../common/User\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnakeCommunicationsService {\n  private hubConnection: signalR.HubConnection;\n  private snakeBoardUpdate = new Subject()\n  private gameStates = new Subject()\n  private score = new Subject()\n  public errorOccurred = new EventEmitter();\n\n  constructor(private http: HttpClient) {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(\"http://localhost:5273/snakegamehub\")\n      .build();\n\n    this.hubConnection.onclose((error) => {\n      console.log('Connection closed');\n      if (error) {\n        this.errorOccurred.emit(error.message);\n      }\n    });\n\n\n    this.hubConnection.onreconnected((connectionId) => {\n      console.log('Connection reestablished');\n      this.errorOccurred.emit('La conexión ha sido restablecida');\n    });\n\n    this.hubConnection.on(\"SnakeBoardUpdate\", (boardArray: CellType [][]) => {\n      this.snakeBoardUpdate.next(boardArray);\n    });\n    this.hubConnection.on(\"GameStates\", (gameState: GameStates) => {\n      this.gameStates.next(gameState);\n    });\n    this.hubConnection.on(\"Score\", (score: number) => {\n      this.score.next(score);\n    });\n  }\n\n  public async startConnection(): Promise {\n    try {\n      await this.hubConnection.start();\n      console.log('Connection started');\n    } catch (err) {\n      if (err instanceof Error) {\n        console.log('Error while starting connection: ' + err.message);\n        this.errorOccurred.emit(err.message);\n      } else {\n        // Handle unexpected error type\n        console.log('Unexpected error while starting connection: ' + err);\n        this.errorOccurred.emit(String(err));\n      }\n    }\n  }\n  public getSnakeBoardUpdate(): Observable {\n    return this.snakeBoardUpdate.asObservable();\n  }\n\n  public getGameStates(): Observable {\n    return this.gameStates.asObservable();\n  }\n\n  public setMovement(key: string): Observable {\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify(key);\n    return this.http.post('http://localhost:5273/api/Game/SetMovement', body, {'headers': headers});\n  }\n\n  public pauseGame(): Observable {\n    return this.http.post('http://localhost:5273/api/Game/PauseGame', null);\n  }\n\n  public resumeGame(): Observable {\n    return this.http.post('http://localhost:5273/api/Game/ResumeGame', null);\n  }\n\n  public startGame(columns: number, rows: number): Observable {\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify({columns, rows});\n    return this.http.post(`http://localhost:5273/api/Game/Start`, body, {'headers': headers});\n  }\n  public getScore(): Observable {\n    return this.score.asObservable();\n  }\n\n  public sendToken(idToken: string): Observable {\n    const headers = { 'Content-Type': 'application/json' };\n    const body = JSON.stringify(idToken);\n    return this.http.post('http://localhost:5273/api/FirebaseDb/GetUserData', body, { headers });\n  }\n\n  public saveScore(score: number): Observable {\n    const headers = { 'Content-Type': 'application/json' };\n    const body = JSON.stringify(score);\n    return this.http.post('http://localhost:5273/api/FirebaseDb/SaveScore', body, { headers });\n  }\n\n\n  public getBestScore(howMany:number): Observable {\n    return this.http.get(`http://localhost:5273/api/FirebaseDb/GetTopScores?count=${howMany}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/User.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                displayName\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                score\n                            \n                            \n                                    Optional\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:10\n                        \n                    \n\n            \n                \n                    Gets or sets the display name of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:15\n                        \n                    \n\n            \n                \n                    Gets or sets the email of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:20\n                        \n                    \n\n            \n                \n                    Gets or sets the score of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:5\n                        \n                    \n\n            \n                \n                    Gets or sets the unique identifier for the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Gets or sets the unique identifier for the user.\n   */\n  uid?: string;\n\n  /**\n   * Gets or sets the display name of the user.\n   */\n  displayName?: string;\n\n  /**\n   * Gets or sets the email of the user.\n   */\n  email?: string;\n\n  /**\n   * Gets or sets the score of the user.\n   */\n  score?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                login\n                            \n                            \n                                loginWithGithub\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, cookies: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookies\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGithub\n                        \n                    \n                \n            \n            \n                \nloginWithGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/services/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, signInWithPopup, GoogleAuthProvider, GithubAuthProvider} from \"@angular/fire/auth\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private token: string | null = null;\n  constructor(private auth: Auth,private cookies:CookieService) { }\n\n  register({email, password}: any) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n\n  login({email, password}: any) {\n    return signInWithEmailAndPassword(this.auth, email, password).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token)\n      });\n      return userCredential;\n    });\n  }\n  loginWithGoogle() {\n    return signInWithPopup(this.auth, new GoogleAuthProvider()).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token);\n      });\n      return userCredential;\n    });\n  }\n\n  loginWithGithub(){\n    return signInWithPopup(this.auth, new GithubAuthProvider()).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token);\n      });\n      return userCredential;\n    });\n  }\n  logout() {\n    this.token=\"\";\n    this.cookies.set(\"token\",this.token)\n    return signOut(this.auth);\n  }\n\n  getToken() {\n    return this.cookies.get(\"token\")\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/body-class.directive.ts\n            \n            directive\n            BodyClassDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/errors/errors.component.ts\n            \n            component\n            ErrorsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/game-over/game-over.component.ts\n            \n            component\n            GameOverComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/login/login-guardian.ts\n            \n            guard\n            LoginGuardian\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pause/pause.component.ts\n            \n            component\n            PauseComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/scoreboards/score-item/score-item.component.ts\n            \n            component\n            ScoreItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/scoreboards/scoreboards.component.ts\n            \n            component\n            ScoreboardsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/User.ts\n            \n            class\n            User\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/snake-communications.service.ts\n            \n            injectable\n            SnakeCommunicationsService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/platform-server : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @angular/ssr : ^17.3.3\n        \n            express : ^4.18.2\n        \n            firebase-tools : ^13.10.2\n        \n            js-cookie : ^3.0.5\n        \n            ngx-cookie-service : ^17.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellType   (src/.../Enums.ts)\n                        \n                        \n                            GameStates   (src/.../Enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/Enums.ts\n    \n        \n            \n                \n                    \n                        \n                        CellType\n                    \n                \n                        \n                            \n                                 Empty\n                            \n                        \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                 Food\n                            \n                        \n                        \n                            \n                                 Snake\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GameStates\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                 Paused\n                            \n                        \n                        \n                            \n                                 GameOver\n                            \n                        \n                        \n                            \n                                 Win\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSnakeProWeb\nThis project was generated with Angular CLI version 17.3.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyClassDirective\n\nBodyClassDirective\n\nAppModule -->\n\nBodyClassDirective->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nErrorsComponent\n\nErrorsComponent\n\nAppModule -->\n\nErrorsComponent->AppModule\n\n\n\n\n\nGameOverComponent\n\nGameOverComponent\n\nAppModule -->\n\nGameOverComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPauseComponent\n\nPauseComponent\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nScoreItemComponent\n\nScoreItemComponent\n\nAppModule -->\n\nScoreItemComponent->AppModule\n\n\n\n\n\nScoreboardsComponent\n\nScoreboardsComponent\n\nAppModule -->\n\nScoreboardsComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSnakeCommunicationsService\n\nSnakeCommunicationsService\n\nAppModule -->\n\nSnakeCommunicationsService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    apiKey: \"AIzaSyC4K7mi-Xlt2R3BhbZEo7_5yRvxG3xJJeQ\",\n    authDomain: \"snakepro-2bf73.firebaseapp.com\",\n    databaseURL: \"https://snakepro-2bf73-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"snakepro-2bf73\",\n    storageBucket: \"snakepro-2bf73.appspot.com\",\n    messagingSenderId: \"169384997647\",\n    appId: \"1:169384997647:web:53c3c0e1a388f9bc2ac47a\",\n    measurementId: \"G-M4BPJRSBVW\",\n  },\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

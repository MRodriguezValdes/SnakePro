var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.124,1,0.594]],["body/components/AppComponent.html",[0,0.207,1,1.045,2,1.3,3,0.444,4,0.389,5,1.101,6,1.894,7,1.101,8,1.101,9,0.389,10,3.052,11,1.008,12,1.735,13,1.441,14,2.703,15,2.442,16,5.24,17,1.42,18,4.734,19,0.756,20,3.672,21,2.644,22,1.72,23,2.34,24,0.444,25,2.34,26,2.34,27,2.644,28,1.312,29,1.894,30,1.894,31,2.096,32,2.096,33,0.033,34,0.444,35,0.285,36,0.84,37,1.42,38,1.42,39,0.765,40,1.66,41,1.101,42,0.802,43,1.101,44,0.693,45,1.101,46,0.765,47,1.101,48,0.765,49,1.008,50,1.101,51,0.693,52,1.101,53,0.693,54,1.101,55,0.765,56,1.101,57,0.765,58,1.101,59,0.693,60,1.101,61,0.693,62,1.101,63,0.765,64,0.921,65,1.101,66,0.765,67,1.101,68,1.008,69,0.693,70,1.008,71,1.101,72,0.025,73,0.025]],["title/modules/AppModule.html",[74,1.623,75,1.796]],["body/modules/AppModule.html",[1,1.119,3,0.323,4,0.283,9,0.283,13,0.612,19,0.852,24,0.323,28,1.907,29,1.378,30,1.378,31,1.526,32,1.526,33,0.035,34,0.323,35,0.208,36,0.612,44,1.007,46,1.111,48,1.111,49,0.734,51,1.007,53,1.007,55,1.111,57,1.19,59,1.079,61,1.007,63,1.111,66,1.111,69,1.007,72,0.02,73,0.02,74,1.378,75,3.671,76,1.378,77,1.526,78,3.204,79,3.204,80,3.204,81,1.703,82,2.222,83,2.222,84,2.222,85,2.222,86,2.222,87,3.263,88,2.747,89,1.925,90,1.703,91,2.672,92,2.747,93,2.747,94,3.815,95,3.815,96,1.925,97,1.925,98,2.672,99,2.222,100,3.815,101,2.672,102,2.672,103,3.815,104,3.815,105,1.526,106,2.672,107,1.925,108,2.672,109,2.672,110,2.672,111,3.815,112,2.672,113,3.815,114,3.815,115,1.925,116,1.925,117,2.672,118,2.222,119,2.222,120,2.222,121,2.222,122,2.672,123,1.925,124,2.672,125,1.703,126,2.672,127,2.222,128,2.672]],["title/modules/AppRoutingModule.html",[74,1.623,87,1.796]],["body/modules/AppRoutingModule.html",[0,0.234,3,0.491,4,0.43,9,0.43,19,0.849,24,0.491,33,0.033,34,0.491,35,0.316,44,0.953,51,0.953,53,0.953,59,0.953,61,0.767,72,0.027,73,0.027,76,2.096,81,2.59,87,2.883,92,2.927,93,3.636,115,2.927,118,3.379,119,3.379,120,3.379,121,3.379,127,3.379,129,4.064,130,4.064,131,5.049,132,5.492,133,1.904,134,3.379,135,4.064,136,2.59,137,2.59,138,4.064,139,4.064,140,1.904,141,6.021,142,4.064,143,3.217,144,4.064,145,4.064,146,5.049,147,2.59,148,2.59,149,2.927,150,4.064,151,2.927,152,4.064]],["title/modules/AppServerModule.html",[74,1.623,153,2.004]],["body/modules/AppServerModule.html",[1,1.159,3,0.504,4,0.441,9,0.441,19,0.792,24,0.504,33,0.034,34,0.504,35,0.324,36,0.955,72,0.028,73,0.028,74,2.152,75,3.46,76,2.152,77,2.382,78,3.004,79,4.002,80,3.004,81,2.658,88,3.695,89,3.004,90,2.658,92,3.695,93,3.695,96,3.004,99,3.468,153,3.912,154,3.468,155,4.171,156,4.171,157,4.171,158,5.13,159,2.658,160,4.171]],["title/directives/BodyClassDirective.html",[39,0.655,69,0.594]],["body/directives/BodyClassDirective.html",[3,0.392,4,0.343,9,0.343,11,0.89,12,1.197,19,0.72,22,2.31,24,0.392,33,0.035,34,0.392,35,0.252,39,0.908,42,0.668,68,0.89,69,0.824,70,1.197,72,0.023,73,0.023,133,1.519,143,3.141,147,2.78,161,4.711,162,2.696,163,1.864,164,4.929,165,0.392,166,1.094,167,1.967,168,4.929,169,0.998,170,5.272,171,2.72,172,4.362,173,0.89,174,3.242,175,5.272,176,3.306,177,5.79,178,1.039,179,4.362,180,1.094,181,0.755,182,0.998,183,4.362,184,3.242,185,1.026,186,1.478,187,3.242,188,4.362,189,1.614,190,3.242,191,3.242,192,4.929,193,3.626,194,3.242,195,4.362,196,1.851,197,2.696,198,1.062,199,3.242,200,4.362,201,3.242,202,2.335,203,2.696,204,3.242,205,4.362,206,4.081,207,3.242,208,5.272,209,3.242,210,3.242,211,2.696,212,3.242,213,3.242]],["title/components/ContactComponent.html",[0,0.124,44,0.594]],["body/components/ContactComponent.html",[0,0.15,1,0.386,2,0.859,3,0.247,4,0.216,5,0.613,6,1.054,7,0.613,8,0.613,9,0.216,11,0.561,12,1.589,13,1.313,15,1.614,17,0.938,19,0.519,22,1.781,24,0.247,33,0.035,34,0.247,35,0.159,36,0.468,37,0.938,38,0.938,39,0.426,40,1.277,41,0.613,42,0.832,43,0.613,44,0.804,45,0.613,46,0.426,47,0.613,48,0.426,49,0.561,50,0.613,51,0.386,52,0.613,53,0.386,54,0.613,55,0.426,56,0.613,57,0.426,58,0.613,59,0.386,60,0.613,61,0.386,62,0.613,63,0.426,64,0.513,65,0.613,66,0.426,67,0.613,68,0.561,69,0.386,70,0.561,71,0.613,72,0.017,73,0.017,125,1.303,140,0.958,151,3.066,163,1.337,165,0.247,166,0.785,167,0.731,169,0.716,171,2.196,173,0.561,178,0.981,180,0.513,181,0.741,182,0.468,185,0.651,186,0.938,189,1.585,198,0.669,206,2.253,214,1.699,215,3.8,216,3.128,217,3.103,218,3.8,219,3.8,220,3.311,221,3.066,222,2.044,223,3.084,224,1.801,225,3.128,226,2.044,227,2.044,228,1.503,229,1.503,230,2.044,231,2.431,232,2.764,233,2.044,234,2.044,235,2.044,236,2.044,237,0.958,238,1.472,239,2.044,240,3.128,241,3.128,242,3.128,243,2.044,244,3.128,245,3.128,246,1.786,247,3.128,248,2.044,249,3.8,250,2.044,251,2.367,252,2.044,253,3.8,254,2.044,255,3.128,256,3.128,257,2.966,258,1.994,259,3.128,260,0.669,261,2.044,262,2.62,263,3.041,264,2.044,265,4.427,266,5.326,267,1.303,268,1.303,269,1.167,270,2.044,271,2.764,272,2.044,273,2.044,274,2.17,275,2.62,276,2.17,277,1.786,278,2.422,279,2.044,280,2.62,281,3.486,282,2.431,283,2.268,284,1.699,285,1.786,286,1.167,287,1.167,288,2.431,289,2.044,290,2.422,291,3.486,292,2.044,293,1.472,294,1.054,295,1.786,296,2.044,297,2.044,298,1.699,299,3.128,300,2.044,301,0.958,302,2.044,303,2.044,304,2.044,305,3.066,306,1.472,307,1.472,308,1.303,309,2.044,310,1.167,311,1.167,312,1.303,313,2.044,314,1.472,315,2.044,316,2.044,317,2.253,318,2.044,319,1.699,320,1.994,321,1.994,322,1.786,323,1.303]],["title/injectables/ContactService.html",[223,2.004,324,1.344]],["body/injectables/ContactService.html",[3,0.484,4,0.424,9,0.424,14,2.289,19,0.745,24,0.484,31,3.264,32,2.289,33,0.035,34,0.484,35,0.311,42,0.766,72,0.027,73,0.027,165,0.484,166,1.256,167,1.951,169,1.146,173,1.1,178,1.03,180,1.256,181,0.835,182,1.146,185,0.835,189,1.312,196,2.289,198,1.312,223,3.19,228,1.312,229,1.312,324,2.139,325,2.554,326,3.332,327,5.458,328,5.005,329,3.332,330,5.005,331,3.605,332,5.005,333,4.008,334,5.005,335,3.931,336,5.005,337,2.554,338,1.878,339,4.008]],["title/components/ErrorsComponent.html",[0,0.124,46,0.655]],["body/components/ErrorsComponent.html",[0,0.17,1,0.473,2,0.999,3,0.303,4,0.265,5,0.751,6,1.292,7,0.751,8,0.751,9,0.265,11,0.687,12,1.647,13,1.363,15,1.877,17,1.092,19,0.497,22,2.009,24,0.303,28,1.788,29,1.292,30,1.292,33,0.035,34,0.303,35,0.195,36,0.573,37,1.092,38,1.092,39,0.521,40,1.412,41,0.751,42,0.721,43,0.751,44,0.473,45,0.751,46,0.98,47,0.751,48,0.521,49,0.687,50,0.751,51,0.473,52,0.751,53,0.473,54,0.751,55,0.521,56,0.751,57,0.521,58,0.751,59,0.473,60,0.751,61,0.473,62,0.751,63,0.521,64,0.628,65,0.751,66,0.521,67,0.751,68,0.687,69,0.473,70,0.687,71,0.751,72,0.02,73,0.02,159,2.319,163,1.555,165,0.44,166,0.913,169,0.833,171,2.428,173,0.687,178,1.017,180,0.628,181,0.766,182,0.573,185,0.758,186,1.092,189,1.541,220,1.596,228,1.192,229,1.192,251,2.58,257,2.449,258,1.596,260,0.82,262,2.688,263,2.979,267,1.596,269,1.43,271,1.43,274,2.078,275,2.078,276,2.449,277,1.43,280,1.43,281,1.803,282,1.43,283,2.523,285,1.43,286,2.078,287,2.449,288,2.078,294,1.292,295,1.43,301,1.706,305,1.803,306,1.803,307,1.803,308,1.596,310,1.43,311,1.43,312,1.596,314,1.803,322,2.078,340,2.081,341,3.64,342,4.288,343,3.64,344,3.187,345,4.288,346,4.708,347,4.708,348,2.621,349,3.187,350,2.319,351,3.187,352,2.504,353,3.64,354,2.504,355,2.449,356,2.504,357,2.504,358,2.504,359,4.288,360,2.504,361,2.319,362,2.081,363,2.504,364,1.596,365,2.504,366,1.596,367,2.621,368,3.64,369,1.596,370,1.43,371,1.596,372,2.078,373,1.596,374,3.026,375,2.504,376,1.596,377,2.081,378,2.081,379,2.504,380,2.504,381,1.596,382,2.319,383,3.026,384,2.081,385,2.621,386,2.504,387,1.803,388,1.43,389,2.081,390,1.803,391,2.081,392,2.504]],["title/components/GameOverComponent.html",[0,0.124,48,0.655]],["body/components/GameOverComponent.html",[0,0.196,1,0.621,2,1.209,3,0.398,4,0.348,5,0.987,7,0.987,8,0.987,9,0.348,11,0.903,12,1.712,13,1.421,17,1.321,19,0.449,24,0.398,33,0.034,34,0.398,35,0.256,36,0.753,37,1.321,38,1.321,39,0.685,40,1.591,41,0.987,42,0.76,43,0.987,44,0.621,45,0.987,46,0.685,47,0.987,48,1.105,49,1.642,50,0.987,51,0.621,52,0.987,53,0.621,54,0.987,55,0.685,56,0.987,57,0.685,58,0.987,59,0.621,60,0.987,61,0.621,62,0.987,63,0.685,64,1.482,65,0.987,66,0.685,67,0.987,68,0.903,69,0.621,70,0.903,71,0.987,72,0.024,73,0.024,107,3.82,165,0.398,169,1.008,178,0.938,181,0.674,185,0.685,186,0.987,260,1.078,301,2.065,348,3.173,350,2.808,351,3.524,355,2.836,361,2.808,366,2.097,393,4.41,394,2.736,395,5.304,396,4.406,397,2.273,398,4.406,399,5.304,400,2.516,401,3.291,402,3.291,403,3.291,404,4.406,405,4.406]],["title/components/HomeComponent.html",[0,0.124,51,0.594]],["body/components/HomeComponent.html",[0,0.131,1,0.311,2,0.725,3,0.199,4,0.174,5,0.494,7,0.494,8,0.494,9,0.174,11,0.452,12,1.52,13,1.253,17,0.792,19,0.604,21,1.186,22,1.549,23,1.05,24,0.199,25,2.107,26,2.639,27,1.186,28,1.58,29,0.85,30,0.85,31,2.16,32,0.941,33,0.035,34,0.199,35,0.128,36,0.377,37,0.792,38,0.792,39,0.343,40,1.135,41,0.494,42,0.711,43,0.494,44,0.311,45,0.494,46,0.343,47,0.494,48,0.343,49,1.137,50,0.494,51,0.714,52,0.494,53,0.311,54,0.494,55,0.343,56,0.494,57,0.343,58,0.494,59,0.311,60,0.494,61,0.311,62,0.494,63,0.343,64,1.354,65,0.494,66,0.343,67,0.792,68,0.452,69,0.311,70,0.452,71,0.494,72,0.014,73,0.014,140,1.238,143,1.683,163,1.128,165,0.199,166,0.663,167,0.944,169,0.605,171,1.951,173,0.452,178,1.116,180,0.949,181,0.826,182,0.866,185,1.064,186,1.532,189,1.356,193,1.369,198,0.539,202,2.725,224,1.66,228,1.768,229,1.74,231,2.16,232,3.082,237,0.772,238,1.186,246,2.524,251,0.85,283,1.773,284,2.749,319,1.369,323,1.05,331,2.381,338,1.94,344,3.386,349,2.107,364,1.05,385,1.186,397,1.362,400,3.125,406,1.369,407,2.641,408,2.641,409,4.42,410,2.749,411,2.749,412,2.749,413,3.307,414,3.307,415,3.307,416,3.307,417,3.307,418,2.641,419,2.641,420,2.641,421,3.783,422,3.783,423,3.783,424,3.783,425,3.783,426,3.145,427,2.196,428,2.641,429,1.369,430,2.641,431,1.369,432,1.647,433,3.145,434,2.641,435,2.641,436,1.647,437,2.749,438,2.641,439,3.307,440,1.647,441,1.647,442,2.641,443,1.369,444,2.641,445,1.647,446,1.647,447,1.647,448,1.647,449,1.647,450,1.647,451,1.647,452,1.647,453,3.145,454,1.647,455,1.647,456,1.647,457,1.647,458,1.647,459,1.647,460,1.647,461,1.647,462,2.196,463,1.647,464,1.647,465,0.772,466,1.369,467,1.647,468,1.647,469,2.749,470,1.369,471,1.362,472,1.647,473,2.749,474,1.369,475,1.647,476,1.647,477,1.647,478,1.647,479,1.369,480,1.647,481,1.647,482,2.641,483,1.647,484,1.647,485,1.647,486,1.647,487,1.647,488,3.307,489,1.647,490,1.647,491,2.641,492,2.641,493,4.978,494,2.641,495,3.783,496,1.647,497,3.307,498,1.647,499,1.647,500,1.647,501,1.647,502,1.647,503,1.647,504,1.186,505,1.647,506,1.647,507,1.647,508,2.641,509,1.647,510,1.647,511,1.647,512,1.186,513,2.196,514,1.369,515,1.647,516,1.647,517,1.647,518,1.647,519,2.641,520,3.145,521,2.641,522,2.641,523,2.641,524,1.647,525,1.647]],["title/components/LoginComponent.html",[0,0.124,53,0.594]],["body/components/LoginComponent.html",[0,0.122,1,0.281,2,0.667,3,0.18,4,0.157,5,0.446,6,0.767,7,0.446,8,0.446,9,0.157,11,0.408,12,1.484,13,1.221,15,1.254,17,0.729,19,0.576,23,0.947,24,0.18,28,1.59,29,0.767,30,0.767,33,0.035,34,0.18,35,0.115,36,0.34,37,0.729,38,0.729,39,0.309,40,1.068,41,0.446,42,0.545,43,0.446,44,0.281,45,0.446,46,0.309,47,0.446,48,0.309,49,0.408,50,0.446,51,0.281,52,0.446,53,0.672,54,0.446,55,0.309,56,0.446,57,0.309,58,0.446,59,0.281,60,0.446,61,0.281,62,0.446,63,0.309,64,0.373,65,0.446,66,0.309,67,0.446,68,0.408,69,0.281,70,0.408,71,0.446,72,0.013,73,0.013,105,0.849,133,0.696,140,1.445,147,3.291,148,2.269,165,0.18,166,0.61,167,1.404,169,0.556,173,0.408,176,2.54,178,0.933,180,0.373,181,0.601,182,0.34,185,0.818,186,1.178,189,1.166,196,0.849,198,0.487,217,1.388,220,0.947,221,2.565,224,1.507,228,1.009,229,1.009,231,1.388,237,0.696,246,1.388,251,0.767,257,2.407,260,1.38,262,2.743,263,3.24,265,1.235,267,1.549,268,0.947,269,2.65,271,2.889,274,2.033,275,1.76,276,2.65,277,2.242,278,1.549,280,1.388,282,1.76,283,0.696,285,2.407,286,2.242,287,2.54,288,2.033,290,1.965,291,1.75,293,2.828,294,1.254,295,1.388,301,0.696,310,2.033,311,2.033,312,0.947,317,1.07,320,1.549,321,1.549,322,2.407,323,0.947,335,1.07,338,1.445,349,2.502,364,1.965,367,2.22,369,1.549,370,1.388,371,1.549,372,2.242,373,1.549,376,1.549,377,1.235,381,1.965,382,2.269,385,1.07,387,2.22,388,1.388,390,1.07,465,2.42,471,2.394,504,1.07,514,1.235,526,1.235,527,3.083,528,2.43,529,3.083,530,3.083,531,2.563,532,3.561,533,3.561,534,3.561,535,3.561,536,1.07,537,2.43,538,1.486,539,1.486,540,1.486,541,1.486,542,1.486,543,1.486,544,2.961,545,1.486,546,1.486,547,2.22,548,1.486,549,2.22,550,1.486,551,2.563,552,3.083,553,3.083,554,3.083,555,3.083,556,3.083,557,1.486,558,3.927,559,3.083,560,3.083,561,2.22,562,3.083,563,3.083,564,3.083,565,2.22,566,2.22,567,3.083,568,1.235,569,1.486,570,1.486,571,5.164,572,2.02,573,2.43,574,1.486,575,5.164,576,2.43,577,4.642,578,1.486,579,2.43,580,2.43,581,1.235,582,1.75,583,1.07,584,1.235,585,1.235,586,2.828,587,1.235,588,1.07,589,1.235,590,2.02,591,2.22,592,1.235,593,1.235,594,2.563,595,1.486,596,3.083,597,2.43,598,1.235,599,1.235,600,3.993,601,1.235,602,1.235,603,1.235,604,3.265,605,2.563,606,2.43,607,1.486,608,2.43,609,2.43,610,3.927,611,1.486,612,3.083,613,2.563,614,2.02,615,3.561,616,1.486,617,1.486,618,1.486,619,1.486,620,1.486,621,1.486,622,1.486,623,1.486,624,1.486]],["title/guards/LoginGuardian.html",[136,2.004,137,2.004]],["body/guards/LoginGuardian.html",[3,0.475,4,0.416,9,0.416,14,2.242,19,0.738,24,0.475,33,0.034,34,0.475,35,0.305,42,0.756,72,0.027,73,0.027,133,1.84,134,4.862,137,3.149,163,1.678,165,0.475,167,1.404,169,1.131,173,1.078,176,3.46,178,0.933,180,1.24,181,0.756,182,1.131,185,0.818,198,1.286,224,2.029,231,2.822,232,2.242,237,1.84,246,2.242,324,2.111,337,2.503,338,2.316,625,3.927,626,4.495,627,3.265,628,3.927,629,3.927,630,4.942,631,3.927,632,5.675,633,5.407,634,5.675,635,3.927,636,4.942,637,3.927,638,3.927,639,3.927]],["title/components/NavbarComponent.html",[0,0.124,55,0.655]],["body/components/NavbarComponent.html",[0,0.198,1,0.632,2,1.223,3,0.405,4,0.354,5,1.004,7,1.004,8,1.004,9,0.354,11,0.919,12,1.716,13,1.424,17,1.337,19,0.684,24,0.405,33,0.034,34,0.405,35,0.26,36,0.766,37,1.337,38,1.337,39,0.697,40,1.602,41,1.004,42,0.818,43,1.004,44,0.632,45,1.004,46,0.697,47,1.004,48,0.697,49,0.919,50,1.004,51,0.632,52,1.004,53,0.632,54,1.004,55,1.112,56,1.004,57,0.697,58,1.004,59,0.632,60,1.004,61,0.632,62,1.004,63,0.697,64,0.84,65,1.004,66,0.697,67,1.004,68,0.919,69,0.632,70,0.919,71,1.004,72,0.024,73,0.024,133,1.569,143,2.84,149,3.21,151,3.21,165,0.405,167,1.197,169,1.02,173,0.919,176,3.265,178,0.841,180,0.84,181,0.512,182,0.766,185,0.697,186,1.337,198,1.096,224,2.087,237,1.569,397,2.299,565,2.411,566,2.411,640,2.783,641,4.457,642,4.457,643,4.457,644,4.754,645,3.348,646,3.348,647,3.348,648,3.348,649,2.783]],["title/components/PauseComponent.html",[0,0.124,57,0.655]],["body/components/PauseComponent.html",[0,0.194,1,0.603,2,1.186,3,0.386,4,0.338,5,0.958,7,0.958,8,0.958,9,0.338,11,0.877,12,1.705,13,1.415,17,1.295,19,0.436,21,2.301,24,0.386,33,0.034,34,0.386,35,0.248,36,0.731,37,1.295,38,1.295,39,0.665,40,1.572,41,0.958,42,0.802,43,0.958,44,0.603,45,0.958,46,0.665,47,0.958,48,0.665,49,1.343,50,0.958,51,0.603,52,0.958,53,0.603,54,0.958,55,0.665,56,0.958,57,1.091,58,0.958,59,0.603,60,0.958,61,0.603,62,0.958,63,0.665,64,0.802,65,0.958,66,0.665,67,0.958,68,0.877,69,0.603,70,0.877,71,0.958,72,0.023,73,0.023,165,0.386,169,0.988,178,0.989,180,0.802,181,0.661,182,0.731,185,0.899,186,1.295,202,3.775,260,1.046,350,2.752,351,3.118,355,2.794,361,2.752,366,2.036,367,3.111,397,2.228,427,3.59,431,2.656,433,4.357,443,2.656,513,2.656,650,2.656,651,4.319,652,4.319,653,4.319,654,4.319,655,4.357,656,4.319,657,3.195,658,3.195,659,4.319,660,4.319,661,4.319,662,3.195,663,3.195,664,3.59,665,4.319,666,4.319,667,4.319]],["title/components/RegisterComponent.html",[0,0.124,59,0.594]],["body/components/RegisterComponent.html",[0,0.146,1,0.367,2,0.827,3,0.235,4,0.206,5,0.584,6,1.004,7,0.584,8,0.584,9,0.206,11,0.534,12,1.574,13,1.3,15,1.554,17,0.903,19,0.567,23,1.24,24,0.235,33,0.035,34,0.235,35,0.151,36,0.445,37,0.903,38,0.903,39,0.405,40,1.244,41,0.584,42,0.635,43,0.584,44,0.367,45,0.584,46,0.405,47,0.584,48,0.405,49,0.534,50,0.584,51,0.367,52,0.584,53,0.367,54,0.584,55,0.405,56,0.584,57,0.405,58,0.584,59,0.783,60,0.584,61,0.367,62,0.584,63,0.405,64,0.488,65,0.584,66,0.405,67,0.584,68,0.534,69,0.367,70,0.534,71,0.584,72,0.016,73,0.016,105,1.111,125,1.24,133,0.912,140,1.412,148,3.479,165,0.235,166,0.756,167,0.696,169,0.689,173,0.534,176,2.826,178,0.896,180,0.488,181,0.635,182,0.445,185,0.627,186,0.903,189,1.207,198,0.637,217,2.71,220,1.24,221,2.988,224,1.696,228,0.986,229,0.986,231,1.111,237,0.912,246,1.111,251,1.554,257,2.71,258,1.24,260,1.359,262,2.369,263,3.207,267,1.92,268,1.24,269,2.562,271,2.71,274,2.104,275,1.111,276,2.71,277,2.104,278,1.24,280,1.72,282,1.111,283,0.912,285,2.104,286,2.104,287,2.562,288,2.369,290,1.92,291,1.402,293,2.654,294,1.901,295,1.72,301,0.912,308,1.24,310,1.72,311,1.72,320,1.24,321,1.24,322,2.104,323,1.92,338,0.912,349,2.86,364,1.24,369,1.92,370,1.72,371,1.92,372,2.104,373,1.24,376,1.24,381,1.24,382,2.349,387,2.988,388,1.72,471,2.448,536,1.402,544,3.731,547,2.988,549,3.565,551,1.618,565,1.402,566,1.402,581,1.618,582,2.17,583,1.402,584,2.504,585,1.618,586,2.654,587,1.618,588,1.402,589,1.618,590,2.504,591,1.402,592,1.618,593,1.618,594,1.618,600,1.618,601,1.618,602,2.504,603,1.618,604,1.618,605,2.504,613,2.504,614,1.618,649,2.504,668,1.618,669,3.012,670,3.012,671,3.685,672,3.012,673,3.685,674,3.685,675,4.746,676,3.012,677,1.946,678,1.946,679,1.946,680,3.685,681,1.946,682,2.504,683,3.012,684,1.946,685,3.685,686,1.946,687,3.012,688,1.946,689,1.946,690,1.618,691,1.946,692,3.012,693,1.946,694,1.946,695,1.946,696,1.946,697,1.946,698,1.946,699,3.012,700,2.504,701,1.946,702,1.946,703,3.685,704,3.685,705,4.149,706,3.012,707,3.012,708,3.012,709,3.012,710,3.012,711,1.946,712,2.504,713,3.012,714,1.946,715,1.946,716,1.946,717,1.946,718,1.946,719,1.946,720,1.402,721,1.946,722,1.946]],["title/components/ScoreItemComponent.html",[0,0.124,63,0.655]],["body/components/ScoreItemComponent.html",[0,0.202,1,0.66,2,1.259,3,0.422,4,0.37,5,1.048,7,1.048,8,1.048,9,0.37,11,0.959,12,1.725,13,1.432,17,1.375,19,0.477,24,0.422,33,0.034,34,0.422,35,0.272,36,0.8,37,1.375,38,1.375,39,0.728,40,1.629,41,1.048,42,0.783,43,1.048,44,0.66,45,1.048,46,0.728,47,1.048,48,0.728,49,0.959,50,1.048,51,0.66,52,1.048,53,0.66,54,1.048,55,0.728,56,1.048,57,0.728,58,1.048,59,0.66,60,1.048,61,0.66,62,1.048,63,1.131,64,1.533,65,1.048,66,0.728,67,1.048,68,0.959,69,0.66,70,0.959,71,1.048,72,0.025,73,0.025,123,3.302,165,0.422,178,0.66,181,0.702,189,1.144,301,2.149,348,3.302,397,2.365,400,1.996,723,3.812,724,2.906,725,4.585,726,4.585,727,4.585,728,3.495,729,3.495,730,2.906,731,2.906,732,4.585,733,4.585]],["title/components/ScoreboardsComponent.html",[0,0.124,61,0.594]],["body/components/ScoreboardsComponent.html",[0,0.188,1,0.569,2,1.139,3,0.364,4,0.319,5,0.904,7,0.904,8,0.904,9,0.319,11,0.827,12,1.692,13,1.404,17,1.245,19,0.567,22,2.224,24,0.364,33,0.035,34,0.364,35,0.234,36,0.69,37,1.245,38,1.245,39,0.627,40,1.534,41,0.904,42,0.783,43,0.904,44,0.569,45,0.904,46,0.627,47,0.904,48,0.627,49,0.827,50,0.904,51,0.569,52,0.904,53,0.569,54,0.904,55,0.627,56,0.904,57,0.627,58,0.904,59,0.569,60,0.904,61,0.966,62,0.904,63,0.627,64,0.756,65,0.904,66,0.627,67,0.904,68,0.827,69,0.569,70,0.827,71,0.904,72,0.022,73,0.022,149,2.989,163,1.773,165,0.364,166,1.041,169,0.95,171,2.638,173,0.827,178,0.966,180,0.756,181,0.635,182,0.69,185,0.864,186,1.534,198,0.987,211,3.45,224,1.982,228,0.987,229,0.987,237,1.412,238,2.17,372,2.369,397,2.141,536,2.17,730,5.031,731,4.609,734,2.505,735,4.15,736,4.15,737,4.746,738,5.114,739,3.013,740,3.013,741,3.013,742,2.989,743,4.15,744,4.15,745,3.45,746,3.45,747,3.013,748,3.013,749,3.013,750,3.013,751,3.013,752,3.013]],["title/components/SettingsComponent.html",[0,0.124,66,0.655]],["body/components/SettingsComponent.html",[0,0.141,1,0.348,2,0.793,3,0.223,4,0.195,5,0.553,6,0.951,7,0.553,8,0.553,9,0.195,11,0.506,12,1.557,13,1.285,15,1.49,17,0.866,19,0.486,22,1.668,24,0.223,28,1.846,29,0.951,30,0.951,33,0.035,34,0.223,35,0.143,36,0.422,37,0.866,38,0.866,39,0.384,40,1.208,41,0.553,42,0.617,43,0.553,44,0.348,45,0.553,46,0.384,47,0.553,48,0.384,49,0.506,50,0.553,51,0.348,52,0.553,53,0.348,54,0.553,55,0.384,56,0.553,57,0.384,58,0.553,59,0.348,60,0.553,61,0.348,62,0.553,63,0.384,64,0.463,65,0.553,66,0.839,67,1.745,68,0.506,69,0.348,70,0.506,71,0.553,72,0.016,73,0.016,105,1.053,140,2.175,163,1.234,165,0.223,166,0.725,169,0.661,171,2.078,173,0.506,178,0.948,180,0.463,181,0.545,182,0.422,185,0.741,186,1.068,228,0.946,229,1.52,232,1.649,257,2.301,258,1.175,260,1.433,262,2.498,263,2.948,268,1.175,269,2.301,271,2.65,274,2.033,275,2.498,276,2.77,277,2.033,278,1.175,280,2.033,281,1.328,282,2.301,283,2.523,285,1.053,286,1.649,287,2.033,288,1.649,290,2.269,294,1.49,295,1.053,298,1.533,301,0.864,305,1.328,306,2.902,307,1.328,308,1.175,310,1.053,311,1.053,312,2.269,314,1.328,317,1.328,320,1.175,321,1.175,322,2.033,344,1.84,350,1.84,351,2.788,355,2.033,361,1.84,362,1.533,366,1.175,369,1.175,370,3.074,371,1.175,372,1.649,373,1.175,374,2.401,376,1.175,378,1.533,381,1.175,382,2.269,383,1.533,384,1.533,388,2.033,389,2.401,390,2.902,391,3.35,411,3.637,412,3.637,429,1.533,453,2.401,469,2.401,470,2.401,471,1.49,473,2.401,474,2.401,479,3.35,504,1.328,547,1.328,582,1.328,583,1.328,586,2.08,588,1.328,591,1.328,598,2.96,599,1.533,682,1.533,720,1.328,742,2.08,753,1.533,754,3.56,755,2.888,756,4.029,757,4.029,758,2.888,759,1.844,760,1.844,761,1.844,762,1.844,763,4.029,764,4.029,765,4.029,766,1.844,767,1.844,768,1.844,769,1.844,770,2.888,771,2.888,772,2.888,773,2.888,774,1.844,775,1.844,776,2.888,777,1.844,778,1.844,779,3.56,780,3.56,781,3.56,782,3.56,783,3.56,784,1.844,785,4.029,786,1.844,787,4.641,788,1.844,789,1.844,790,1.844,791,1.844,792,1.844,793,2.888,794,4.029,795,2.401,796,1.844,797,1.844,798,1.844,799,4.641,800,1.844,801,2.888,802,1.844,803,1.844,804,1.844,805,1.844,806,1.844,807,3.56,808,1.844,809,1.844,810,1.844,811,3.56,812,1.844,813,2.888,814,1.844,815,1.844,816,1.844,817,1.844,818,2.888,819,1.844]],["title/injectables/SnakeCommunicationsService.html",[28,1.124,324,1.344]],["body/injectables/SnakeCommunicationsService.html",[3,0.238,4,0.209,9,0.209,14,1.126,19,0.652,24,0.238,25,1.94,26,2.877,27,1.421,28,1.088,31,2.386,32,1.126,33,0.035,34,0.238,35,0.153,42,0.73,64,1.133,72,0.016,73,0.016,125,3.273,140,2.407,165,0.238,166,0.764,167,1.988,169,0.697,173,0.541,178,1.104,180,1.197,181,0.851,182,1.092,185,1.141,189,1.562,196,1.126,198,0.646,203,1.64,228,1.368,229,1.368,251,2.155,260,1.726,324,1.3,325,1.257,329,1.64,331,2.192,335,4.311,337,1.257,338,2.522,344,3.983,355,2.122,370,2.386,400,3.175,410,1.64,426,2.53,437,1.64,465,0.924,466,1.64,471,1.57,512,1.421,561,1.421,572,1.64,655,3.474,690,1.64,795,3.474,820,4.893,821,1.64,822,3.717,823,3.717,824,3.717,825,3.044,826,4.179,827,4.179,828,4.179,829,4.179,830,3.044,831,3.044,832,3.044,833,3.717,834,4.179,835,3.044,836,1.973,837,1.973,838,1.973,839,1.973,840,1.973,841,1.973,842,1.973,843,1.973,844,3.044,845,1.973,846,3.044,847,1.973,848,3.044,849,1.973,850,1.973,851,3.044,852,3.044,853,1.973,854,1.973,855,4.973,856,1.973,857,3.044,858,1.973,859,1.973,860,1.973,861,1.973,862,1.973,863,1.973,864,1.973,865,1.973,866,1.64,867,1.973,868,3.717,869,1.973,870,1.973,871,1.973,872,1.973,873,1.973,874,1.973,875,1.973,876,1.973,877,1.973,878,1.973,879,1.973,880,1.973,881,1.973,882,1.973,883,1.973,884,1.973,885,1.973,886,1.973,887,3.717,888,1.973,889,3.044,890,3.044,891,1.973,892,1.973,893,1.973,894,1.973,895,1.973,896,1.973,897,1.973,898,1.973,899,5.383,900,4.179,901,1.973,902,1.973,903,1.973,904,1.973,905,1.973,906,1.973,907,1.973,908,1.973,909,1.973,910,1.973,911,1.973,912,1.973,913,1.973]],["title/classes/User.html",[35,0.244,465,1.474]],["body/classes/User.html",[3,0.466,4,0.408,9,0.408,33,0.035,34,0.466,35,0.3,42,0.748,64,1.459,72,0.026,73,0.026,165,0.466,166,1.226,178,1.064,181,0.863,182,1.398,189,1.946,217,3.321,294,2.521,400,2.79,465,2.91,914,3.858,915,3.207,916,5.363,917,5.363,918,3.858,919,6.108,920,6.108,921,3.858,922,3.858,923,3.858,924,4.887,925,4.062]],["title/injectables/UserService.html",[224,1.124,324,1.344]],["body/injectables/UserService.html",[3,0.366,4,0.321,9,0.321,14,1.729,19,0.65,24,0.366,33,0.035,34,0.366,35,0.235,42,0.729,72,0.022,73,0.022,115,2.181,147,2.654,148,2.654,165,0.366,166,1.045,167,1.701,169,0.953,173,0.831,178,1.094,180,1.194,181,0.785,182,1.089,185,1.156,189,1.364,198,0.992,217,2.378,224,1.489,228,0.992,229,0.992,260,1.364,324,1.779,325,1.93,337,1.93,338,2.755,465,2.23,471,2.644,531,4.616,549,3.428,561,3.428,644,4.261,926,2.518,927,5.125,928,5.125,929,5.125,930,3.029,931,5.373,932,4.165,933,4.759,934,4.165,935,3.029,936,3.029,937,3.029,938,3.029,939,3.029,940,3.029,941,3.029,942,3.029,943,3.029,944,3.029,945,3.029,946,3.029,947,3.029,948,3.029,949,2.518,950,2.518,951,2.518,952,3.029,953,3.029,954,3.029,955,3.029,956,3.029,957,3.029,958,3.029,959,4.759,960,4.759,961,4.759,962,5.125,963,5.125,964,4.759,965,4.165,966,3.029,967,3.029,968,3.029,969,3.029]],["title/coverage.html",[970,3.553]],["body/coverage.html",[0,0.246,1,0.675,9,0.378,10,2.971,13,0.818,28,1.278,33,0.034,35,0.278,39,0.744,44,0.675,46,0.744,48,0.744,51,0.675,53,0.675,55,0.744,57,0.744,59,0.675,61,0.675,63,0.744,66,0.744,69,0.675,72,0.025,73,0.025,107,2.574,116,2.574,123,2.574,136,2.277,137,2.277,161,2.971,162,2.971,181,0.547,214,2.971,223,2.277,224,1.278,260,1.17,283,2.993,324,2.21,326,2.971,340,2.971,393,2.971,394,2.971,406,2.971,465,1.675,526,2.971,626,2.971,627,2.971,640,2.971,650,2.971,668,2.971,723,2.971,724,2.971,734,2.971,746,2.971,753,2.971,820,2.971,821,2.971,915,2.971,925,2.971,926,2.971,970,2.971,971,3.574,972,3.574,973,3.868,974,4.652,975,5.479,976,2.574,977,3.574,978,5.173,979,3.574,980,4.652,981,3.574,982,4.652,983,3.574,984,4.652,985,3.574,986,3.574,987,3.574,988,2.971,989,3.574,990,3.574,991,3.574,992,3.574]],["title/dependencies.html",[77,2.157,993,1.899]],["body/dependencies.html",[24,0.515,33,0.035,72,0.028,73,0.028,77,2.434,96,4.04,97,3.745,105,2.434,133,1.997,159,2.716,196,2.434,197,3.544,949,3.544,950,4.322,951,3.544,994,4.263,995,6.27,996,4.263,997,4.263,998,4.263,999,4.263,1000,4.263,1001,3.544,1002,4.263,1003,4.263,1004,3.544,1005,4.263,1006,4.263,1007,4.263,1008,4.263,1009,4.263,1010,4.263,1011,4.263,1012,4.263,1013,4.263,1014,4.263]],["title/miscellaneous/enumerations.html",[1015,1.36,1016,3.141]],["body/miscellaneous/enumerations.html",[25,3.545,26,3.545,33,0.03,72,0.03,73,0.03,165,0.577,388,2.727,520,3.97,664,3.97,720,3.439,1015,2.463,1016,3.97,1017,5.563,1018,4.775,1019,4.775,1020,4.775,1021,3.97,1022,4.775,1023,4.775]],["title/miscellaneous/functions.html",[1015,1.36,1024,3.141]],["body/miscellaneous/functions.html",[13,1.349,33,0.033,72,0.03,73,0.03,165,0.579,185,1.16,186,1.436,973,4.9,976,4.245,1015,2.47,1024,3.981,1025,4.788]],["title/index.html",[165,0.319,512,1.899,1026,2.636]],["body/index.html",[0,0.213,4,0.412,33,0.026,42,0.596,72,0.026,73,0.026,90,2.48,159,3.131,163,1.663,206,2.803,260,1.274,462,3.236,568,3.236,700,4.477,712,3.236,866,4.702,976,4.201,993,2.803,1001,3.236,1021,4.085,1027,4.914,1028,3.892,1029,5.385,1030,5.385,1031,3.236,1032,3.892,1033,6.048,1034,3.892,1035,3.892,1036,3.892,1037,3.892,1038,3.892,1039,3.892,1040,3.892,1041,3.892,1042,3.892,1043,3.892,1044,3.892,1045,5.385,1046,3.892,1047,3.892,1048,3.892,1049,3.892,1050,3.892,1051,4.914,1052,5.656,1053,3.892,1054,4.914,1055,4.914,1056,3.892,1057,5.956,1058,3.892,1059,3.892,1060,3.892,1061,4.914,1062,3.892,1063,3.892,1064,3.892,1065,3.892,1066,3.892,1067,3.892,1068,5.385,1069,3.892,1070,2.803,1071,3.892]],["title/modules.html",[76,2.204]],["body/modules.html",[33,0.03,72,0.03,73,0.03,75,2.757,76,2.49,87,2.757,97,4.032,153,3.077,1072,5.599,1073,5.599,1074,5.914,1075,4.828,1076,4.828]],["title/overview.html",[1070,3.078]],["body/overview.html",[1,1.144,2,0.965,28,1.835,33,0.034,35,0.273,36,0.805,39,0.732,44,0.969,46,1.069,48,1.069,51,0.969,53,0.969,55,1.069,57,1.134,59,1.028,61,0.969,63,1.069,66,1.069,69,0.969,72,0.025,73,0.025,74,1.814,75,3.721,76,1.814,77,2.008,78,2.533,79,2.533,80,2.533,81,2.241,82,2.923,83,2.923,84,2.923,85,2.923,86,2.923,87,3.109,88,3.315,89,2.533,90,2.241,136,2.241,153,3.601,154,2.923,325,2.241,742,3.696,745,3.827,1070,2.533,1077,3.516]],["title/properties.html",[166,0.948,993,1.899]],["body/properties.html",[33,0.032,72,0.031,73,0.031,166,1.249,1031,4.139,1078,4.979]],["title/miscellaneous/variables.html",[1015,1.36,1079,3.141]],["body/miscellaneous/variables.html",[33,0.034,72,0.029,73,0.029,116,3.848,165,0.539,181,0.682,228,1.749,229,1.46,232,2.546,988,3.706,1004,3.706,1015,2.3,1079,3.706,1080,4.458,1081,4.458,1082,4.458,1083,4.458,1084,4.458,1085,4.458,1086,5.72,1087,4.458,1088,4.458,1089,4.458,1090,5.342,1091,4.458,1092,4.458,1093,4.458,1094,4.458,1095,4.458,1096,4.458,1097,4.458,1098,4.458,1099,4.458,1100,4.458,1101,4.458,1102,4.458,1103,4.458]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":283,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1078,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":384,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["0.2s",{"_index":313,"title":{},"body":{"components/ContactComponent.html":{}}}],["0.3s",{"_index":390,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["0.5",{"_index":375,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["0.7",{"_index":798,"title":{},"body":{"components/SettingsComponent.html":{}}}],["0.9rem",{"_index":721,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0/1",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":265,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["070b10",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["1",{"_index":742,"title":{},"body":{"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["1.2em",{"_index":299,"title":{},"body":{"components/ContactComponent.html":{}}}],["1.3rem",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["100",{"_index":372,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["100vh",{"_index":716,"title":{},"body":{"components/RegisterComponent.html":{}}}],["10px",{"_index":282,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["12",{"_index":1077,"title":{},"body":{"overview.html":{}}}],["12px",{"_index":717,"title":{},"body":{"components/RegisterComponent.html":{}}}],["13.10.2",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["15px",{"_index":387,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["169384997647",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16px",{"_index":389,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["17.0.0",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["17.1.0",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":1001,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["18px",{"_index":386,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["1:169384997647:web:53c3c0e1a388f9bc2ac47a",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b5e20",{"_index":300,"title":{},"body":{"components/ContactComponent.html":{}}}],["1dbf73",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["1em",{"_index":303,"title":{},"body":{"components/ContactComponent.html":{}}}],["1px",{"_index":317,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["2",{"_index":744,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["2.3.0",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":289,"title":{},"body":{"components/ContactComponent.html":{}}}],["20",{"_index":453,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["20px",{"_index":275,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["23px",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["247b56",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["25px",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["2bf73",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2bf73.appspot.com",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2bf73.firebaseapp.com",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":291,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["3",{"_index":745,"title":{},"body":{"components/ScoreboardsComponent.html":{},"overview.html":{}}}],["3.0.5",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":787,"title":{},"body":{"components/SettingsComponent.html":{}}}],["30px",{"_index":381,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["333",{"_index":805,"title":{},"body":{"components/SettingsComponent.html":{}}}],["388e3c",{"_index":292,"title":{},"body":{"components/ContactComponent.html":{}}}],["3ea62d",{"_index":819,"title":{},"body":{"components/SettingsComponent.html":{}}}],["3eff65",{"_index":818,"title":{},"body":{"components/SettingsComponent.html":{}}}],["4.18.2",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["40px",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["4b4f54",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4caf50",{"_index":315,"title":{},"body":{"components/ContactComponent.html":{}}}],["4px",{"_index":305,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["50",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{}}}],["50px",{"_index":272,"title":{},"body":{"components/ContactComponent.html":{}}}],["555",{"_index":806,"title":{},"body":{"components/SettingsComponent.html":{}}}],["5px",{"_index":277,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["6",{"_index":708,"title":{},"body":{"components/RegisterComponent.html":{}}}],["60",{"_index":743,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["600px",{"_index":270,"title":{},"body":{"components/ContactComponent.html":{}}}],["66bb6a",{"_index":309,"title":{},"body":{"components/ContactComponent.html":{}}}],["68f0b0",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["7.8.0",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["757575",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["80",{"_index":746,"title":{},"body":{"components/ScoreboardsComponent.html":{},"coverage.html":{}}}],["8592",{"_index":711,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8px",{"_index":383,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["90",{"_index":802,"title":{},"body":{"components/SettingsComponent.html":{}}}],["95f1c1",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["9999",{"_index":380,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["9px",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["a.points",{"_index":752,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["a:hover",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["absolute",{"_index":377,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{}}}],["abstractcontrol",{"_index":683,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accordingly",{"_index":773,"title":{},"body":{"components/SettingsComponent.html":{}}}],["account",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":632,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["actual_component",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":1064,"title":{},"body":{"index.html":{}}}],["again",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{}}}],["aizasyc4k7mi",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":286,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["already",{"_index":699,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alternative",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular",{"_index":1029,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":197,"title":{},"body":{"directives/BodyClassDirective.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["angular/compiler",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["apikey",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":327,"title":{},"body":{"injectables/ContactService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":160,"title":{},"body":{"modules/AppServerModule.html":{}}}],["appbodyclass",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":815,"title":{},"body":{"components/SettingsComponent.html":{}}}],["appid",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1038,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":900,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["appmodule",{"_index":75,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":87,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":153,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["arial",{"_index":714,"title":{},"body":{"components/RegisterComponent.html":{}}}],["artifacts",{"_index":1047,"title":{},"body":{"index.html":{}}}],["async",{"_index":833,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["auth",{"_index":931,"title":{},"body":{"injectables/UserService.html":{}}}],["auth,private",{"_index":952,"title":{},"body":{"injectables/UserService.html":{}}}],["auth/email",{"_index":698,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authdomain",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":273,"title":{},"body":{"components/ContactComponent.html":{}}}],["automatically",{"_index":1039,"title":{},"body":{"index.html":{}}}],["available",{"_index":1076,"title":{},"body":{"modules.html":{}}}],["await",{"_index":884,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["b",{"_index":750,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["b.points",{"_index":751,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["back",{"_index":713,"title":{},"body":{"components/RegisterComponent.html":{}}}],["background",{"_index":262,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["backgroundcolor",{"_index":345,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["bbb",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["best",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{}}}],["bestscore",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{}}}],["black",{"_index":504,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["block",{"_index":720,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["board",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardarray",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["boardcols",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardcolsitem",{"_index":779,"title":{},"body":{"components/SettingsComponent.html":{}}}],["boardrows",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardrowsitem",{"_index":780,"title":{},"body":{"components/SettingsComponent.html":{}}}],["body",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["bodyclassdirective",{"_index":69,"title":{"directives/BodyClassDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bold",{"_index":321,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["boolean",{"_index":231,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{}}}],["bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["border",{"_index":276,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["bottom",{"_index":290,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["box",{"_index":280,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["break",{"_index":495,"title":{},"body":{"components/HomeComponent.html":{}}}],["browse",{"_index":1074,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["btn:hover",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["build",{"_index":866,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"index.html":{}}}],["button",{"_index":306,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["button:active",{"_index":316,"title":{},"body":{"components/ContactComponent.html":{}}}],["button:hover",{"_index":314,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["c8e6c9",{"_index":279,"title":{},"body":{"components/ContactComponent.html":{}}}],["calc(100",{"_index":808,"title":{},"body":{"components/SettingsComponent.html":{}}}],["canactivate",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{}}}],["canactivate(route",{"_index":631,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["canactivate:[loginguardian",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["capabilities",{"_index":1066,"title":{},"body":{"index.html":{}}}],["case",{"_index":493,"title":{},"body":{"components/HomeComponent.html":{}}}],["catch",{"_index":886,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["catch(error",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["ccc",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["celltype",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/enumerations.html":{}}}],["celltype.block",{"_index":503,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.empty",{"_index":502,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.food",{"_index":505,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.snake",{"_index":506,"title":{},"body":{"components/HomeComponent.html":{}}}],["center",{"_index":287,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["change",{"_index":1041,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":771,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changestatemessage",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{}}}],["changestatemessage(gamestate",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{}}}],["characters",{"_index":709,"title":{},"body":{"components/RegisterComponent.html":{}}}],["check",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["choice",{"_index":1060,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["class.directive",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["class.directive.ts",{"_index":162,"title":{},"body":{"directives/BodyClassDirective.html":{},"coverage.html":{}}}],["class.directive.ts:10",{"_index":179,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:14",{"_index":187,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:22",{"_index":190,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:35",{"_index":184,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["classes",{"_index":914,"title":{},"body":{"classes/User.html":{}}}],["cli",{"_index":1030,"title":{},"body":{"index.html":{}}}],["close",{"_index":351,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["closed",{"_index":869,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["closeerrors",{"_index":347,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["closegameover",{"_index":399,"title":{},"body":{"components/GameOverComponent.html":{}}}],["closesettings",{"_index":756,"title":{},"body":{"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":154,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":155,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":156,"title":{},"body":{"modules/AppServerModule.html":{}}}],["code",{"_index":1043,"title":{},"body":{"index.html":{}}}],["col",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["color",{"_index":263,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["colorcell",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{}}}],["colorcell(row",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{}}}],["cols",{"_index":793,"title":{},"body":{"components/SettingsComponent.html":{}}}],["column",{"_index":297,"title":{},"body":{"components/ContactComponent.html":{}}}],["columns",{"_index":854,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["command",{"_index":1061,"title":{},"body":{"index.html":{}}}],["common/enums",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["common/user",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["communications.service",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["communications.service.ts",{"_index":821,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"coverage.html":{}}}],["communications.service.ts:106",{"_index":837,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:12",{"_index":858,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:13",{"_index":860,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:14",{"_index":856,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:15",{"_index":859,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:16",{"_index":835,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:47",{"_index":850,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:62",{"_index":841,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:66",{"_index":839,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:70",{"_index":849,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:76",{"_index":842,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:80",{"_index":843,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:84",{"_index":853,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:89",{"_index":840,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:93",{"_index":847,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:99",{"_index":845,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["conexión",{"_index":874,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["confirmpassword",{"_index":692,"title":{},"body":{"components/RegisterComponent.html":{}}}],["connection",{"_index":890,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.error(\"form",{"_index":701,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.error('error",{"_index":252,"title":{},"body":{"components/ContactComponent.html":{}}}],["console.error(error",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(\"game",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(\"score",{"_index":484,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(\"user",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('connection",{"_index":868,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log('error",{"_index":888,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log('idtoken",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('mail",{"_index":248,"title":{},"body":{"components/ContactComponent.html":{}}}],["console.log('unexpected",{"_index":895,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log(error",{"_index":365,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["console.log(newboardcolsvalue",{"_index":792,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log(this.loginservice.gettoken",{"_index":638,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["console.log(this.userservice.gettoken",{"_index":238,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["const",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["constructor",{"_index":173,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":930,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(contactservice",{"_index":222,"title":{},"body":{"components/ContactComponent.html":{}}}],["constructor(http",{"_index":329,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["constructor(loginservice",{"_index":628,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["constructor(private",{"_index":198,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":362,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(renderer",{"_index":174,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["constructor(router",{"_index":645,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(snakecommunicationsservice",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(snakecomunicationsservice",{"_index":352,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["constructor(userservice",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["contact",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/NavbarComponent.html":{}}}],["contact'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["contact.component.css",{"_index":215,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":216,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact/contact.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["contactcomponent",{"_index":44,"title":{"components/ContactComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactform",{"_index":239,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactservice",{"_index":223,"title":{"injectables/ContactService.html":{}},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"coverage.html":{}}}],["container",{"_index":267,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["content",{"_index":370,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["content.ng",{"_index":804,"title":{},"body":{"components/SettingsComponent.html":{}}}],["continue",{"_index":667,"title":{},"body":{"components/PauseComponent.html":{}}}],["cookie",{"_index":950,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["cookies",{"_index":932,"title":{},"body":{"injectables/UserService.html":{}}}],["cookies:cookieservice",{"_index":953,"title":{},"body":{"injectables/UserService.html":{}}}],["cookieservice",{"_index":933,"title":{},"body":{"injectables/UserService.html":{}}}],["correctly",{"_index":250,"title":{},"body":{"components/ContactComponent.html":{}}}],["courier",{"_index":259,"title":{},"body":{"components/ContactComponent.html":{}}}],["coverage",{"_index":970,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createuserwithemailandpassword",{"_index":943,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":955,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":310,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["d8e8d8",{"_index":264,"title":{},"body":{"components/ContactComponent.html":{}}}],["data",{"_index":334,"title":{},"body":{"injectables/ContactService.html":{}}}],["databaseurl",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddd",{"_index":809,"title":{},"body":{"components/SettingsComponent.html":{}}}],["declarations",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["decoration",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["decorators",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["default",{"_index":228,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":178,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["definitive",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["dependencies",{"_index":77,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":1035,"title":{},"body":{"index.html":{}}}],["development",{"_index":1032,"title":{},"body":{"index.html":{}}}],["direction",{"_index":296,"title":{},"body":{"components/ContactComponent.html":{}}}],["directive",{"_index":39,"title":{"directives/BodyClassDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1046,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1050,"title":{},"body":{"index.html":{}}}],["display",{"_index":294,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["displayname",{"_index":916,"title":{},"body":{"classes/User.html":{}}}],["dist",{"_index":1049,"title":{},"body":{"index.html":{}}}],["divider",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["document",{"_index":177,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["document:keydown",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{}}}],["document:keydown(event",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["don't",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1058,"title":{},"body":{"index.html":{}}}],["e8f5e9",{"_index":304,"title":{},"body":{"components/ContactComponent.html":{}}}],["ease",{"_index":391,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["email",{"_index":217,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email/password",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["emitevent",{"_index":776,"title":{},"body":{"components/SettingsComponent.html":{}}}],["empty",{"_index":1019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["encapsulation",{"_index":669,"title":{},"body":{"components/RegisterComponent.html":{}}}],["end",{"_index":1057,"title":{},"body":{"index.html":{}}}],["enter",{"_index":706,"title":{},"body":{"components/RegisterComponent.html":{}}}],["enumerations",{"_index":1016,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":887,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["err.message",{"_index":891,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["error",{"_index":251,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["error('no",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.code",{"_index":697,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessage",{"_index":349,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["erroroccurred",{"_index":822,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["errors",{"_index":341,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["errors.component.css",{"_index":342,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors.component.html",{"_index":343,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors/errors.component",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["errorscomponent",{"_index":46,"title":{"components/ErrorsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorsvisible",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["event",{"_index":202,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["event.key",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["eventemitter",{"_index":355,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["execute",{"_index":1054,"title":{},"body":{"index.html":{}}}],["experience",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["express",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":1025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["f1f1f1",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["failed",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":232,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuardian.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":258,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ff4c4c",{"_index":359,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["ffe6e6",{"_index":392,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["fff",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ffffff",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1042,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":1004,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":1063,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":797,"title":{},"body":{"components/SettingsComponent.html":{}}}],["flex",{"_index":295,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["font",{"_index":257,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["food",{"_index":1020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["form",{"_index":293,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["formcontrol(20",{"_index":763,"title":{},"body":{"components/SettingsComponent.html":{}}}],["formgroup",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup.get('password')!.value",{"_index":691,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup.get('passwordconfirm')!.value",{"_index":693,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formlogin",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{}}}],["formreg",{"_index":673,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1024,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1067,"title":{},"body":{"index.html":{}}}],["g",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["game",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["gameover",{"_index":1022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gameovercomponent",{"_index":48,"title":{"components/GameOverComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameovervisible",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestate",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["gamestates",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/enumerations.html":{}}}],["gamestates.gameover",{"_index":482,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.none",{"_index":500,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.paused",{"_index":496,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.running",{"_index":498,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.win",{"_index":499,"title":{},"body":{"components/HomeComponent.html":{}}}],["generate",{"_index":1045,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1028,"title":{},"body":{"index.html":{}}}],["getauth",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["getbestscore",{"_index":825,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getbestscore(howmany",{"_index":836,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getbestscore(howmany:number",{"_index":912,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getgamestates",{"_index":826,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["gets",{"_index":919,"title":{},"body":{"classes/User.html":{}}}],["getscore",{"_index":827,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getsnakeboardupdate",{"_index":828,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getting",{"_index":1026,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":927,"title":{},"body":{"injectables/UserService.html":{}}}],["github",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{}}}],["githubauthprovider",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["githubauthprovider()).then((usercredential",{"_index":967,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":712,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["goback",{"_index":675,"title":{},"body":{"components/RegisterComponent.html":{}}}],["google",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleauthprovider",{"_index":947,"title":{},"body":{"injectables/UserService.html":{}}}],["googleauthprovider()).then((usercredential",{"_index":966,"title":{},"body":{"injectables/UserService.html":{}}}],["graph",{"_index":1075,"title":{},"body":{"modules.html":{}}}],["green",{"_index":319,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{}}}],["group",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["guard",{"_index":136,"title":{"guards/LoginGuardian.html":{}},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["guardian",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guardian.ts",{"_index":627,"title":{},"body":{"guards/LoginGuardian.html":{},"coverage.html":{}}}],["guardian.ts:11",{"_index":635,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["guardian.ts:8",{"_index":629,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["guards",{"_index":625,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["h2",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ha",{"_index":875,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["handle",{"_index":893,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["handlekeydown",{"_index":654,"title":{},"body":{"components/PauseComponent.html":{}}}],["handlekeydown(event",{"_index":660,"title":{},"body":{"components/PauseComponent.html":{}}}],["handlekeypress",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["handlekeypress(event",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{}}}],["headers",{"_index":899,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["height",{"_index":373,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["help",{"_index":1068,"title":{},"body":{"index.html":{}}}],["hide",{"_index":801,"title":{},"body":{"components/SettingsComponent.html":{}}}],["hideerrors",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidegameover",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidepassword",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidepause",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidesettings",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["home.component.css",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":51,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["hostlistener('document:keydown",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{}}}],["hostlistener('window:keydown",{"_index":661,"title":{},"body":{"components/PauseComponent.html":{}}}],["hostlisteners",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["howmany",{"_index":838,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["http",{"_index":331,"title":{},"body":{"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["http://localhost:4200",{"_index":1037,"title":{},"body":{"index.html":{}}}],["http://localhost:5273/api/contact/send",{"_index":336,"title":{},"body":{"injectables/ContactService.html":{}}}],["httpclient",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["httpclientmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["https://snakepro",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubconnection",{"_index":823,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["icon",{"_index":718,"title":{},"body":{"components/RegisterComponent.html":{}}}],["icon:hover",{"_index":722,"title":{},"body":{"components/RegisterComponent.html":{}}}],["identifier",{"_index":925,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["idtoken",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["img",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["implements",{"_index":163,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuardian.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["index",{"_index":165,"title":{"index.html":{}},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["initializeapp",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.firebase",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["inject",{"_index":194,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["inject(document",{"_index":199,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["injectable",{"_index":324,"title":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":325,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":719,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inner",{"_index":812,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input",{"_index":301,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/SettingsComponent.html":{}}}],["input::placeholder",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["input:focus",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["input:hover",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["input[type=\"number",{"_index":807,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input[type=\"number\"]:focus",{"_index":817,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input[type=\"number\"]:hover",{"_index":816,"title":{},"body":{"components/SettingsComponent.html":{}}}],["inputs",{"_index":348,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/ScoreItemComponent.html":{}}}],["instanceof",{"_index":203,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["invalid",{"_index":702,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iserror",{"_index":218,"title":{},"body":{"components/ContactComponent.html":{}}}],["issuccess",{"_index":219,"title":{},"body":{"components/ContactComponent.html":{}}}],["item",{"_index":725,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["item.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":727,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item.component.html",{"_index":726,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item.component.ts",{"_index":724,"title":{},"body":{"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:9",{"_index":729,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item/score",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["items",{"_index":371,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["js",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(idtoken",{"_index":908,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify(key",{"_index":901,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify(score",{"_index":910,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify({columns",{"_index":905,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["justify",{"_index":369,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["karma",{"_index":1056,"title":{},"body":{"index.html":{}}}],["key",{"_index":690,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["keyboardevent",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["label",{"_index":298,"title":{},"body":{"components/ContactComponent.html":{},"components/SettingsComponent.html":{}}}],["left",{"_index":378,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["link",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["literal",{"_index":728,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["localstorage.getitem('boardcols",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["localstorage.getitem('boardrows",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["localstorage.setitem('boardcols",{"_index":788,"title":{},"body":{"components/SettingsComponent.html":{}}}],["localstorage.setitem('boardrows",{"_index":790,"title":{},"body":{"components/SettingsComponent.html":{}}}],["log",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["login(undefined",{"_index":936,"title":{},"body":{"injectables/UserService.html":{}}}],["login({email",{"_index":956,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.css",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":53,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginguardian",{"_index":137,"title":{"guards/LoginGuardian.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{},"coverage.html":{}}}],["loginservice",{"_index":630,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["loginwithgithub",{"_index":928,"title":{},"body":{"injectables/UserService.html":{}}}],["loginwithgoogle",{"_index":929,"title":{},"body":{"injectables/UserService.html":{}}}],["logout",{"_index":644,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["logs",{"_index":960,"title":{},"body":{"injectables/UserService.html":{}}}],["long",{"_index":710,"title":{},"body":{"components/RegisterComponent.html":{}}}],["m4bpjrsbvw",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":254,"title":{},"body":{"components/ContactComponent.html":{}}}],["margin",{"_index":271,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["match",{"_index":704,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":268,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["maximum",{"_index":794,"title":{},"body":{"components/SettingsComponent.html":{}}}],["measurementid",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":796,"title":{},"body":{"components/SettingsComponent.html":{}}}],["menu.ng",{"_index":800,"title":{},"body":{"components/SettingsComponent.html":{}}}],["message",{"_index":220,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["messagingsenderid",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":169,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["microsoft/signalr",{"_index":862,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["miscellaneous",{"_index":1015,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":694,"title":{},"body":{"components/RegisterComponent.html":{}}}],["module",{"_index":74,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["modules",{"_index":76,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["monospace",{"_index":261,"title":{},"body":{"components/ContactComponent.html":{}}}],["more",{"_index":1069,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navbar",{"_index":641,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["navbar.component.css",{"_index":643,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":642,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":55,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1036,"title":{},"body":{"index.html":{}}}],["navigatetoregister",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigationend",{"_index":195,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["need",{"_index":1062,"title":{},"body":{"index.html":{}}}],["new",{"_index":260,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newboardcolsvalue",{"_index":783,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardcolsvalue.tostring",{"_index":789,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardrowsvalue",{"_index":785,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardrowsvalue.tostring",{"_index":791,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ng",{"_index":1033,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["ngondestroy",{"_index":170,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["ngoninit",{"_index":171,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["ngx",{"_index":949,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["none",{"_index":388,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["null",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":400,"title":{},"body":{"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/ScoreItemComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{}}}],["object",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":335,"title":{},"body":{"injectables/ContactService.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["oldboardcolsvalue",{"_index":781,"title":{},"body":{"components/SettingsComponent.html":{}}}],["oldboardrowsvalue",{"_index":782,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ondestroy",{"_index":164,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["ongithublogin",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{}}}],["ongooglelogin",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["onsubmit",{"_index":221,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["opacity",{"_index":799,"title":{},"body":{"components/SettingsComponent.html":{}}}],["optional",{"_index":182,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":814,"title":{},"body":{"components/SettingsComponent.html":{}}}],["outline",{"_index":810,"title":{},"body":{"components/SettingsComponent.html":{}}}],["output",{"_index":361,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["outputs",{"_index":350,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["over",{"_index":395,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["over.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["over.component.css",{"_index":398,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.html",{"_index":396,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts",{"_index":394,"title":{},"body":{"components/GameOverComponent.html":{},"coverage.html":{}}}],["over.component.ts:10",{"_index":401,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts:12",{"_index":403,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts:9",{"_index":402,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over/game",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/GameOverComponent.html":{},"coverage.html":{}}}],["overview",{"_index":1070,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["package",{"_index":993,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":274,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["page",{"_index":206,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"index.html":{}}}],["parameters",{"_index":180,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["password",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["password).then((usercredential",{"_index":958,"title":{},"body":{"injectables/UserService.html":{}}}],["passwordconfirm",{"_index":688,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatchvalidator",{"_index":674,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwords",{"_index":703,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":651,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["pause.component.css",{"_index":653,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause.component.html",{"_index":652,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause/pause.component",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["pausecomponent",{"_index":57,"title":{"components/PauseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paused",{"_index":664,"title":{},"body":{"components/PauseComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pausegame",{"_index":829,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["pausevisible",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["platform",{"_index":1059,"title":{},"body":{"index.html":{}}}],["player",{"_index":730,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["playing",{"_index":405,"title":{},"body":{"components/GameOverComponent.html":{}}}],["please",{"_index":367,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{}}}],["pointer",{"_index":311,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["points",{"_index":731,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["position",{"_index":376,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["press",{"_index":665,"title":{},"body":{"components/PauseComponent.html":{}}}],["private",{"_index":167,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1027,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":851,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["properties",{"_index":166,"title":{"properties.html":{}},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provideauth",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["provideclienthydration",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":337,"title":{},"body":{"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["public",{"_index":344,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["radius",{"_index":382,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["reactiveformsmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":323,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirectto",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectunauthorizedto",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reestablished",{"_index":872,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["reference",{"_index":1071,"title":{},"body":{"index.html":{}}}],["register",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["register(undefined",{"_index":941,"title":{},"body":{"injectables/UserService.html":{}}}],["register({email",{"_index":954,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":671,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":672,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":59,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["relative",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reload",{"_index":1040,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":183,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["renderer2",{"_index":175,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["required",{"_index":705,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reset",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["response",{"_index":244,"title":{},"body":{"components/ContactComponent.html":{}}}],["response.user",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["restablecida",{"_index":877,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["restart",{"_index":368,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["results",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumegame",{"_index":655,"title":{},"body":{"components/PauseComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["retro",{"_index":266,"title":{},"body":{"components/ContactComponent.html":{}}}],["return",{"_index":338,"title":{},"body":{"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{}}}],["returns",{"_index":185,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":374,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["right",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":636,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["router",{"_index":176,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":634,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["routersubscription",{"_index":168,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["routes",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["rows",{"_index":795,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["rtdb.europe",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":976,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1021,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxjs",{"_index":196,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"dependencies.html":{}}}],["sans",{"_index":715,"title":{},"body":{"components/RegisterComponent.html":{}}}],["saved",{"_index":485,"title":{},"body":{"components/HomeComponent.html":{}}}],["savedboardcols",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["savedboardrows",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["savescore",{"_index":830,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["savescore(score",{"_index":844,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["savesettings",{"_index":757,"title":{},"body":{"components/SettingsComponent.html":{}}}],["scaffolding",{"_index":1044,"title":{},"body":{"index.html":{}}}],["score",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{}}}],["score.player",{"_index":732,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["score.points",{"_index":733,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["scoreboard",{"_index":211,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ScoreboardsComponent.html":{}}}],["scoreboards",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["scoreboards'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["scoreboards.component.css",{"_index":736,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["scoreboards.component.html",{"_index":735,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["scoreboards/score",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["scoreboards/scoreboards.component",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["scoreboardscomponent",{"_index":61,"title":{"components/ScoreboardsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoreboardscomponent,canactivate:[loginguardian",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scoreitemcomponent",{"_index":63,"title":{"components/ScoreItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scores",{"_index":737,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["send",{"_index":255,"title":{},"body":{"components/ContactComponent.html":{}}}],["sendcontactform",{"_index":328,"title":{},"body":{"injectables/ContactService.html":{}}}],["sendcontactform(data",{"_index":332,"title":{},"body":{"injectables/ContactService.html":{}}}],["sending",{"_index":253,"title":{},"body":{"components/ContactComponent.html":{}}}],["sendtoken",{"_index":831,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sendtoken(idtoken",{"_index":846,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sent",{"_index":249,"title":{},"body":{"components/ContactComponent.html":{}}}],["serif",{"_index":308,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["serve",{"_index":1034,"title":{},"body":{"index.html":{}}}],["server",{"_index":159,"title":{},"body":{"modules/AppServerModule.html":{},"components/ErrorsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["servermodule",{"_index":158,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service",{"_index":951,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["services/contact.service",{"_index":236,"title":{},"body":{"components/ContactComponent.html":{}}}],["services/snake",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["services/user.service",{"_index":237,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["set",{"_index":959,"title":{},"body":{"injectables/UserService.html":{}}}],["setmovement",{"_index":832,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["setmovement(key",{"_index":848,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sets",{"_index":920,"title":{},"body":{"classes/User.html":{}}}],["settings",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.css",{"_index":754,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":755,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["settingscomponent",{"_index":66,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsvisible",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":281,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["showsettings",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["sido",{"_index":876,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sign",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{}}}],["signalr",{"_index":861,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signalr.hubconnection",{"_index":857,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":864,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signinwithemailandpassword",{"_index":944,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":957,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithpopup",{"_index":946,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithpopup(this.auth",{"_index":965,"title":{},"body":{"injectables/UserService.html":{}}}],["signout",{"_index":945,"title":{},"body":{"injectables/UserService.html":{}}}],["signout(this.auth",{"_index":968,"title":{},"body":{"injectables/UserService.html":{}}}],["size",{"_index":288,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["sizing",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["snake",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snakeboardupdate",{"_index":824,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["snakecommunicationsservice",{"_index":28,"title":{"injectables/SnakeCommunicationsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"coverage.html":{},"overview.html":{}}}],["snakecomunicationsservice",{"_index":346,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["snakepro",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakeproweb",{"_index":462,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["solid",{"_index":278,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["sortscores",{"_index":738,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":666,"title":{},"body":{"components/PauseComponent.html":{}}}],["span",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["span:hover",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["spin",{"_index":813,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/.../enums.ts",{"_index":1017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.ts",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.server.ts",{"_index":157,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/app.module.ts",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/body",{"_index":161,"title":{},"body":{"directives/BodyClassDirective.html":{},"coverage.html":{}}}],["src/app/contact/contact.component.ts",{"_index":214,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/contact/contact.component.ts:11",{"_index":235,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:12",{"_index":230,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:13",{"_index":234,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:14",{"_index":233,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:15",{"_index":225,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:19",{"_index":226,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:23",{"_index":227,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/errors/errors.component.ts",{"_index":340,"title":{},"body":{"components/ErrorsComponent.html":{},"coverage.html":{}}}],["src/app/errors/errors.component.ts:10",{"_index":356,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:11",{"_index":354,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:12",{"_index":353,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:14",{"_index":360,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:16",{"_index":358,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:24",{"_index":357,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/game",{"_index":393,"title":{},"body":{"components/GameOverComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:104",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:108",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:112",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:117",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:128",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:132",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:137",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":463,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:16",{"_index":452,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:17",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:18",{"_index":461,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":458,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:20",{"_index":459,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:21",{"_index":454,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":455,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":460,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:29",{"_index":457,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":456,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:32",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:71",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:89",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login",{"_index":626,"title":{},"body":{"guards/LoginGuardian.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:103",{"_index":542,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:17",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:26",{"_index":541,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:53",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:77",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":640,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:10",{"_index":646,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:17",{"_index":647,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/pause/pause.component.ts",{"_index":650,"title":{},"body":{"components/PauseComponent.html":{},"coverage.html":{}}}],["src/app/pause/pause.component.ts:11",{"_index":659,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/pause/pause.component.ts:17",{"_index":662,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/pause/pause.component.ts:9",{"_index":657,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":668,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:13",{"_index":679,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:14",{"_index":676,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":681,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":678,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:47",{"_index":677,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/scoreboards/score",{"_index":723,"title":{},"body":{"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["src/app/scoreboards/scoreboards.component.ts",{"_index":734,"title":{},"body":{"components/ScoreboardsComponent.html":{},"coverage.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:10",{"_index":747,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:14",{"_index":739,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:18",{"_index":740,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:23",{"_index":741,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/settings/settings.component.ts",{"_index":753,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:11",{"_index":759,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:12",{"_index":766,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:13",{"_index":758,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:15",{"_index":767,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:18",{"_index":761,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:39",{"_index":762,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:60",{"_index":760,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/common/enums.ts",{"_index":1018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/user.ts",{"_index":915,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/common/user.ts:10",{"_index":918,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:15",{"_index":921,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:20",{"_index":922,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:5",{"_index":923,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.ts",{"_index":988,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/contact.service.ts",{"_index":326,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/services/contact.service.ts:13",{"_index":333,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/services/contact.service.ts:9",{"_index":330,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/services/snake",{"_index":820,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"coverage.html":{}}}],["src/services/user.service.ts",{"_index":926,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:10",{"_index":934,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:13",{"_index":942,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:17",{"_index":937,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:27",{"_index":939,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:38",{"_index":938,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:48",{"_index":940,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:54",{"_index":935,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{}}}],["startconnection",{"_index":834,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["started",{"_index":512,"title":{"index.html":{}},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["startgame",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["startgame(columns",{"_index":852,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["starting",{"_index":889,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["startsettings",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{}}}],["state",{"_index":633,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["statements",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1048,"title":{},"body":{"index.html":{}}}],["string",{"_index":189,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurl",{"_index":397,"title":{},"body":{"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["subject",{"_index":855,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["subscribe",{"_index":770,"title":{},"body":{"components/SettingsComponent.html":{}}}],["subscription",{"_index":192,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["success",{"_index":318,"title":{},"body":{"components/ContactComponent.html":{}}}],["successfully",{"_index":256,"title":{},"body":{"components/ContactComponent.html":{}}}],["support",{"_index":1072,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1073,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":492,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["test",{"_index":1053,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1065,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1052,"title":{},"body":{"index.html":{}}}],["text",{"_index":285,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["textarea",{"_index":302,"title":{},"body":{"components/ContactComponent.html":{}}}],["thanks",{"_index":404,"title":{},"body":{"components/GameOverComponent.html":{}}}],["then(idtoken",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{}}}],["then(response",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.bestscore",{"_index":488,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardarray",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardarray[row][col",{"_index":501,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardcols",{"_index":472,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardcols.setvalue(+savedboardcols",{"_index":768,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.setvalue(value",{"_index":778,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.value",{"_index":784,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.valuechanges.subscribe(value",{"_index":774,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardrows).subscribe",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardrows.setvalue(+savedboardrows",{"_index":769,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.setvalue(value",{"_index":775,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.value",{"_index":786,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.valuechanges.subscribe(value",{"_index":777,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.changestatemessage(gamestate",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.close.emit",{"_index":366,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["this.contactservice.sendcontactform(contactform).subscribe",{"_index":243,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.cookies.get(\"token",{"_index":969,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookies.set(\"token\",this.token",{"_index":963,"title":{},"body":{"injectables/UserService.html":{}}}],["this.email",{"_index":241,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.errormessage",{"_index":364,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.erroroccurred.emit('la",{"_index":873,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(err.message",{"_index":892,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(error.message",{"_index":870,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(string(err",{"_index":896,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.errorsvisible",{"_index":491,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formlogin",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formreg",{"_index":684,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formreg.valid",{"_index":695,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.gameovervisible",{"_index":494,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.gamestates.asobservable",{"_index":898,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.gamestates.next(gamestate",{"_index":881,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hidepassword",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.http.get(`http://localhost:5273/api/firebasedb/gettopscores?count=${howmany",{"_index":913,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/firebasedb/getuserdata",{"_index":909,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/firebasedb/savescore",{"_index":911,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/pausegame",{"_index":903,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/resumegame",{"_index":904,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/setmovement",{"_index":902,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post(`http://localhost:5273/api/game/start",{"_index":906,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post(this.apiurl",{"_index":339,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.hubconnection",{"_index":863,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"gamestates",{"_index":880,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"score",{"_index":882,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"snakeboardupdate",{"_index":878,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.onclose((error",{"_index":867,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.onreconnected((connectionid",{"_index":871,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.start",{"_index":885,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.iserror",{"_index":247,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.issuccess",{"_index":245,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.loginservice.gettoken",{"_index":637,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["this.message",{"_index":242,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.name",{"_index":240,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":689,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.pausevisible",{"_index":497,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.renderer.addclass(this.document.body",{"_index":208,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.renderer.removeclass(this.document.body",{"_index":205,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.resumegame",{"_index":663,"title":{},"body":{"components/PauseComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":201,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.router.navigate(['/home",{"_index":564,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":649,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/register",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":639,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["this.routersubscription",{"_index":200,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.routersubscription.unsubscribe",{"_index":213,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.score",{"_index":487,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.score.asobservable",{"_index":907,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.score.next(score",{"_index":883,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.score=0",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.scores.sort((a",{"_index":749,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.settingsvisible",{"_index":508,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakeboardupdate.asobservable",{"_index":897,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.snakeboardupdate.next(boardarray",{"_index":879,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.snakecommunicationsservice.erroroccurred.subscribe((error",{"_index":490,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getbestscore(1).subscribe((bestscore",{"_index":489,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getgamestates().subscribe((gamestate",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getscore().subscribe((score",{"_index":486,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getsnakeboardupdate().subscribe((board",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.pausegame().subscribe",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.resumegame().subscribe",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.savescore(this.score).subscribe",{"_index":483,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.sendtoken(idtoken).subscribe((user",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.snakecommunicationsservice.setmovement(event.key).subscribe",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.startconnection().then",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.startgame(this.boardcols",{"_index":509,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecomunicationsservice.erroroccurred.subscribe((error",{"_index":363,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["this.sortscores",{"_index":748,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.token",{"_index":962,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updatebodyclass(event.urlafterredirects",{"_index":204,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.userservice.login(this.formlogin.value",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.loginwithgithub",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.loginwithgoogle",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logout",{"_index":648,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userservice.register(this.formreg.value",{"_index":696,"title":{},"body":{"components/RegisterComponent.html":{}}}],["throw",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{}}}],["title",{"_index":284,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{}}}],["toggle",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{}}}],["togglepasswordvisibility",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["tools",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":322,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["transform",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["transition",{"_index":312,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["translatey",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["translatey(0",{"_index":803,"title":{},"body":{"components/SettingsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["true",{"_index":246,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{}}}],["try",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["tslib",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":181,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":467,"title":{},"body":{"components/HomeComponent.html":{}}}],["uid",{"_index":917,"title":{},"body":{"classes/User.html":{}}}],["ultimate",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":193,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{}}}],["underline",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["unexpected",{"_index":894,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["unique",{"_index":924,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":1051,"title":{},"body":{"index.html":{}}}],["up",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["update",{"_index":772,"title":{},"body":{"components/SettingsComponent.html":{}}}],["updatebodyclass",{"_index":172,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["updatebodyclass(url",{"_index":188,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url",{"_index":191,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('contact",{"_index":212,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('home",{"_index":209,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('login",{"_index":207,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('scoreboards",{"_index":210,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["use",{"_index":700,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["user",{"_index":465,"title":{"classes/User.html":{}},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.getidtoken",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["usercredential",{"_index":964,"title":{},"body":{"injectables/UserService.html":{}}}],["usercredential.user.getidtoken().then((idtoken",{"_index":961,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":224,"title":{"injectables/UserService.html":{}},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["valid",{"_index":707,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":680,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":682,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["validators.email",{"_index":686,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.max(30",{"_index":765,"title":{},"body":{"components/SettingsComponent.html":{}}}],["validators.min(10",{"_index":764,"title":{},"body":{"components/SettingsComponent.html":{}}}],["validators.minlength(6",{"_index":687,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":685,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":229,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1079,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1031,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1055,"title":{},"body":{"index.html":{}}}],["videogamefont",{"_index":307,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["viewencapsulation",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewencapsulation.none",{"_index":670,"title":{},"body":{"components/RegisterComponent.html":{}}}],["visible",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":186,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["webkit",{"_index":811,"title":{},"body":{"components/SettingsComponent.html":{}}}],["weight",{"_index":320,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["west1.firebasedatabase.app",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":385,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["width",{"_index":269,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["win",{"_index":1023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["window:keydown",{"_index":656,"title":{},"body":{"components/PauseComponent.html":{}}}],["window:keydown(event",{"_index":658,"title":{},"body":{"components/PauseComponent.html":{}}}],["withurl(\"http://localhost:5273/snakegamehub",{"_index":865,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["wrapper",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["xlt2r3bhbzeo7_5yrvxg3xjjeq",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yellow",{"_index":507,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":379,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["zone.js",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, HostListener, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CellType, GameStates} from \"../common/Enums\";\nimport {SnakeCommunicationsService} from \"../services/snake-communications.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyClassDirective\n\nBodyClassDirective\n\nAppModule -->\n\nBodyClassDirective->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nErrorsComponent\n\nErrorsComponent\n\nAppModule -->\n\nErrorsComponent->AppModule\n\n\n\n\n\nGameOverComponent\n\nGameOverComponent\n\nAppModule -->\n\nGameOverComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPauseComponent\n\nPauseComponent\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nScoreItemComponent\n\nScoreItemComponent\n\nAppModule -->\n\nScoreItemComponent->AppModule\n\n\n\n\n\nScoreboardsComponent\n\nScoreboardsComponent\n\nAppModule -->\n\nScoreboardsComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSnakeCommunicationsService\n\nSnakeCommunicationsService\n\nAppModule -->\n\nSnakeCommunicationsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BodyClassDirective\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            ErrorsComponent\n                        \n                        \n                            GameOverComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PauseComponent\n                        \n                        \n                            PauseComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ScoreItemComponent\n                        \n                        \n                            ScoreboardsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SnakeCommunicationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule, provideClientHydration } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {SnakeCommunicationsService} from \"../services/snake-communications.service\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { ErrorsComponent } from './errors/errors.component';\nimport { GameOverComponent } from './game-over/game-over.component';\nimport { PauseComponent } from './pause/pause.component';\nimport {initializeApp, provideFirebaseApp} from \"@angular/fire/app\";\nimport {getAuth, provideAuth} from \"@angular/fire/auth\";\nimport {environment} from \"../environments/environment\";\nimport { RegisterComponent } from './register/register.component';\nimport {HomeComponent} from \"./home/home.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport { ScoreboardsComponent } from './scoreboards/scoreboards.component';\nimport { ScoreItemComponent } from './scoreboards/score-item/score-item.component';\nimport {BodyClassDirective} from \"./body-class.directive\";\nimport { ContactComponent } from './contact/contact.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SettingsComponent,\n    ErrorsComponent,\n    GameOverComponent,\n    PauseComponent,\n    PauseComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    ScoreboardsComponent,\n    ScoreItemComponent,\n    RegisterComponent,\n    BodyClassDirective,\n    ContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    provideClientHydration(),\n    SnakeCommunicationsService,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth())\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {canActivate, redirectUnauthorizedTo} from \"@angular/fire/auth-guard\";\nimport {ScoreboardsComponent} from \"./scoreboards/scoreboards.component\";\nimport {ContactComponent} from \"./contact/contact.component\";\nimport {LoginGuardian} from \"./login/login-guardian\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent, canActivate:[LoginGuardian]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'scoreboards', component: ScoreboardsComponent,canActivate:[LoginGuardian]},\n  {path: 'contact', component: ContactComponent, canActivate:[LoginGuardian]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\ncluster_AppServerModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.server.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BodyClassDirective.html":{"url":"directives/BodyClassDirective.html","title":"directive - BodyClassDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BodyClassDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/body-class.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appBodyClass]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                routerSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateBodyClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, router: Router, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/body-class.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBodyClass\n                        \n                    \n                \n            \n            \n                \nupdateBodyClass(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/body-class.directive.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Renderer2, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[appBodyClass]'\n})\nexport class BodyClassDirective implements OnInit, OnDestroy {\n  private routerSubscription: Subscription | undefined;\n\n  constructor(private renderer: Renderer2, private router: Router, @Inject(DOCUMENT) private document: Document) {}\n\n  ngOnInit() {\n    this.routerSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.updateBodyClass(event.urlAfterRedirects);\n      }\n    });\n  }\n\n  updateBodyClass(url: string) {\n    this.renderer.removeClass(this.document.body, 'login-page');\n    this.renderer.removeClass(this.document.body, 'home-page');\n    if (url.includes('login')) {\n      this.renderer.addClass(this.document.body, 'login-page');\n    } else if (url.includes('home')) {\n      this.renderer.addClass(this.document.body, 'home-page');\n    }else if (url.includes('scoreboards')) {\n      this.renderer.addClass(this.document.body, 'scoreboard-page');\n    }else if (url.includes('contact')) {\n      this.renderer.addClass(this.document.body, 'home-page');}\n  }\n\n  ngOnDestroy() {\n    if (this.routerSubscription) {\n      this.routerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contact/contact.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n\n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isError\n                            \n                            \n                                isSuccess\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(contactService: ContactService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contact/contact.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contactService\n                                                  \n                                                        \n                                                                        ContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact/contact.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact/contact.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { ContactService } from \"../../services/contact.service\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit{\n  name: string = '';\n  email: string = '';\n  message: string = '';\n  isSuccess: boolean = false;\n  isError: boolean = false;\n\n  constructor(private contactService: ContactService, private userService: UserService) {}\n\n  ngOnInit() {\n    console.log(this.userService.getToken());\n  }\n\n  onSubmit() {\n    const contactForm = {\n      name: this.name,\n      email: this.email,\n      message: this.message\n    };\n\n    this.contactService.sendContactForm(contactForm).subscribe(\n        (response: any) => {\n        this.isSuccess = true;\n        this.isError = false;\n        console.log('Mail sent correctly', response);\n          this.name = '';\n          this.email = '';\n          this.message = '';\n      },\n        (error: any) => {\n        this.isSuccess = false;\n        this.isError = true;\n        console.error('Error sending mail', error);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n\n  Contact Page\n  \n    Name\n    \n\n    Email\n    \n\n    Message\n    \n\n    Send\n  \n  Email sent successfully.\n  Error sending email.\n\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                body {\n  font-family: 'Courier New', Courier, monospace;\n  background-color: #d8e8d8;\n  color: #000;\n}\n\n.retro-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 5px solid #000;\n  background-color: #c8e6c9;\n  box-shadow: 10px 10px 0 #000;\n}\n\n.retro-title {\n  text-align: center;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n  text-shadow: 2px 2px 0 #388e3c;\n}\n\n.retro-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.retro-label {\n  font-size: 1.2em;\n  margin-bottom: 5px;\n  color: #1b5e20;\n}\n\n.retro-input, .retro-textarea {\n  font-size: 1em;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 2px solid #000;\n  background-color: #e8f5e9;\n  box-shadow: 4px 4px 0 #000;\n}\n\n.retro-button {\n  font-family: VideoGameFont, serif;\n  font-size: 1.2em;\n  padding: 10px;\n  border: 2px solid #000;\n  background-color: #66bb6a;\n  cursor: pointer;\n  box-shadow: 4px 4px 0 #000;\n  transition: all 0.2s;\n}\n\n.retro-button:hover {\n  background-color: #4caf50;\n  box-shadow: 2px 2px 0 #000;\n}\n\n.retro-button:active {\n  box-shadow: 1px 1px 0 #000;\n}\n\n.success-message {\n  color: green;\n  font-weight: bold;\n  margin-top: 20px;\n}\n\n.error-message {\n  color: red;\n  font-weight: bold;\n  margin-top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Contact Page      Name        Email        Message        Send    Email sent successfully.  Error sending email.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendContactForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/contact.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendContactForm\n                        \n                    \n                \n            \n            \n                \nsendContactForm(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/contact.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5273/api/Contact/send'\n                    \n                \n                    \n                        \n                                Defined in src/services/contact.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  private apiUrl = 'http://localhost:5273/api/Contact/send';\n\n  constructor(private http: HttpClient) {}\n\n  sendContactForm(data: any): Observable {\n    return this.http.post(this.apiUrl, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorsComponent.html":{"url":"components/ErrorsComponent.html","title":"component - ErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/errors.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-errors\n            \n\n\n\n            \n                styleUrls\n                ./errors.component.css\n            \n\n\n\n            \n                templateUrl\n                ./errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundcolor\n                            \n                            \n                                    Public\n                                snakeComunicationsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeErrors\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeComunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/errors/errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeComunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/errors/errors.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/errors/errors.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeErrors\n                        \n                    \n                \n            \n            \n                \ncloseErrors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/errors/errors.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/errors/errors.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        backgroundcolor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#ff4c4c'\n                    \n                \n                    \n                        \n                                Defined in src/app/errors/errors.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snakeComunicationsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnakeCommunicationsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/errors/errors.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { SnakeCommunicationsService } from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-errors',\n  templateUrl: './errors.component.html',\n  styleUrls: ['./errors.component.css']\n})\nexport class ErrorsComponent implements OnInit {\n  @Output() close = new EventEmitter();\n  @Input() errorMessage: string = '';\n  public backgroundcolor: string = '#ff4c4c';\n\n  constructor(public snakeComunicationsService: SnakeCommunicationsService) { }\n\n  ngOnInit() {\n    /*\n    this.snakeComunicationsService.errorOccurred.subscribe((error) => {\n      this.errorMessage = error;\n      console.log(error);\n    }); */\n  }\n\n  closeErrors() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n    Please restart the server\n    Close\n  \n\n\n    \n\n    \n                \n                    ./errors.component.css\n                \n                \n.error-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n}\n\n.error-message {\n  padding: 20px 30px;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  color: white;\n  font-size: 18px;\n  text-align: center;\n}\n\n.error-button {\n  margin-top: 15px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  background-color: white;\n  color: #ff4c4c;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  font-family: VideoGameFont, serif;\n}\n\n.error-button:hover {\n  background-color: #ffe6e6;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}    Please restart the server    Close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameOverComponent.html":{"url":"components/GameOverComponent.html","title":"component - GameOverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameOverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game-over/game-over.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-over\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./game-over.component.html\n            \n\n\n\n            \n                styleUrl\n                ./game-over.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeGameOver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game-over/game-over.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game-over/game-over.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeGameOver\n                        \n                    \n                \n            \n            \n                \ncloseGameOver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game-over/game-over.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-game-over',\n  templateUrl: './game-over.component.html',\n  styleUrl: './game-over.component.css'\n})\nexport class GameOverComponent {\n  @Output() close = new EventEmitter();\n  @Input() score!: number;\n\n  closeGameOver() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    Game Over\n    Thanks for playing! Your score was: {{score}}\n    \n      Close\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Game Over    Thanks for playing! Your score was: {{score}}          Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'GameOverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bestScore\n                            \n                            \n                                    Public\n                                boardArray\n                            \n                            \n                                boardCols\n                            \n                            \n                                boardRows\n                            \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                errorsVisible\n                            \n                            \n                                gameOverVisible\n                            \n                            \n                                pauseVisible\n                            \n                            \n                                score\n                            \n                            \n                                settingsVisible\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStateMessage\n                            \n                            \n                                colorCell\n                            \n                            \n                                    \n                                handleKeyPress\n                            \n                            \n                                hideErrors\n                            \n                            \n                                hideGameOver\n                            \n                            \n                                hidePause\n                            \n                            \n                                hideSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showSettings\n                            \n                            \n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeCommunicationsService: SnakeCommunicationsService, http: HttpClient, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:117\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStateMessage\n                        \n                    \n                \n            \n            \n                \nchangeStateMessage(gameState: GameStates)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                            GameStates\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colorCell\n                        \n                    \n                \n            \n            \n                \ncolorCell(row: number, col: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                col\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyPress\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyPress(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideErrors\n                        \n                    \n                \n            \n            \n                \nhideErrors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideGameOver\n                        \n                    \n                \n            \n            \n                \nhideGameOver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePause\n                        \n                    \n                \n            \n            \n                \nhidePause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideSettings\n                        \n                    \n                \n            \n            \n                \nhideSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSettings\n                        \n                    \n                \n            \n            \n                \nshowSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bestScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        boardArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CellType[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardCols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameOverVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pauseVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        settingsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SnakeProWeb'\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CellType, GameStates} from \"../../common/Enums\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"../../common/User\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css',\n})\n\nexport class HomeComponent implements OnInit{\n  title = 'SnakeProWeb';\n  public boardArray: CellType[][] = [];\n  public visible: boolean = true;\n  settingsVisible = false;\n  gameOverVisible = false;\n  pauseVisible: boolean = false;\n  boardCols: number = 20;\n  boardRows: number = 20;\n  score: number = 0;\n  bestScore: number = 0;\n\n  constructor(private snakeCommunicationsService: SnakeCommunicationsService, private http: HttpClient, private userService: UserService) {\n  }\n\n  public errorsVisible = false;\n  public errorMessage: string = '';\n\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      const savedboardCols = localStorage.getItem('boardCols');\n      if (savedboardCols !== null) {\n        this.boardCols = +savedboardCols;\n      }\n      const savedboardRows = localStorage.getItem('boardRows');\n      if (savedboardRows !== null) {\n        this.boardRows = +savedboardRows;\n      }\n    }\n    this.snakeCommunicationsService.startConnection().then(() => {\n      this.snakeCommunicationsService.getSnakeBoardUpdate().subscribe((board) => {\n        this.boardArray = board;\n      });\n      this.snakeCommunicationsService.getGameStates().subscribe((gameState: GameStates) => {\n        this.changeStateMessage(gameState)\n        if (gameState === GameStates.GameOver) {\n          this.snakeCommunicationsService.saveScore(this.score).subscribe(() => console.log(\"Score saved\"));\n        }\n      });\n      this.snakeCommunicationsService.getScore().subscribe((score) => {\n        this.score = score;\n        if (score > this.bestScore) {\n          this.bestScore = score;\n        }\n      });\n      this.snakeCommunicationsService.getBestScore(1).subscribe((bestScore) => {\n        this.bestScore = bestScore;\n      });\n    });\n\n    this.snakeCommunicationsService.errorOccurred.subscribe((error) => {\n      this.errorsVisible = true;\n      this.errorMessage = error;\n    });\n    console.log(this.userService.getToken());\n  }\n\n  changeStateMessage(gameState: GameStates) {\n    switch (gameState) {\n      case GameStates.GameOver:\n        this.gameOverVisible = true;\n        break;\n      case GameStates.Paused:\n        this.pauseVisible = true;\n        break;\n      case GameStates.Running:\n        this.pauseVisible = false;\n        break;\n      case GameStates.Win:\n      case GameStates.None:\n        break;\n    }\n  }\n\n\n  colorCell(row: number, col: number): string {\n    switch (this.boardArray[row][col]) {\n      case CellType.Empty:\n        return 'green';\n      case CellType.Block:\n        return 'black';\n      case CellType.Food:\n        return 'red';\n      case CellType.Snake:\n        return 'yellow';\n      default:\n        return 'white';\n    }\n  }\n\n  showSettings() {\n    this.settingsVisible = true;\n  }\n\n  hideSettings() {\n    this.settingsVisible = false;\n  }\n\n  startGame(): void {\n    this.snakeCommunicationsService.startGame(this.boardCols, this.boardRows).subscribe(() => console.log(\"Game started\"));\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyPress(event: KeyboardEvent) {\n    if (event.key === 'p') {\n      this.snakeCommunicationsService.pauseGame().subscribe();\n    } else if (event.key === ' ') {\n      this.snakeCommunicationsService.resumeGame().subscribe();\n    } else {\n      this.snakeCommunicationsService.setMovement(event.key).subscribe();\n    }\n  }\n\n\n  hideErrors() {\n    this.errorsVisible = false;\n  }\n\n  hideGameOver() {\n    this.gameOverVisible = false;\n    this.score=0;\n  }\n\n  hidePause() {\n    this.pauseVisible = false;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Ultimate Snake Game\n      The Definitive Snake Game Experience\n    \n    \n      SCORE: {{score}}\n      BEST SCORE: {{bestScore}}\n    \n  \n\n\n\n  \n    \n      \n    \n  \n\n\nSTART\nSETTINGS\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Ultimate Snake Game      The Definitive Snake Game Experience              SCORE: {{score}}      BEST SCORE: {{bestScore}}                        STARTSETTINGS'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formLogin\n                            \n                            \n                                hidePassword\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToRegister\n                            \n                            \n                                onGithubLogin\n                            \n                            \n                                onGoogleLogin\n                            \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToRegister\n                        \n                    \n                \n            \n            \n                \nnavigateToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGithubLogin\n                        \n                    \n                \n            \n            \n                \nonGithubLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGoogleLogin\n                        \n                    \n                \n            \n            \n                \nonGoogleLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  formLogin: FormGroup;\n  errorMessage: string | null = null;\n  hidePassword: boolean = true;\n  private token: string | null = null;\n\n  constructor(private userService: UserService, private router: Router, private snakeCommunicationsService: SnakeCommunicationsService) {\n    this.formLogin = new FormGroup({\n      email: new FormControl(),\n      password: new FormControl()\n    });\n  }\n\n  onSubmit() {\n    this.userService.login(this.formLogin.value)\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from email/password sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login. Please check your email and password.\";\n      });\n  }\n\n  navigateToRegister() {\n    this.router.navigate(['/register']);\n  }\n\n  onGoogleLogin() {\n    this.userService.loginWithGoogle()\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from Google sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login with Google. Please try again.\";\n      });\n\n  }\n\n  onGithubLogin() {\n    this.userService.loginWithGithub()\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from Github sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login with Github. Please try again.\";\n      });\n\n  }\n\n\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n\n    \n\n    \n        \n  \n    Log in\n    \n      \n        \n      \n      \n        \n        👁️\n      \n      Log in\n    \n\n\n    \n      {{ errorMessage }}\n    \n    \n    \n      Have Google or GitHub?\n      \n        \n        Log in with Google\n      \n      \n        \n        Log in with GitHub\n      \n    \n    \n      Don't have an account yet?\n      Sign up\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n.login-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.login-container {\n  max-width: 400px;\n  width: 400px;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.login-container h2 {\n  margin-bottom: 15px;\n  color: #ffffff;\n  font-size: 1.3rem;\n}\n\n.form-group {\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  box-sizing: border-box;\n  border: 2px solid #4b4f54;\n  border-radius: 5px;\n  background-color: #070b10;\n  color: #fff;\n}\n\n.form-group input::placeholder {\n  color: #bbb;\n  font-size: 14px;\n}\n\n.toggle-password {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #fff;\n}\n\n.login-btn {\n  width: 100%;\n  padding: 9px;\n  background-color: #68f0b0;\n  color: #247b56;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.login-btn:hover {\n  background-color: #95f1c1;\n}\n\n.alternative-login {\n  text-align: center;\n  margin-top: 30px;\n}\n\n.alternative-login p {\n  margin-bottom: 30px;\n  font-size: 14px;\n  margin-top: 20px;\n}\n\n.google-btn, .github-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 5px;\n  margin-top: 20px;\n  background-color: #070b10;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.google-btn img, .github-btn img {\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n}\n\n.google-btn span, .github-btn span {\n  font-weight: bold;\n  color: #fff;\n}\n\n\n.google-btn:hover, .github-btn:hover {\n  background-color: #f1f1f1;\n\n}\n\nspan:hover {\n  text-decoration: underline;\n}\n\n.register-link {\n  margin-top: 23px;\n  text-align: center;\n}\n\n.register-link span {\n  margin-right: 5px;\n  font-size: 14px;\n}\n\n.register-link a {\n  color: #1dbf73;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.register-link a:hover {\n  text-decoration: underline;\n}\n\n.error-message {\n  color: red;\n  margin-top: 15px;\n  text-align: center;\n}\n\n.divider {\n  width: 100%;\n  height: 2px;\n  background-color: white;\n  margin: 25px 0;\n}\n\n.google-btn:hover span,\n.github-btn:hover span {\n  color: #757575;\n}\n.google-btn span:hover,\n.github-btn span:hover {\n  color: black;\n}\n\n/*\n.form-group input:hover {\n  background-color: #95f1c1;\n}\n\n  .form-group input:focus {\n  background-color: #95f1c1;\n  color: #000;\n}\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Log in                                              👁️            Log in              {{ errorMessage }}                  Have Google or GitHub?                      Log in with Google                            Log in with GitHub                    Don\\'t have an account yet?      Sign up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuardian.html":{"url":"guards/LoginGuardian.html","title":"guard - LoginGuardian","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuardian\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/login/login-guardian.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login-guardian.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login-guardian.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuardian implements CanActivate {\n  constructor(private loginService: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.loginService.getToken()) {\n      console.log(this.loginService.getToken())\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  constructor(private router: Router,  private userService: UserService) {\n\n  }\n\n\n  logout(): void {\n    this.userService.logout()\n      .then(() => {\n        this.router.navigate(['/login']);\n      })\n      .catch(error => console.error(error));\n  }\n\n}\n\n    \n\n    \n        \n  \n    Home\n    Scoreboards\n    Contact\n    Logout\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Home    Scoreboards    Contact    Logout  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PauseComponent.html":{"url":"components/PauseComponent.html","title":"component - PauseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PauseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pause/pause.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pause\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./pause.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pause.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleKeyDown\n                            \n                            \n                                resumeGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pause/pause.component.ts:9\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resumeGame\n                        \n                    \n                \n            \n            \n                \nresumeGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-pause',\n  templateUrl: './pause.component.html',\n  styleUrl: './pause.component.css'\n})\nexport class PauseComponent {\n  @Output() close = new EventEmitter();\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === ' ') {\n      this.resumeGame();\n    }\n  }\n\n  resumeGame() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    The game is paused\n    Please press space to continue.\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      The game is paused    Please press space to continue.          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'PauseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formReg\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formReg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ViewEncapsulation} from '@angular/core';\nimport { FormControl, FormGroup, Validators, ValidatorFn, AbstractControl } from \"@angular/forms\";\nimport { UserService } from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css',],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RegisterComponent {\n  formReg: FormGroup;\n  errorMessage: string | null = null;\n\n  constructor(private userService: UserService, private router: Router) {\n    this.formReg = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      passwordConfirm: new FormControl('', [Validators.required, Validators.minLength(6)])\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator: ValidatorFn = (formGroup: AbstractControl): { [key: string]: boolean } | null => {\n    const password = formGroup.get('password')!.value;\n    const confirmPassword = formGroup.get('passwordConfirm')!.value;\n    return password === confirmPassword ? null : { 'mismatch': true };\n  };\n\n  onSubmit() {\n    if (this.formReg.valid) {\n      this.userService.register(this.formReg.value)\n        .then(response =>\n          this.router.navigate(['/login']))\n        .catch(error => {\n          console.error(error)\n          if (error.code === 'auth/email-already-in-use') {\n            this.errorMessage = 'Email already in use';\n          }\n        });\n    } else {\n      console.error(\"Form is invalid or passwords do not match.\");\n    }\n  }\n\n\n  goBack() {\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Register\n    \n      \n        \n        \n          Email is required.\n          Enter a valid email.\n        \n      \n      \n        \n        \n          Password is required.\n          Password must be at least 6 characters long.\n        \n      \n      \n        \n        \n          Passwords do not match.\n        \n      \n      Register\n      \n        {{ errorMessage }}\n      \n      &#8592; Go Back\n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                body {\n  background-color: #070b10;\n  color: #ffffff;\n  font-family: 'Arial', sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n}\n\n.register-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.register-container {\n  max-width: 400px;\n  width: 400px;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.register-container h2 {\n  margin-bottom: 15px;\n  color: #ffffff;\n  font-size: 1.3rem;\n}\n\n.form-group {\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  box-sizing: border-box;\n  border: 2px solid #4b4f54;\n  border-radius: 5px;\n  background-color: #070b10;\n  color: #fff;\n}\n\n.form-group input::placeholder {\n  color: #bbb;\n  font-size: 14px;\n}\n\n.error {\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.register-btn {\n  width: 100%;\n  padding: 9px;\n  background-color: #68f0b0;\n  color: #247b56;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.register-btn:hover {\n  background-color: #95f1c1;\n}\n\n.goback-icon {\n  display: inline-block;\n  margin-top: 15px;\n  color: #68f0b0;\n  cursor: pointer;\n  font-size: 0.9rem;\n  text-decoration: none;\n}\n\n.goback-icon:hover {\n  color: #95f1c1;\n  text-decoration: underline;\n}\n\n.error-message {\n  color: red;\n  margin-top: 15px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Register                                    Email is required.          Enter a valid email.                                              Password is required.          Password must be at least 6 characters long.                                              Passwords do not match.                    Register              {{ errorMessage }}            ← Go Back      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreItemComponent.html":{"url":"components/ScoreItemComponent.html","title":"component - ScoreItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScoreItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/scoreboards/score-item/score-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-item\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./score-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./score-item.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/scoreboards/score-item/score-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-score-item',\n  templateUrl: './score-item.component.html',\n  styleUrl: './score-item.component.css'\n})\nexport class ScoreItemComponent {\n  @Input() score!: { player: string, points: number };\n}\n\n    \n\n    \n        \n  {{ score.player }}\n  {{ score.points }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ score.player }}  {{ score.points }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreboardsComponent.html":{"url":"components/ScoreboardsComponent.html","title":"component - ScoreboardsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScoreboardsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/scoreboards/scoreboards.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scoreboards\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./scoreboards.component.html\n            \n\n\n\n            \n                styleUrl\n                ./scoreboards.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scores\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sortScores\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/scoreboards/scoreboards.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/scoreboards/scoreboards.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortScores\n                        \n                    \n                \n            \n            \n                \nsortScores()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/scoreboards/scoreboards.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        scores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { player: 'Player 1', points: 60 },\n    { player: 'Player 2', points: 100 },\n    { player: 'Player 3', points: 80 }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/scoreboards/scoreboards.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-scoreboards',\n  templateUrl: './scoreboards.component.html',\n  styleUrl: './scoreboards.component.css'\n})\nexport class ScoreboardsComponent implements OnInit {\n  scores = [\n    { player: 'Player 1', points: 60 },\n    { player: 'Player 2', points: 100 },\n    { player: 'Player 3', points: 80 }\n  ];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.sortScores();\n    console.log(this.userService.getToken());\n  }\n\n  sortScores(): void {\n    this.scores.sort((a, b) => b.points - a.points);\n  }\n\n}\n\n    \n\n    \n        \n\n\n  Scoreboard\n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Scoreboard                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreboardsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardCols\n                            \n                            \n                                boardRows\n                            \n                            \n                                    Public\n                                snakeCommunicationsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveSettings\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSettings\n                        \n                    \n                \n            \n            \n                \ncloseSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveSettings\n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardCols\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(20, [Validators.min(10), Validators.max(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardRows\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(20, [Validators.min(10), Validators.max(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snakeCommunicationsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnakeCommunicationsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Output, EventEmitter, OnInit} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  @Output() close = new EventEmitter();\n  boardCols = new FormControl(20, [Validators.min(10), Validators.max(30)]);\n  boardRows = new FormControl(20, [Validators.min(10), Validators.max(30)]);\n\n  constructor(public snakeCommunicationsService: SnakeCommunicationsService) {\n  }\n\n  ngOnInit() {\n    const savedboardCols = localStorage.getItem('boardCols');\n    if (savedboardCols !== null) {\n      this.boardCols.setValue(+savedboardCols);\n    }\n    const savedboardRows = localStorage.getItem('boardRows');\n    if (savedboardRows !== null) {\n      this.boardRows.setValue(+savedboardRows);\n    }\n\n    // Subscribe to changes in boardCols and update boardRows accordingly\n    this.boardCols.valueChanges.subscribe(value => {\n      this.boardRows.setValue(value, {emitEvent: false});\n    });\n\n    // Subscribe to changes in boardRows and update boardCols accordingly\n    this.boardRows.valueChanges.subscribe(value => {\n      this.boardCols.setValue(value, {emitEvent: false});\n    });\n  }\n\n  saveSettings() {\n    const boardColsItem = localStorage.getItem('boardCols');\n    const boardRowsItem = localStorage.getItem('boardRows');\n    const oldBoardColsValue = boardColsItem ? +boardColsItem : 20;\n    const oldBoardRowsValue = boardRowsItem ? +boardRowsItem : 20;\n\n    let newBoardColsValue = this.boardCols.value ?? oldBoardColsValue;\n    let newBoardRowsValue = this.boardRows.value ?? oldBoardRowsValue;\n\n    if (newBoardColsValue > 30) {\n      newBoardColsValue = oldBoardColsValue;\n    }\n    if (newBoardRowsValue > 30) {\n      newBoardRowsValue = oldBoardRowsValue;\n    }\n\n    localStorage.setItem('boardCols', newBoardColsValue.toString());\n    localStorage.setItem('boardRows', newBoardRowsValue.toString());\n    console.log(newBoardColsValue, newBoardRowsValue);\n  }\n\n  closeSettings() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    Settings\n\n    \n      Board Cols:\n      \n      \n        The maximum value is 30.\n      \n    \n\n    \n      Board Rows:\n      \n      \n        The maximum value is 30.\n      \n    \n\n    \n      Close\n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                #settings-menu {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.3s ease;\n  opacity: 1;\n}\n\n#settings-menu.ng-hide {\n  opacity: 0;\n}\n\n#settings-content {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  max-width: 400px;\n  width: 90%;\n  transition: transform 0.3s ease, opacity 0.3s ease;\n  transform: translateY(0);\n  opacity: 1;\n}\n\n#settings-content.ng-hide {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n\n#settings-content h2 {\n  margin-top: 0;\n  color: #333;\n}\n\n.input-group {\n  margin-bottom: 20px;\n}\n\n#settings-content label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #555;\n}\n\n#settings-content input[type=\"number\"] {\n  width: calc(100% - 20px);\n  margin-bottom: 10px;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  outline: none;\n  box-sizing: border-box;\n}\n\n#settings-content input[type=\"number\"]::-webkit-inner-spin-button,\n#settings-content input[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n#settings-content input[type=\"number\"]:hover,\n#settings-content input[type=\"number\"]:focus {\n  border-color: #3eff65;\n}\n\n.button-group {\n  margin-top: 20px;\n}\n\n#settings-content button {\n  background-color: #3eff65;\n  color: black;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s ease;\n  font-family: VideoGameFont, serif;\n}\n\n#settings-content button:hover {\n  background-color: #3ea62d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Settings          Board Cols:                    The maximum value is 30.                    Board Rows:                    The maximum value is 30.                    Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnakeCommunicationsService.html":{"url":"injectables/SnakeCommunicationsService.html","title":"injectable - SnakeCommunicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnakeCommunicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/snake-communications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorOccurred\n                            \n                            \n                                    Private\n                                gameStates\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                    Private\n                                score\n                            \n                            \n                                    Private\n                                snakeBoardUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBestScore\n                            \n                            \n                                    Public\n                                getGameStates\n                            \n                            \n                                    Public\n                                getScore\n                            \n                            \n                                    Public\n                                getSnakeBoardUpdate\n                            \n                            \n                                    Public\n                                pauseGame\n                            \n                            \n                                    Public\n                                resumeGame\n                            \n                            \n                                    Public\n                                saveScore\n                            \n                            \n                                    Public\n                                sendToken\n                            \n                            \n                                    Public\n                                setMovement\n                            \n                            \n                                    Public\n                                    Async\n                                startConnection\n                            \n                            \n                                    Public\n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/snake-communications.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getBestScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBestScore(howMany: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                howMany\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getGameStates\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGameStates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getScore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSnakeBoardUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSnakeBoardUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pauseGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    pauseGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resumeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    resumeGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveScore(score: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToken(idToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setMovement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMovement(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        startConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    startConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    startGame(columns: number, rows: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rows\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorOccurred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        snakeBoardUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport {CellType, GameStates} from \"../common/Enums\";\nimport {Observable, Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from \"../common/User\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnakeCommunicationsService {\n  private hubConnection: signalR.HubConnection;\n  private snakeBoardUpdate = new Subject()\n  private gameStates = new Subject()\n  private score = new Subject()\n  public errorOccurred = new EventEmitter();\n\n  constructor(private http: HttpClient) {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(\"http://localhost:5273/snakegamehub\")\n      .build();\n\n    this.hubConnection.onclose((error) => {\n      console.log('Connection closed');\n      if (error) {\n        this.errorOccurred.emit(error.message);\n      }\n    });\n\n\n    this.hubConnection.onreconnected((connectionId) => {\n      console.log('Connection reestablished');\n      this.errorOccurred.emit('La conexión ha sido restablecida');\n    });\n\n    this.hubConnection.on(\"SnakeBoardUpdate\", (boardArray: CellType [][]) => {\n      this.snakeBoardUpdate.next(boardArray);\n    });\n    this.hubConnection.on(\"GameStates\", (gameState: GameStates) => {\n      this.gameStates.next(gameState);\n    });\n    this.hubConnection.on(\"Score\", (score: number) => {\n      this.score.next(score);\n    });\n  }\n\n  public async startConnection(): Promise {\n    try {\n      await this.hubConnection.start();\n      console.log('Connection started');\n    } catch (err) {\n      if (err instanceof Error) {\n        console.log('Error while starting connection: ' + err.message);\n        this.errorOccurred.emit(err.message);\n      } else {\n        // Handle unexpected error type\n        console.log('Unexpected error while starting connection: ' + err);\n        this.errorOccurred.emit(String(err));\n      }\n    }\n  }\n  public getSnakeBoardUpdate(): Observable {\n    return this.snakeBoardUpdate.asObservable();\n  }\n\n  public getGameStates(): Observable {\n    return this.gameStates.asObservable();\n  }\n\n  public setMovement(key: string): Observable {\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify(key);\n    return this.http.post('http://localhost:5273/api/Game/SetMovement', body, {'headers': headers});\n  }\n\n  public pauseGame(): Observable {\n    return this.http.post('http://localhost:5273/api/Game/PauseGame', null);\n  }\n\n  public resumeGame(): Observable {\n    return this.http.post('http://localhost:5273/api/Game/ResumeGame', null);\n  }\n\n  public startGame(columns: number, rows: number): Observable {\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify({columns, rows});\n    return this.http.post(`http://localhost:5273/api/Game/Start`, body, {'headers': headers});\n  }\n  public getScore(): Observable {\n    return this.score.asObservable();\n  }\n\n  public sendToken(idToken: string): Observable {\n    const headers = { 'Content-Type': 'application/json' };\n    const body = JSON.stringify(idToken);\n    return this.http.post('http://localhost:5273/api/FirebaseDb/GetUserData', body, { headers });\n  }\n\n  public saveScore(score: number): Observable {\n    const headers = { 'Content-Type': 'application/json' };\n    const body = JSON.stringify(score);\n    return this.http.post('http://localhost:5273/api/FirebaseDb/SaveScore', body, { headers });\n  }\n\n\n  public getBestScore(howMany:number): Observable {\n    return this.http.get(`http://localhost:5273/api/FirebaseDb/GetTopScores?count=${howMany}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/User.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                displayName\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                score\n                            \n                            \n                                    Optional\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:10\n                        \n                    \n\n            \n                \n                    Gets or sets the display name of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:15\n                        \n                    \n\n            \n                \n                    Gets or sets the email of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:20\n                        \n                    \n\n            \n                \n                    Gets or sets the score of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:5\n                        \n                    \n\n            \n                \n                    Gets or sets the unique identifier for the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Gets or sets the unique identifier for the user.\n   */\n  uid?: string;\n\n  /**\n   * Gets or sets the display name of the user.\n   */\n  displayName?: string;\n\n  /**\n   * Gets or sets the email of the user.\n   */\n  email?: string;\n\n  /**\n   * Gets or sets the score of the user.\n   */\n  score?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                login\n                            \n                            \n                                loginWithGithub\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, cookies: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookies\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGithub\n                        \n                    \n                \n            \n            \n                \nloginWithGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/services/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, signInWithPopup, GoogleAuthProvider, GithubAuthProvider} from \"@angular/fire/auth\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private token: string | null = null;\n  constructor(private auth: Auth,private cookies:CookieService) { }\n\n  register({email, password}: any) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n\n  login({email, password}: any) {\n    return signInWithEmailAndPassword(this.auth, email, password).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token)\n      });\n      return userCredential;\n    });\n  }\n  loginWithGoogle() {\n    return signInWithPopup(this.auth, new GoogleAuthProvider()).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token);\n      });\n      return userCredential;\n    });\n  }\n\n  loginWithGithub(){\n    return signInWithPopup(this.auth, new GithubAuthProvider()).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token);\n      });\n      return userCredential;\n    });\n  }\n  logout() {\n    this.token=\"\";\n    this.cookies.set(\"token\",this.token)\n    return signOut(this.auth);\n  }\n\n  getToken() {\n    return this.cookies.get(\"token\")\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/body-class.directive.ts\n            \n            directive\n            BodyClassDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/errors/errors.component.ts\n            \n            component\n            ErrorsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/game-over/game-over.component.ts\n            \n            component\n            GameOverComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/login/login-guardian.ts\n            \n            guard\n            LoginGuardian\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pause/pause.component.ts\n            \n            component\n            PauseComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/scoreboards/score-item/score-item.component.ts\n            \n            component\n            ScoreItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/scoreboards/scoreboards.component.ts\n            \n            component\n            ScoreboardsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/User.ts\n            \n            class\n            User\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/snake-communications.service.ts\n            \n            injectable\n            SnakeCommunicationsService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/platform-server : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @angular/ssr : ^17.3.3\n        \n            express : ^4.18.2\n        \n            firebase-tools : ^13.10.2\n        \n            js-cookie : ^3.0.5\n        \n            ngx-cookie-service : ^17.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellType   (src/.../Enums.ts)\n                        \n                        \n                            GameStates   (src/.../Enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/Enums.ts\n    \n        \n            \n                \n                    \n                        \n                        CellType\n                    \n                \n                        \n                            \n                                 Empty\n                            \n                        \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                 Food\n                            \n                        \n                        \n                            \n                                 Snake\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GameStates\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                 Paused\n                            \n                        \n                        \n                            \n                                 GameOver\n                            \n                        \n                        \n                            \n                                 Win\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSnakeProWeb\nThis project was generated with Angular CLI version 17.3.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyClassDirective\n\nBodyClassDirective\n\nAppModule -->\n\nBodyClassDirective->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nErrorsComponent\n\nErrorsComponent\n\nAppModule -->\n\nErrorsComponent->AppModule\n\n\n\n\n\nGameOverComponent\n\nGameOverComponent\n\nAppModule -->\n\nGameOverComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPauseComponent\n\nPauseComponent\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nScoreItemComponent\n\nScoreItemComponent\n\nAppModule -->\n\nScoreItemComponent->AppModule\n\n\n\n\n\nScoreboardsComponent\n\nScoreboardsComponent\n\nAppModule -->\n\nScoreboardsComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSnakeCommunicationsService\n\nSnakeCommunicationsService\n\nAppModule -->\n\nSnakeCommunicationsService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    apiKey: \"AIzaSyC4K7mi-Xlt2R3BhbZEo7_5yRvxG3xJJeQ\",\n    authDomain: \"snakepro-2bf73.firebaseapp.com\",\n    databaseURL: \"https://snakepro-2bf73-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"snakepro-2bf73\",\n    storageBucket: \"snakepro-2bf73.appspot.com\",\n    messagingSenderId: \"169384997647\",\n    appId: \"1:169384997647:web:53c3c0e1a388f9bc2ac47a\",\n    measurementId: \"G-M4BPJRSBVW\",\n  },\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.051,1,0.533]],["body/components/AppComponent.html",[0,0.09,1,0.976,2,1.261,3,0.427,4,0.369,5,1.107,6,1.89,7,1.107,8,1.107,9,0.369,10,3.353,11,1.012,12,1.61,13,1.465,14,2.869,15,2.354,16,5.473,17,1.379,18,5.025,19,0.692,20,4.033,21,3.353,22,1.89,23,2.905,24,0.427,25,2.905,26,2.57,27,2.905,28,1.321,29,1.89,30,1.89,31,2.57,32,2.57,33,0.034,34,0.427,35,0.26,36,0.84,37,1.379,38,1.261,39,0.761,40,1.573,41,1.107,42,0.747,43,1.107,44,0.687,45,1.107,46,0.687,47,1.107,48,0.761,49,1.107,50,0.761,51,0.84,52,1.107,53,0.761,54,1.107,55,0.687,56,1.107,57,0.761,58,1.107,59,0.761,60,1.107,61,0.687,62,1.107,63,0.687,64,1.107,65,0.761,66,0.923,67,1.107,68,0.761,69,1.107,70,0.761,71,0.923,72,1.107,73,1.012,74,0.687,75,1.012,76,1.107,77,0.027,78,0.027]],["title/modules/AppModule.html",[79,1.613,80,1.785]],["body/modules/AppModule.html",[1,1.038,3,0.33,4,0.286,9,0.286,13,0.715,19,0.769,24,0.33,28,1.835,29,1.463,30,1.463,31,1.99,32,1.99,33,0.035,34,0.33,35,0.201,36,0.65,44,0.955,46,0.955,48,1.058,50,1.058,51,0.65,53,1.058,55,0.955,57,1.058,59,1.117,61,1.009,63,0.955,65,1.058,68,1.058,70,1.058,71,0.715,74,0.955,77,0.023,78,0.023,79,1.611,80,3.711,81,1.611,82,1.783,83,3.483,84,3.483,85,3.483,86,1.99,87,2.596,88,2.596,89,2.596,90,2.596,91,2.596,92,3.379,93,3.063,94,2.249,95,1.611,96,3.123,97,3.063,98,3.063,99,4.252,100,4.252,101,2.249,102,2.249,103,3.123,104,2.596,105,4.252,106,3.123,107,3.123,108,4.252,109,4.252,110,1.783,111,3.123,112,2.249,113,3.123,114,3.123,115,3.123,116,4.252,117,3.123,118,4.252,119,4.252,120,2.249,121,2.249,122,3.123,123,2.596,124,2.596,125,2.596,126,2.596,127,3.123,128,2.249,129,3.123,130,1.334,131,3.123,132,2.596,133,2.249,134,3.123,135,2.596,136,3.123]],["title/modules/AppRoutingModule.html",[79,1.613,92,1.785]],["body/modules/AppRoutingModule.html",[0,0.1,3,0.418,4,0.361,9,0.361,19,0.753,24,0.418,33,0.035,34,0.418,35,0.255,44,0.846,46,0.846,53,0.937,55,0.846,61,0.846,63,0.673,77,0.027,78,0.027,81,2.038,86,2.518,92,2.832,97,2.846,98,3.573,120,2.846,123,3.285,124,3.285,125,3.285,126,3.285,132,3.285,135,3.285,137,3.951,138,3.951,139,4.961,140,5.687,141,1.851,142,4.124,143,3.951,144,2.256,145,3.161,146,3.951,147,3.951,148,4.124,149,3.733,150,3.951,151,3.285,152,3.285,153,1.851,154,2.256,155,0.823,156,6.302,157,1.427,158,1.362,159,3.455,160,5.422,161,3.951,162,2.317,163,3.285,164,4.961,165,3.951,166,3.285,167,3.951,168,1.688,169,4.124,170,1.688,171,3.951,172,3.951,173,1.085,174,1.851,175,3.161,176,3.951,177,4.961,178,1.851,179,2.518,180,2.846,181,3.951,182,2.518,183,2.518,184,3.951]],["title/modules/AppServerModule.html",[79,1.613,185,1.993]],["body/modules/AppServerModule.html",[1,1.061,3,0.473,4,0.409,9,0.409,19,0.717,24,0.473,33,0.035,34,0.473,35,0.288,36,0.931,77,0.029,78,0.029,79,2.305,80,3.517,81,2.305,82,2.552,83,3.219,84,4.124,85,3.219,86,2.848,93,3.853,94,3.219,95,2.305,97,3.853,98,3.853,101,3.219,104,3.716,185,3.968,186,3.716,187,4.47,188,4.47,189,4.47,190,5.35,191,2.094,192,4.47]],["title/directives/BodyClassDirective.html",[39,0.59,74,0.533]],["body/directives/BodyClassDirective.html",[3,0.31,4,0.268,9,0.268,11,0.735,12,1.021,19,0.61,22,2.191,24,0.31,33,0.035,34,0.31,35,0.363,38,1.021,39,1.037,42,0.556,73,0.735,74,0.861,75,1.021,77,0.022,78,0.022,130,1.738,141,1.372,149,3.501,153,1.906,155,1.052,157,1.267,158,1.117,159,3.219,170,1.738,173,1.387,175,3.383,178,2.367,193,4.568,194,2.434,195,1.906,196,4.675,197,0.4,198,1.738,199,5.308,200,0.931,201,5.495,202,3.137,203,5.495,204,1.402,205,2.928,206,5.636,207,3.565,208,6.067,209,1.002,210,4.068,211,1.589,212,1.117,213,0.716,214,1.021,215,1.22,216,4.675,217,4.068,218,1.589,219,1.508,220,4.068,221,2.928,222,1.378,223,2.884,224,2.884,225,2.606,226,4.068,227,4.068,228,4.068,229,4.568,230,1.07,231,1.531,232,2.928,233,2.323,234,1.738,235,2.592,236,2.592,237,2.098,238,5.052,239,2.191,240,2.592,241,4.068,242,2.928,243,3.382,244,4.2,245,4.568,246,4.068,247,2.769,248,3.382,249,4.068,250,4.068,251,5.636,252,3.382,253,2.93,254,2.928,255,1.672,256,2.434,257,1.387,258,0.959,259,2.928,260,4.068,261,2.928,262,2.434,263,2.928,264,4.068,265,2.928,266,5.052,267,2.928,268,2.928,269,2.434,270,2.928,271,2.928]],["title/components/ContactComponent.html",[0,0.051,44,0.533]],["body/components/ContactComponent.html",[0,0.078,1,0.383,2,0.844,3,0.238,4,0.206,5,0.617,6,1.054,7,0.617,8,0.617,9,0.206,11,0.564,12,1.499,13,1.358,15,1.576,17,0.923,19,0.487,22,1.887,24,0.238,33,0.035,34,0.238,35,0.145,36,0.468,37,0.923,38,0.844,39,0.425,40,1.227,41,0.617,42,0.782,43,0.617,44,0.762,45,0.617,46,0.383,47,0.617,48,0.425,49,0.617,50,0.425,51,0.468,52,0.617,53,0.425,54,0.617,55,0.383,56,0.617,57,0.425,58,0.617,59,0.425,60,0.617,61,0.383,62,0.617,63,0.383,64,0.617,65,0.425,66,0.515,67,0.617,68,0.425,69,0.617,70,0.425,71,0.515,72,0.617,73,0.564,74,0.383,75,0.564,76,0.617,77,0.018,78,0.018,130,0.961,155,0.7,157,1.372,162,1.437,168,0.961,173,1.227,174,1.054,182,3.549,191,1.576,195,1.576,197,0.307,198,0.736,200,0.77,202,2.552,204,0.674,209,1.01,212,0.617,213,0.865,214,0.564,215,0.674,218,1.746,219,0.923,222,0.77,223,1.92,224,1.92,225,2.306,230,0.77,231,1.101,233,1.92,247,1.576,257,0.923,258,0.736,272,1.87,273,4.028,274,3.363,275,3.27,276,4.028,277,4.028,278,3.43,279,3.219,280,2.249,281,3.409,282,2.136,283,3.363,284,4.47,285,2.971,286,1.824,287,2.249,288,2.143,289,2.422,290,2.422,291,2.796,292,2.143,293,2.249,294,3.363,295,2.143,296,2.422,297,3.219,298,1.567,299,1.313,300,2.249,301,4.547,302,2.352,303,2.59,304,3.716,305,2.848,306,2.438,307,2.249,308,4.785,309,3.716,310,2.249,311,4.47,312,2.249,313,2.249,314,1.16,315,2.249,316,2.249,317,3.363,318,3.363,319,3.363,320,2.249,321,3.363,322,1.735,323,3.363,324,2.249,325,2.249,326,2.249,327,2.249,328,2.76,329,1.92,330,3.363,331,0.674,332,2.249,333,2.468,334,2.822,335,1.87,336,3.94,337,5.47,338,1.433,339,1.433,340,1.16,341,2.249,342,2.59,343,2.249,344,2.249,345,2.078,346,2.468,347,2.078,348,1.735,349,2.567,350,2.249,351,2.468,352,3.199,353,2.306,354,2.352,355,1.87,356,1.735,357,1.16,358,1.16,359,2.306,360,2.249,361,2.3,362,3.616,363,2.249,364,1.735,365,1.433,366,1.87,367,1.87,368,3.363,369,1.87,370,1.054,371,2.249,372,2.249,373,2.249,374,3.219,375,1.62,376,1.62,377,1.433,378,2.249,379,1.16,380,1.16,381,1.284,382,2.249,383,1.62,384,2.249,385,2.249,386,2.143,387,2.249,388,2.249,389,1.92,390,1.92,391,1.576,392,1.62]],["title/injectables/ContactService.html",[281,1.993,393,1.336]],["body/injectables/ContactService.html",[3,0.394,4,0.34,9,0.34,14,2.124,19,0.637,24,0.394,31,3.903,32,2.37,33,0.035,34,0.394,35,0.34,42,0.652,77,0.026,78,0.026,130,2.04,155,0.994,157,1.323,158,1.31,159,3.042,173,1.527,182,3.751,197,0.508,198,1.726,200,1.093,204,1.581,209,0.995,211,1.864,212,1.31,213,0.807,214,1.198,215,1.432,219,1.31,222,1.093,230,1.093,234,2.617,255,2.124,257,1.31,258,1.218,281,3.544,285,3.361,295,3.042,297,3.438,298,1.218,299,1.021,301,3.969,393,2.04,394,2.37,395,3.092,396,5.986,397,5.562,398,3.092,399,4.774,400,4.782,401,3.969,402,3.969,403,4.774,404,3.719,405,4.239,406,4.893,407,4.774,408,3.969,409,4.624,410,3.751,411,3.438,412,4.774,413,2.37,414,1.918,415,3.719]],["title/components/DocumentationComponent.html",[0,0.051,46,0.533]],["body/components/DocumentationComponent.html",[0,0.091,1,0.704,2,1.28,3,0.437,4,0.378,5,1.134,7,1.134,8,1.134,9,0.378,11,1.036,12,1.613,13,1.469,17,1.4,19,0.499,24,0.437,33,0.034,34,0.437,35,0.266,36,0.86,37,1.4,38,1.28,39,0.78,40,1.586,41,1.134,42,0.755,43,1.134,44,0.704,45,1.134,46,0.985,47,1.134,48,0.78,49,1.134,50,0.78,51,0.86,52,1.134,53,0.78,54,1.134,55,0.704,56,1.134,57,0.78,58,1.134,59,0.78,60,1.134,61,0.704,62,1.134,63,0.704,64,1.134,65,0.78,66,0.945,67,1.134,68,0.78,69,1.134,70,0.78,71,0.945,72,1.134,73,1.036,74,0.704,75,1.036,76,1.134,77,0.027,78,0.027,183,3.25,416,3.434,417,5.1,418,2.631,419,5.1]],["title/components/ErrorsComponent.html",[0,0.051,48,0.59]],["body/components/ErrorsComponent.html",[0,0.095,1,0.489,2,1.006,3,0.303,4,0.262,5,0.787,6,1.343,7,0.787,8,0.787,9,0.262,11,0.719,12,1.551,13,1.408,15,1.878,17,1.1,19,0.484,22,1.343,24,0.303,28,0.939,29,1.343,30,1.343,33,0.035,34,0.303,35,0.185,36,0.597,37,1.1,38,1.006,39,0.541,40,1.374,41,0.787,42,0.631,43,0.787,44,0.489,45,0.787,46,0.489,47,0.787,48,0.945,49,0.787,50,0.541,51,0.597,52,0.787,53,0.541,54,0.787,55,0.489,56,0.787,57,0.541,58,0.787,59,0.541,60,0.787,61,0.489,62,0.787,63,0.489,64,0.787,65,0.541,66,0.656,67,0.787,68,0.541,69,0.787,70,0.541,71,0.656,72,0.787,73,0.719,74,0.489,75,0.719,76,0.787,77,0.022,78,0.022,155,0.835,157,1.322,162,2.394,168,1.225,191,1.878,197,0.547,200,0.917,209,0.945,213,0.766,222,0.917,230,0.656,231,0.939,234,1.975,239,2.345,278,3.264,288,2.945,289,3.329,298,1.312,299,1.1,306,2.786,328,2.384,329,1.637,331,0.86,333,2.815,334,2.949,338,1.827,340,1.479,342,1.479,345,2.068,346,2.068,347,2.384,348,1.479,351,2.384,352,1.827,353,1.479,354,2.625,356,1.479,357,2.068,358,2.384,359,2.068,364,1.479,370,2.166,374,2.064,375,2.064,376,2.064,377,1.827,379,1.479,380,1.479,381,1.637,383,2.064,391,1.878,420,2.383,421,2.887,422,4.622,423,4.008,424,3.329,425,4.622,426,5.005,427,2.887,428,3.794,429,2.289,430,2.996,431,2.866,432,2.384,433,2.866,434,3.332,435,3.332,436,4.161,437,3.931,438,3.605,439,3.332,440,2.554,441,2.866,442,3.332,443,4.622,444,2.866,445,2.639,446,2.554,447,2.383,448,1.479,449,2.383,450,2.383,451,2.383,452,2.383,453,2.064,454,2.887,455,4.008,456,1.637,457,1.479,458,1.637,459,2.068,460,1.637,461,3.332,462,2.866,463,1.637,464,2.383,465,1.827,466,2.064,467,2.383,468,1.637,469,2.289,470,3.332,471,2.383,472,2.887,473,2.383,474,2.064,475,1.479,476,2.383,477,2.064,478,2.064,479,2.866]],["title/components/GameOverComponent.html",[0,0.051,50,0.59]],["body/components/GameOverComponent.html",[0,0.098,1,0.564,2,1.109,3,0.35,4,0.303,5,0.908,7,0.908,8,0.908,9,0.303,11,0.83,12,1.578,13,1.434,17,1.214,19,0.4,24,0.35,33,0.035,34,0.35,35,0.213,36,0.689,37,1.214,38,1.109,39,0.625,40,1.459,41,0.908,42,0.68,43,0.908,44,0.564,45,0.908,46,0.564,47,0.908,48,0.625,49,0.908,50,1.004,51,1.287,52,0.908,53,0.625,54,0.908,55,0.564,56,0.908,57,0.625,58,0.908,59,0.625,60,0.908,61,0.564,62,0.908,63,0.564,64,0.908,65,0.625,66,1.371,67,0.908,68,0.625,69,0.908,70,0.625,71,0.757,72,0.908,73,0.83,74,0.564,75,0.83,76,0.908,77,0.024,78,0.024,112,3.828,162,2.486,197,0.452,200,1.012,209,0.94,213,0.677,222,1.012,230,0.757,231,1.083,234,2.128,239,2.491,288,3.173,289,3.587,331,0.992,370,2.333,418,2.281,427,3.184,429,2.524,430,3.089,432,2.569,434,3.676,435,3.676,436,4.419,437,4.105,438,3.828,439,3.676,440,2.817,442,3.676,445,2.843,446,2.817,447,2.75,448,1.707,449,2.75,450,2.75,451,2.75,452,2.75,453,2.383,480,4.419,481,2.75,482,4.916,483,4.421,484,4.421,485,5.315,486,2.281,487,3.308,488,3.308,489,5.315,490,3.308,491,3.308,492,4.421,493,4.421]],["title/components/LoginComponent.html",[0,0.051,55,0.533]],["body/components/LoginComponent.html",[0,0.049,1,0.245,2,0.592,3,0.152,4,0.131,5,0.394,6,0.672,7,0.394,8,0.394,9,0.131,11,0.36,12,1.377,13,1.242,15,1.106,17,0.648,19,0.501,23,1.033,24,0.152,28,1.755,29,0.672,30,0.672,33,0.035,34,0.152,35,0.194,36,0.299,37,0.648,38,0.592,39,0.271,40,0.957,41,0.394,42,0.476,43,0.394,44,0.245,45,0.394,46,0.245,47,0.394,48,0.271,49,0.394,50,0.271,51,0.626,52,0.394,53,0.271,54,0.394,55,0.707,56,0.394,57,0.271,58,0.394,59,0.271,60,0.394,61,0.245,62,0.394,63,0.245,64,0.394,65,0.271,66,0.328,67,0.394,68,0.271,69,0.394,70,0.271,71,0.328,72,0.394,73,0.36,74,0.245,75,0.36,76,0.394,77,0.013,78,0.013,110,0.819,141,0.672,149,1.504,154,2.367,155,0.492,157,1.148,158,0.826,162,1.009,168,1.009,170,1.009,173,0.957,174,1.41,175,2.641,178,2.794,179,2.641,191,1.942,197,0.196,198,1.262,200,0.54,204,0.902,207,2.858,209,0.922,211,0.922,212,0.394,213,0.671,214,0.36,215,0.43,218,1.361,219,0.957,222,1.36,230,0.882,231,1.262,237,2.138,247,2.145,253,2.167,255,0.819,257,0.826,258,0.47,275,1.718,278,2.502,279,2.985,282,2.064,285,2.971,286,1.913,290,3.297,291,3.805,292,3.562,295,2.641,296,2.985,298,0.985,299,1.058,302,1.634,306,2.222,314,0.74,322,1.218,328,2.138,331,1.243,333,2.446,334,2.907,336,1.033,338,1.504,339,0.914,340,2.361,342,2.581,345,1.798,346,1.552,347,2.361,348,1.988,349,1.504,351,1.218,353,1.552,354,0.672,356,2.361,357,1.988,358,2.26,359,1.798,361,1.718,362,1.7,364,1.218,370,1.806,379,1.798,380,1.798,381,0.819,386,0.914,389,1.348,390,1.348,391,1.942,392,1.033,410,0.914,414,1.552,421,2.985,428,3.748,448,2.138,454,2.167,456,1.348,457,1.218,458,1.348,459,1.988,460,1.348,463,1.348,464,1.193,468,1.718,469,1.991,472,1.033,474,2.167,475,1.218,477,1.033,494,1.193,495,3.008,496,2.361,497,4.577,498,3.854,499,4.145,500,4.145,501,4.145,502,4.145,503,1.033,504,2.361,505,1.963,506,2.361,507,1.798,508,2.361,509,1.218,510,1.434,511,2.511,512,1.963,513,2.361,514,2.361,515,1.963,516,1.434,517,4.395,518,3.517,519,3.446,520,3.446,521,2.898,522,4.456,523,2.985,524,3.807,525,3.446,526,3.446,527,3.446,528,2.641,529,3.297,530,2.917,531,2.138,532,3.446,533,1.434,534,4.395,535,2.898,536,1.434,537,2.361,538,3.008,539,1.434,540,2.361,541,2.361,542,3.517,543,3.486,544,2.614,545,1.434,546,2.511,547,1.963,548,3.642,549,1.434,550,1.434,551,1.963,552,1.504,553,1.504,554,2.167,555,1.434,556,1.033,557,1.434,558,1.552,559,2.501,560,2.167,561,3.008,562,3.008,563,2.167,564,1.434,565,2.501,566,3.008,567,3.008,568,3.008,569,3.008,570,3.854,571,3.008,572,3.008,573,2.167,574,3.008,575,3.008,576,3.008,577,2.167,578,2.167,579,2.501,580,3.008,581,1.193,582,1.434,583,1.434,584,1.963,585,2.361,586,1.434,587,2.361,588,1.434,589,2.361,590,1.963,591,1.193,592,1.7,593,0.914,594,1.193,595,1.193,596,2.775,597,1.033,598,1.033,599,1.193,600,1.963,601,2.167,602,1.193,603,1.193,604,2.501,605,1.434,606,2.501,607,1.963,608,1.033,609,1.193,610,3.416,611,1.193,612,1.193,613,1.193,614,3.204,615,2.501,616,2.361,617,1.193,618,1.434,619,2.361,620,2.361,621,3.854,622,1.434,623,3.008,624,2.501,625,1.963,626,3.486,627,1.434,628,1.434,629,1.434,630,1.434,631,1.434,632,1.434,633,1.033,634,1.434,635,1.434,636,1.434]],["title/guards/LoginGuardian.html",[144,1.785,145,1.993]],["body/guards/LoginGuardian.html",[3,0.369,4,0.319,9,0.319,14,1.993,19,0.618,24,0.369,33,0.035,34,0.369,35,0.33,42,0.626,77,0.025,78,0.025,141,1.636,142,4.902,144,2.616,145,3.46,149,3.968,169,4.974,170,1.957,173,1.49,178,2.147,195,1.636,197,0.477,198,1.143,200,1.048,204,1.534,207,3.587,209,0.865,211,1.789,212,1.257,213,0.701,214,1.149,215,1.374,218,1.789,219,1.257,222,1.243,230,1.324,245,4.513,247,2.147,257,1.49,258,1.143,282,2.363,286,1.959,302,2.642,303,2.638,305,2.919,314,1.801,322,2.638,393,1.957,413,2.224,414,2.363,507,2.363,528,2.919,551,3.808,552,3.46,637,3.491,638,4.251,639,2.902,640,3.491,641,3.491,642,5.114,643,3.491,644,5.638,645,4.167,646,5.638,647,3.491,648,3.299,649,5.786,650,4.581,651,3.808,652,4.581,653,4.581,654,5.429,655,3.491,656,3.491,657,3.491]],["title/components/NavbarComponent.html",[0,0.051,57,0.59]],["body/components/NavbarComponent.html",[0,0.082,1,0.564,2,1.109,3,0.35,4,0.303,5,0.908,7,0.908,8,0.908,9,0.303,11,0.83,12,1.578,13,1.434,17,1.214,19,0.602,24,0.35,33,0.035,34,0.35,35,0.321,36,0.689,37,1.214,38,1.109,39,0.625,40,1.459,41,0.908,42,0.726,43,0.908,44,0.564,45,0.908,46,0.564,47,0.908,48,0.625,49,0.908,50,0.625,51,0.689,52,0.908,53,0.625,54,0.908,55,0.564,56,0.908,57,1.076,58,0.908,59,0.625,60,0.908,61,0.564,62,0.908,63,0.564,64,0.908,65,0.625,66,0.757,67,0.908,68,0.625,69,0.908,70,0.625,71,0.757,72,0.908,73,0.83,74,0.564,75,0.83,76,0.908,77,0.024,78,0.024,95,2.281,141,1.55,154,2.524,162,1.889,170,1.889,173,1.459,175,2.817,178,2.072,180,3.184,182,2.817,183,2.817,197,0.452,198,1.083,200,1.012,204,1.493,207,3.508,209,0.835,211,1.727,212,0.908,213,0.506,214,0.83,215,0.992,218,1.727,219,1.214,222,1.217,230,0.757,231,1.448,237,2.281,247,2.072,257,1.214,258,1.083,282,2.414,286,1.74,290,3.184,306,2.072,314,1.707,418,2.281,421,3.184,507,2.281,518,3.184,519,3.676,520,3.676,528,2.817,529,3.184,530,2.817,553,2.817,558,1.707,559,2.75,560,2.383,577,2.383,578,2.383,658,2.75,659,4.421,660,4.421,661,4.421,662,5.107,663,3.308,664,3.308,665,3.308,666,3.184,667,4.421,668,3.308,669,2.75]],["title/components/PauseComponent.html",[0,0.051,59,0.59]],["body/components/PauseComponent.html",[0,0.09,1,0.543,2,1.081,3,0.337,4,0.291,5,0.874,7,0.874,8,0.874,9,0.291,11,0.799,12,1.571,13,1.427,17,1.183,19,0.385,21,2.647,24,0.337,33,0.035,34,0.337,35,0.315,36,0.663,37,1.183,38,1.081,39,0.601,40,1.437,41,0.874,42,0.715,43,0.874,44,0.543,45,0.874,46,0.543,47,0.874,48,0.601,49,0.874,50,0.601,51,1.221,52,0.874,53,0.601,54,0.874,55,0.543,56,0.874,57,0.601,58,0.874,59,1.064,60,0.874,61,0.543,62,0.874,63,0.543,64,0.874,65,0.601,66,0.729,67,0.874,68,0.601,69,0.874,70,0.601,71,0.729,72,0.874,73,0.799,74,0.543,75,0.799,76,0.874,77,0.023,78,0.023,153,2.562,158,1.183,197,0.435,200,0.986,209,0.988,212,0.874,213,0.66,214,0.799,219,1.183,222,1.319,230,0.986,231,1.411,237,2.7,239,2.943,240,3.113,257,0.874,296,2.294,305,2.746,331,0.955,418,2.223,429,2.461,430,2.908,432,2.7,445,2.789,446,2.029,453,2.294,454,3.104,670,2.647,671,3.769,672,4.309,673,4.309,674,5.637,675,4.791,676,4.309,677,4.309,678,3.185,679,4.309,680,3.185,681,3.185,682,5.468,683,4.309,684,5.637,685,4.309,686,3.185,687,4.885,688,3.185,689,3.113,690,4.885,691,3.185,692,3.185,693,1.818,694,3.185,695,4.061,696,3.185,697,3.185,698,3.185,699,3.583,700,3.583,701,4.309]],["title/components/RegisterComponent.html",[0,0.051,61,0.533]],["body/components/RegisterComponent.html",[0,0.062,1,0.347,2,0.783,3,0.216,4,0.186,5,0.56,6,0.955,7,0.56,8,0.56,9,0.186,11,0.511,12,1.475,13,1.336,15,1.463,17,0.857,19,0.514,23,1.468,24,0.216,33,0.035,34,0.216,35,0.245,36,0.425,37,0.857,38,0.783,39,0.385,40,1.167,41,0.56,42,0.626,43,0.56,44,0.347,45,0.56,46,0.347,47,0.56,48,0.385,49,0.56,50,0.385,51,0.425,52,0.56,53,0.385,54,0.56,55,0.347,56,0.56,57,0.385,58,0.56,59,0.385,60,0.56,61,0.824,62,0.56,63,0.347,64,0.56,65,0.385,66,0.467,67,0.56,68,0.385,69,0.56,70,0.385,71,0.467,72,0.56,73,0.511,74,0.347,75,0.511,76,0.56,77,0.017,78,0.017,110,1.164,130,0.871,141,0.955,153,0.955,155,0.65,157,1.213,158,0.857,162,1.334,166,4.019,168,1.621,170,1.334,173,1.167,174,1.463,178,1.992,179,3.615,197,0.278,198,0.668,200,0.715,204,1.138,207,3.239,209,0.913,211,1.219,212,0.857,213,0.651,214,0.511,215,0.936,218,1.219,219,0.857,222,1.188,225,1.61,230,0.973,231,1.022,237,1.61,240,1.989,247,1.992,253,2.249,257,1.041,258,0.668,275,2.964,278,2.166,279,3.482,282,2.188,285,3.305,286,1.022,298,1.022,299,0.857,302,1.463,306,2.266,314,1.052,322,1.052,328,2.494,329,1.164,331,1.275,333,2.193,334,2.926,338,1.989,339,1.299,340,2.364,342,2.494,345,1.957,346,1.052,347,2.494,348,1.957,349,1.299,351,1.61,353,1.052,354,0.955,356,1.957,357,1.957,358,2.364,359,2.193,361,1.783,362,1.468,364,1.61,370,0.955,377,1.299,379,1.61,380,1.61,389,1.164,390,1.164,391,1.778,392,2.249,411,2.249,414,1.052,428,3.833,448,2.193,456,1.783,457,1.61,458,1.783,459,1.957,460,1.164,463,1.164,468,1.164,469,2.166,474,3.062,475,1.61,503,1.468,505,2.595,507,1.61,511,2.249,512,4.515,518,3.062,528,1.989,529,2.249,530,2.709,531,1.61,532,2.595,542,4.287,544,2.964,546,2.249,547,2.595,548,4.424,553,1.989,554,3.062,556,3.062,563,2.249,565,1.695,577,1.468,578,1.468,579,1.695,591,1.695,592,2.249,593,1.299,594,2.595,595,1.695,596,3.301,597,1.468,598,1.468,599,1.695,600,2.595,601,1.468,602,1.695,603,1.695,604,1.695,610,1.468,611,1.695,612,2.595,613,1.695,614,1.695,615,2.595,624,2.595,625,1.695,648,2.249,669,2.595,693,2.166,702,1.695,703,3.122,704,3.122,705,3.794,706,3.122,707,5.032,708,4.583,709,5.191,710,3.122,711,4.835,712,2.039,713,4.252,714,2.039,715,3.122,716,3.535,717,2.249,718,2.039,719,3.794,720,2.039,721,3.122,722,3.122,723,2.595,724,3.794,725,2.039,726,3.794,727,2.039,728,3.122,729,2.039,730,2.039,731,3.122,732,4.252,733,2.039,734,3.122,735,2.039,736,2.039,737,2.039,738,2.039,739,2.039,740,3.122,741,2.249,742,2.039,743,2.039,744,4.252,745,3.122,746,3.122,747,3.122,748,2.039,749,2.595,750,2.039,751,2.039,752,2.039,753,2.039,754,2.039,755,2.039,756,1.299,757,2.039,758,2.039]],["title/components/ScoreItemComponent.html",[0,0.051,65,0.59]],["body/components/ScoreItemComponent.html",[0,0.091,1,0.636,2,1.2,3,0.395,4,0.341,5,1.024,7,1.024,8,1.024,9,0.341,11,0.936,12,1.598,13,1.453,17,1.313,19,0.451,24,0.395,33,0.035,34,0.395,35,0.241,36,0.777,37,1.313,38,1.2,39,0.704,40,1.528,41,1.024,42,0.76,43,1.024,44,0.636,45,1.024,46,0.636,47,1.024,48,0.704,49,1.024,50,0.704,51,0.777,52,1.024,53,0.704,54,1.024,55,0.636,56,1.024,57,0.704,58,1.024,59,0.704,60,1.024,61,0.636,62,1.024,63,0.636,64,1.024,65,1.051,66,1.431,67,1.024,68,0.704,69,1.024,70,0.704,71,0.854,72,1.024,73,0.936,74,0.636,75,0.936,76,1.024,77,0.026,78,0.026,128,3.444,153,1.747,157,0.936,158,1.313,197,0.509,209,0.704,213,0.732,299,1.024,370,2.609,418,2.467,427,3.444,437,2.686,446,2.377,448,3.038,486,1.924,759,3.975,760,3.1,761,4.782,762,4.782,763,4.782,764,3.1,765,3.729,766,3.729,767,3.729,768,2.686,769,3.975,770,3.975,771,4.388,772,4.782,773,4.782]],["title/components/ScoreboardsComponent.html",[0,0.051,63,0.533]],["body/components/ScoreboardsComponent.html",[0,0.085,1,0.467,2,0.974,3,0.29,4,0.251,5,0.752,7,0.752,8,0.752,9,0.251,11,0.687,12,1.542,13,1.4,17,1.066,19,0.545,22,2.113,24,0.29,28,1.965,29,1.284,30,1.284,33,0.035,34,0.29,35,0.291,36,0.57,37,1.066,38,0.974,39,0.851,40,1.347,41,0.752,42,0.735,43,0.752,44,0.467,45,0.752,46,0.467,47,0.752,48,0.517,49,0.752,50,0.517,51,0.939,52,0.752,53,0.517,54,0.752,55,0.467,56,0.752,57,0.517,58,0.752,59,0.517,60,0.752,61,0.467,62,0.752,63,0.917,64,0.752,65,0.517,66,1.123,67,0.752,68,0.517,69,0.752,70,0.517,71,0.627,72,0.752,73,0.687,74,0.467,75,0.687,76,0.752,77,0.021,78,0.021,148,4.698,151,3.228,153,1.819,155,1.022,157,0.974,158,1.347,170,1.659,173,1.347,180,2.796,195,1.819,197,0.374,198,0.897,200,0.889,202,3.071,204,1.353,209,0.978,211,1.516,212,0.752,213,0.69,214,0.687,215,0.822,218,1.916,219,1.066,222,1.293,223,2.217,224,2.217,225,2.003,230,0.889,231,1.606,233,2.217,234,2.096,235,2.474,236,2.474,237,2.003,244,3.228,257,1.066,258,0.897,269,3.228,282,2.276,286,1.606,298,1.271,299,1.066,302,1.819,303,2.672,314,1.413,322,2.326,410,2.474,418,2.003,448,2.531,486,2.672,503,1.973,507,2.531,509,2.003,522,3.228,531,2.531,546,2.796,552,2.474,563,2.796,693,1.564,764,2.277,769,3.749,770,4.079,771,4.698,774,2.277,775,3.883,776,3.883,777,5.748,778,5.056,779,5.379,780,3.883,781,2.74,782,4.079,783,3.883,784,4.906,785,2.74,786,3.883,787,3.883,788,3.228,789,3.883,790,4.906,791,2.74,792,3.883,793,3.883,794,2.74,795,2.74,796,2.74,797,2.74,798,2.74,799,2.74,800,2.74,801,2.74,802,2.74]],["title/components/SettingsComponent.html",[0,0.051,68,0.59]],["body/components/SettingsComponent.html",[0,0.058,1,0.313,2,0.722,3,0.194,4,0.168,5,0.504,6,0.861,7,0.504,8,0.504,9,0.168,11,0.461,12,1.448,13,1.31,15,1.349,17,0.79,19,0.429,22,1.664,24,0.194,28,1.815,29,0.861,30,0.861,33,0.035,34,0.194,35,0.229,36,0.382,37,0.79,38,0.722,39,0.671,40,1.104,41,0.504,42,0.549,43,0.504,44,0.313,45,0.504,46,0.313,47,0.504,48,0.347,49,0.504,50,0.347,51,1.099,52,0.504,53,0.347,54,0.504,55,0.313,56,0.504,57,0.347,58,0.504,59,0.347,60,0.504,61,0.313,62,0.504,63,0.313,64,0.504,65,0.347,66,0.42,67,0.504,68,0.875,69,0.504,70,0.347,71,0.42,72,0.79,73,0.461,74,0.313,75,0.461,76,0.504,77,0.015,78,0.015,110,1.049,155,0.965,157,1.009,158,1.272,162,0.785,168,1.23,173,1.199,174,2.27,195,1.349,197,0.393,200,0.659,202,2.646,204,1.065,209,0.974,211,1.125,212,0.504,213,0.616,214,0.461,215,0.551,218,1.387,219,0.79,222,1.109,223,1.644,224,1.644,225,2.074,230,0.813,231,1.163,233,1.644,234,1.23,235,1.835,236,1.835,239,1.349,257,0.504,285,2.864,298,1.689,299,1.641,303,1.485,328,2.074,329,1.049,331,1.613,333,2.253,334,3.055,339,1.17,340,2.074,342,2.39,345,1.832,346,2.253,347,2.499,348,1.832,349,1.17,351,1.832,352,1.17,353,2.074,354,2.52,356,0.947,357,1.485,358,1.832,359,1.485,361,2.028,364,0.947,367,1.527,370,0.861,374,1.323,375,2.896,376,1.323,377,1.17,379,0.947,380,0.947,381,2.028,383,1.323,386,1.17,389,1.049,390,1.049,391,1.664,424,2.074,429,1.644,430,2.587,432,2.074,440,1.17,445,2.028,456,1.049,457,2.774,458,1.049,459,1.485,460,1.049,461,2.394,463,1.049,465,1.17,466,1.323,468,1.049,469,2.028,470,1.527,471,1.527,475,1.832,476,2.394,477,2.896,478,2.896,486,2.074,507,1.832,509,2.925,531,2.722,544,1.644,554,3.146,556,3.337,558,1.485,592,1.323,593,1.17,596,2.074,598,1.323,601,1.323,608,2.558,609,1.527,633,1.323,648,2.074,689,1.835,716,2.394,717,2.896,723,1.527,756,1.17,803,1.527,804,4.923,805,3.552,806,2.88,807,4.844,808,4.844,809,4.368,810,4.021,811,4.634,812,1.527,813,2.88,814,1.837,815,1.837,816,1.837,817,4.021,818,4.021,819,4.896,820,4.169,821,4.386,822,4.634,823,3.852,824,4.021,825,2.88,826,2.88,827,1.837,828,2.394,829,2.88,830,2.88,831,2.88,832,2.88,833,2.88,834,2.88,835,2.394,836,4.021,837,4.021,838,4.021,839,1.837,840,4.634,841,3.343,842,5.015,843,5.276,844,1.837,845,4.368,846,1.837,847,1.837,848,2.88,849,2.88,850,1.837,851,2.88,852,2.88,853,1.837,854,1.837,855,1.837,856,2.88,857,1.837,858,1.837,859,3.552,860,1.837,861,4.368,862,2.88,863,1.837,864,3.552,865,3.552,866,2.88,867,2.88,868,3.552,869,1.837,870,2.88,871,1.837,872,2.88,873,4.021,874,4.021,875,1.527,876,1.837,877,3.852,878,1.837,879,1.837,880,2.88,881,1.527,882,1.837,883,1.837,884,1.837,885,1.837,886,3.552,887,1.837,888,1.837,889,1.837,890,2.953,891,1.837,892,2.88,893,1.837,894,1.837,895,1.837,896,1.837,897,2.88,898,1.837]],["title/injectables/SnakeCommunicationsService.html",[28,1.024,393,1.336]],["body/injectables/SnakeCommunicationsService.html",[3,0.145,4,0.126,9,0.126,14,0.784,19,0.49,24,0.145,25,1.64,26,2.586,27,0.989,28,1.111,31,2.739,32,0.875,33,0.035,34,0.145,35,0.188,42,0.554,51,1.234,66,1.279,71,0.861,77,0.012,78,0.012,130,1.921,155,0.474,157,1.128,158,0.625,174,2.107,191,2.744,197,0.187,198,1.736,200,0.521,204,0.875,209,1.046,212,1.114,213,0.874,214,1.018,215,1.217,219,0.625,222,1.229,230,1.361,234,1.45,239,2.254,240,2.398,243,4.773,255,0.784,257,1.18,258,0.45,262,1.141,278,2.568,286,1.407,292,1.451,295,3.732,297,4.135,298,1.232,299,1.033,305,0.875,306,2.516,309,1.893,331,1.48,365,3.378,391,1.59,393,0.973,394,0.875,398,1.141,400,3.128,401,1.893,402,1.893,405,3.763,406,4.344,408,4.193,409,4.869,410,4.005,413,0.875,414,2.545,424,4.367,430,0.708,432,2.093,438,2.922,440,0.875,457,1.751,486,2.944,509,2.217,524,1.64,525,1.141,526,1.893,527,1.893,530,1.451,544,1.3,553,1.451,573,1.64,584,1.141,645,3.095,666,2.444,671,1.64,675,3.373,689,3.889,693,1.938,768,1.64,778,3.373,782,1.893,819,4.102,820,2.821,821,3.573,828,2.821,899,4.644,900,1.141,901,3.128,902,2.917,903,5.37,904,3.394,905,3.394,906,3.394,907,3.394,908,3.394,909,4.057,910,3.394,911,3.394,912,2.917,913,3.394,914,2.277,915,2.277,916,2.277,917,1.373,918,2.277,919,2.277,920,4.057,921,5.225,922,5.225,923,2.277,924,2.277,925,5.225,926,1.373,927,1.373,928,1.373,929,1.373,930,1.373,931,2.277,932,1.373,933,2.277,934,2.277,935,2.277,936,1.373,937,2.277,938,2.277,939,1.373,940,2.277,941,2.277,942,1.373,943,2.277,944,2.277,945,1.373,946,2.277,947,4.057,948,5.14,949,5.741,950,2.277,951,3.373,952,2.277,953,2.821,954,3.128,955,1.893,956,2.425,957,2.277,958,1.373,959,5.881,960,1.373,961,2.917,962,1.373,963,1.373,964,1.373,965,1.373,966,1.373,967,1.373,968,1.373,969,1.373,970,1.373,971,1.373,972,1.141,973,4.298,974,1.373,975,2.917,976,1.373,977,1.373,978,2.917,979,1.373,980,1.373,981,3.394,982,1.373,983,1.373,984,1.373,985,1.373,986,1.141,987,1.373,988,1.373,989,1.373,990,2.277,991,1.373,992,1.373,993,1.373,994,1.373,995,1.373,996,2.917,997,1.373,998,1.373,999,1.373,1000,1.373,1001,1.373,1002,1.373,1003,1.373,1004,1.373,1005,1.373,1006,1.373,1007,1.373,1008,1.373,1009,1.373,1010,4.81,1011,3.394,1012,1.373,1013,1.373,1014,1.373,1015,1.373,1016,1.373,1017,1.373,1018,1.373,1019,1.373]],["title/components/StartingMenuComponent.html",[0,0.051,70,0.59]],["body/components/StartingMenuComponent.html",[0,0.066,1,0.379,2,0.837,3,0.235,4,0.204,5,0.611,6,1.043,7,0.611,8,0.611,9,0.204,11,0.558,12,1.496,13,1.356,15,1.563,17,0.916,19,0.484,22,1.875,24,0.235,26,1.418,27,1.603,28,1.819,29,1.043,30,1.043,33,0.035,34,0.235,35,0.143,36,0.463,37,0.916,38,0.837,39,0.756,40,1.22,41,0.611,42,0.607,43,0.611,44,0.379,45,0.611,46,0.379,47,0.611,48,0.42,49,0.611,50,0.42,51,0.926,52,0.611,53,0.42,54,0.611,55,0.379,56,0.611,57,0.42,58,0.611,59,0.42,60,0.611,61,0.379,62,0.611,63,0.379,64,0.611,65,0.42,66,0.509,67,0.611,68,0.42,69,0.611,70,0.944,71,1.221,72,1.525,73,0.558,74,0.379,75,0.558,76,0.611,77,0.018,78,0.018,130,0.951,133,3.928,155,0.926,168,1.71,173,0.916,174,1.043,195,1.563,197,0.456,198,1.31,200,0.764,202,2.539,204,1.2,209,1.007,212,0.611,213,0.816,214,0.558,215,0.667,219,0.916,222,1.018,223,1.905,224,1.905,225,1.721,229,1.85,230,0.916,231,1.31,233,1.905,234,1.425,235,2.126,236,2.126,239,2.733,252,3.327,257,0.611,258,0.729,288,2.126,298,0.729,299,0.611,302,2.083,303,1.721,304,3.696,306,2.083,322,2.457,328,2.579,329,1.27,331,1,333,2.064,334,2.579,335,1.85,336,1.603,340,1.148,342,2.579,345,1.721,346,1.148,347,2.293,348,1.148,351,1.721,352,2.55,353,2.457,354,2.499,355,1.85,356,2.293,357,2.293,358,2.457,359,2.293,361,2.285,364,1.721,365,1.418,366,1.85,369,1.85,379,1.148,380,1.721,381,1.27,386,2.833,389,1.27,390,1.27,391,1.875,429,1.905,430,1.721,432,2.675,445,2.285,456,1.905,457,1.721,458,1.27,459,1.721,460,1.27,463,1.905,465,1.418,466,1.603,467,1.85,468,1.27,469,2.539,472,1.603,473,1.85,475,1.721,478,1.603,509,1.721,558,2.064,593,1.418,597,1.603,608,1.603,610,1.603,617,3.327,633,1.603,671,2.403,689,2.833,695,1.85,700,3.327,741,2.403,756,2.126,804,4.157,812,1.85,841,1.85,875,1.85,877,3.327,890,1.85,901,2.773,951,4.311,953,3.696,986,1.85,1020,4.534,1021,1.85,1022,4.002,1023,3.336,1024,4.002,1025,4.002,1026,4.446,1027,4.446,1028,4.763,1029,4.763,1030,3.336,1031,3.336,1032,2.225,1033,4.446,1034,2.225,1035,2.225,1036,4.446,1037,3.336,1038,3.336,1039,2.225,1040,2.225,1041,2.773,1042,4.446,1043,2.225,1044,3.336,1045,2.225,1046,3.336,1047,3.336,1048,2.225,1049,4.002,1050,2.225,1051,2.225,1052,2.225,1053,2.225,1054,3.336,1055,3.336,1056,4.763,1057,3.336,1058,3.336,1059,3.336,1060,3.336,1061,3.336,1062,3.336,1063,3.336,1064,3.336,1065,2.225,1066,2.225,1067,2.225,1068,3.336,1069,2.225,1070,2.225,1071,2.225,1072,2.225,1073,2.225,1074,2.225,1075,2.225,1076,3.336,1077,4.446,1078,2.225,1079,2.225,1080,3.336,1081,2.225,1082,2.225]],["title/classes/User.html",[35,0.202,286,1.024]],["body/classes/User.html",[3,0.448,4,0.387,9,0.387,33,0.035,34,0.448,35,0.273,42,0.707,66,1.368,77,0.028,78,0.028,155,1.078,157,1.526,168,2.212,197,0.578,209,1.1,213,0.892,214,1.56,248,3.519,275,3.413,286,2.063,486,2.671,523,4.478,531,3.207,1083,3.519,1084,5.593,1085,5.593,1086,4.233,1087,4.233,1088,4.233,1089,4.233,1090,5.177,1091,4.304]],["title/injectables/UserService.html",[282,1.221,393,1.336]],["body/injectables/UserService.html",[3,0.279,4,0.241,9,0.241,14,1.504,19,0.533,24,0.279,33,0.035,34,0.279,35,0.285,42,0.603,77,0.02,78,0.02,95,2.486,120,1.897,155,0.786,157,1.28,158,1.036,170,1.613,173,1.211,178,2.258,179,3.071,197,0.36,198,1.445,200,0.864,204,1.323,209,1.056,211,1.474,212,1.211,213,0.738,214,1.107,215,0.79,218,1.882,222,1.352,230,1.352,257,1.323,258,0.862,275,3.3,282,1.882,286,2.072,292,3.97,298,0.862,299,0.723,331,1.445,393,1.613,394,1.678,413,1.678,414,2.937,517,3.138,521,4.414,523,2.719,531,2.739,534,3.138,535,4.414,542,4.213,544,3.031,573,3.178,651,4.414,662,4.414,666,4.213,768,3.178,954,5.026,955,4.804,1092,2.189,1093,2.634,1094,5.849,1095,4.413,1096,5.593,1097,3.775,1098,2.719,1099,5.056,1100,4.956,1101,2.634,1102,2.634,1103,2.634,1104,4.819,1105,5.593,1106,2.634,1107,2.634,1108,2.634,1109,3.775,1110,4.819,1111,2.634,1112,2.634,1113,3.775,1114,2.634,1115,2.634,1116,2.634,1117,2.634,1118,2.634,1119,2.634,1120,2.189,1121,2.634,1122,2.634,1123,2.634,1124,2.634,1125,2.634,1126,2.634,1127,2.634,1128,4.413,1129,4.819,1130,4.819,1131,4.413,1132,3.775,1133,2.634,1134,2.634,1135,2.634,1136,2.634]],["title/coverage.html",[1137,3.538]],["body/coverage.html",[0,0.104,1,0.681,9,0.366,10,3.323,28,1.309,33,0.035,35,0.258,39,0.755,44,0.681,46,0.681,48,0.755,50,0.755,53,0.755,55,0.681,57,0.755,59,0.755,61,0.681,63,0.681,65,0.755,68,0.755,70,0.755,74,0.681,77,0.027,78,0.027,112,2.879,121,2.879,128,2.879,133,2.879,144,2.282,145,2.547,183,2.547,193,3.323,194,3.323,213,0.612,272,3.323,281,2.547,282,1.561,286,1.309,331,1.199,354,2.554,393,2.329,395,3.323,416,3.323,420,3.323,459,2.062,480,3.323,481,3.323,494,3.323,607,3.323,638,3.323,639,3.323,658,3.323,670,3.323,702,3.323,759,3.323,760,3.323,774,3.323,803,3.323,835,3.323,881,3.323,899,3.323,900,3.323,1020,3.323,1021,3.323,1083,3.323,1091,3.323,1092,3.323,1137,3.323,1138,3.997,1139,4.997,1140,4.997,1141,4.997,1142,3.997,1143,3.997,1144,3.997,1145,3.997,1146,3.997,1147,3.997,1148,3.997,1149,3.997,1150,4.997,1151,4.997,1152,3.997,1153,5.451,1154,4.997,1155,3.997,1156,3.997,1157,3.997,1158,3.997,1159,4.997,1160,4.997,1161,3.323,1162,3.997,1163,3.997,1164,3.997,1165,3.997,1166,3.997,1167,3.997,1168,3.997]],["title/dependencies.html",[82,2.146,1169,1.885]],["body/dependencies.html",[24,0.48,33,0.035,77,0.029,78,0.029,82,2.59,101,4.15,102,3.888,110,2.59,141,2.126,173,1.245,191,2.126,255,2.59,256,3.771,1098,3.267,1100,4.487,1120,3.771,1170,4.536,1171,6.333,1172,4.536,1173,4.536,1174,4.536,1175,4.536,1176,4.536,1177,3.771,1178,4.536,1179,4.536,1180,4.536,1181,4.536,1182,4.536,1183,4.536,1184,4.536,1185,4.536,1186,4.536,1187,4.536,1188,4.536,1189,4.536]],["title/miscellaneous/enumerations.html",[1190,1.668,1191,3.124]],["body/miscellaneous/enumerations.html",[25,3.945,26,3.49,33,0.029,51,1.283,77,0.027,78,0.027,130,1.726,154,3.127,158,1.771,163,4.553,197,0.552,299,1.109,365,3.885,465,3.49,475,2.594,482,3.358,509,2.957,558,2.083,590,4.553,606,4.553,645,4.247,699,4.553,717,3.945,756,3.49,1041,3.358,1190,2.574,1191,3.358,1192,5.477,1193,4.039,1194,5.477,1195,5.477,1196,4.039,1197,4.039,1198,6.162,1199,5.732,1200,5.029,1201,4.039,1202,5.029,1203,5.029,1204,4.039,1205,5.029,1206,4.039,1207,5.029,1208,4.039,1209,4.039,1210,5.477,1211,4.039,1212,4.039,1213,4.553,1214,5.029,1215,5.029,1216,4.039]],["title/index.html",[197,0.357,956,2.175,1217,2.617]],["body/index.html",[0,0.092,4,0.39,33,0.028,42,0.582,77,0.028,78,0.028,95,2.197,191,2.435,195,1.996,219,1.539,247,1.996,331,1.278,511,3.068,515,3.541,581,3.541,741,4.039,749,3.541,972,4.854,1169,3.068,1177,3.541,1213,4.32,1218,4.26,1219,4.32,1220,4.26,1221,5.608,1222,3.541,1223,4.26,1224,5.987,1225,6.166,1226,4.26,1227,4.26,1228,4.26,1229,3.541,1230,4.26,1231,4.26,1232,4.26,1233,4.26,1234,4.26,1235,5.608,1236,4.26,1237,4.26,1238,4.26,1239,4.26,1240,4.26,1241,5.197,1242,5.839,1243,4.26,1244,5.197,1245,5.197,1246,4.26,1247,6.09,1248,4.26,1249,4.26,1250,4.26,1251,5.197,1252,4.26,1253,4.26,1254,4.26,1255,4.26,1256,4.26,1257,4.26,1258,5.608,1259,4.26,1260,3.068,1261,4.26]],["title/modules.html",[81,2.196]],["body/modules.html",[33,0.03,77,0.03,78,0.03,80,2.815,81,2.543,92,2.815,102,4.082,185,3.142,1262,5.667,1263,5.667,1264,5.964,1265,4.93,1266,4.93]],["title/overview.html",[1260,3.066]],["body/overview.html",[1,1.053,2,0.977,28,1.764,33,0.035,35,0.251,36,0.811,39,0.735,44,0.918,46,0.918,48,1.017,50,1.017,53,1.017,55,0.918,57,1.017,59,1.068,61,0.964,63,0.918,65,1.017,68,1.017,70,1.017,74,0.918,77,0.026,78,0.026,79,2.009,80,3.744,81,2.009,82,2.224,83,2.805,84,2.805,85,2.805,86,2.482,87,3.238,88,3.238,89,3.238,90,3.238,91,3.238,92,3.23,93,3.54,94,2.805,95,2.009,144,2.224,185,3.717,186,3.238,394,2.482,558,2.779,560,3.54,1260,2.805,1267,3.895]],["title/properties.html",[155,0.782,1169,1.885]],["body/properties.html",[33,0.032,77,0.031,78,0.031,155,1.048,1222,4.182,1268,5.031]],["title/miscellaneous/variables.html",[1190,1.668,1269,3.124]],["body/miscellaneous/variables.html",[13,0.956,33,0.033,77,0.028,78,0.028,121,4.004,152,4.268,153,2.605,154,2.931,155,1.069,157,1.556,158,1.702,159,2.661,197,0.57,213,0.639,298,1.681,299,1.146,302,1.956,303,2.154,405,3.007,411,3.697,524,4.177,552,2.661,693,2.384,788,3.471,823,3.471,1098,4.552,1099,3.471,1161,3.471,1190,2.661,1219,3.471,1229,4.268,1269,3.471,1270,4.175,1271,5.133,1272,4.175,1273,4.175,1274,5.133,1275,5.559,1276,4.175,1277,5.133,1278,4.175,1279,5.133,1280,4.175,1281,4.175,1282,5.133,1283,5.133,1284,4.175,1285,5.133,1286,4.175,1287,5.133,1288,4.175,1289,5.133,1290,4.175,1291,4.175,1292,5.559,1293,4.175,1294,4.175,1295,4.175,1296,4.175,1297,4.175,1298,4.175,1299,4.175]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":354,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1268,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":471,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["0.2s",{"_index":382,"title":{},"body":{"components/ContactComponent.html":{}}}],["0.3s",{"_index":477,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["0.5",{"_index":462,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["0.5s",{"_index":1069,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["0.7",{"_index":876,"title":{},"body":{"components/SettingsComponent.html":{}}}],["0.9rem",{"_index":757,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0/1",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":336,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/StartingMenuComponent.html":{}}}],["070b10",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["1",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.2em",{"_index":368,"title":{},"body":{"components/ContactComponent.html":{}}}],["1.3rem",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["1/1",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":842,"title":{},"body":{"components/SettingsComponent.html":{}}}],["10/11",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":459,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{}}}],["10000",{"_index":878,"title":{},"body":{"components/SettingsComponent.html":{}}}],["100vh",{"_index":752,"title":{},"body":{"components/RegisterComponent.html":{}}}],["10px",{"_index":353,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["12px",{"_index":753,"title":{},"body":{"components/RegisterComponent.html":{}}}],["13.10.2",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1267,"title":{},"body":{"overview.html":{}}}],["14px",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["15px",{"_index":474,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["169384997647",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16px",{"_index":476,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["17.0.0",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["17.1.0",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":1177,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["18px",{"_index":473,"title":{},"body":{"components/ErrorsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["19/20",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["1:169384997647:web:53c3c0e1a388f9bc2ac47a",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b5e20",{"_index":369,"title":{},"body":{"components/ContactComponent.html":{},"components/StartingMenuComponent.html":{}}}],["1dbf73",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{}}}],["1em",{"_index":372,"title":{},"body":{"components/ContactComponent.html":{}}}],["1px",{"_index":386,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["2",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["2.3.0",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":360,"title":{},"body":{"components/ContactComponent.html":{}}}],["2/3",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":840,"title":{},"body":{"components/SettingsComponent.html":{}}}],["20px",{"_index":346,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["23px",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{}}}],["247b56",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["24px",{"_index":1074,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["255",{"_index":1068,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["25pt",{"_index":1081,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["25px",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["2bf73",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2bf73.appspot.com",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2bf73.firebaseapp.com",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2em",{"_index":1080,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["2p",{"_index":1065,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["2px",{"_index":362,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["3",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"overview.html":{}}}],["3.0.5",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":843,"title":{},"body":{"components/SettingsComponent.html":{}}}],["30px",{"_index":468,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["32/33",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["333",{"_index":884,"title":{},"body":{"components/SettingsComponent.html":{}}}],["388e3c",{"_index":363,"title":{},"body":{"components/ContactComponent.html":{}}}],["3ea62d",{"_index":898,"title":{},"body":{"components/SettingsComponent.html":{}}}],["3eff65",{"_index":897,"title":{},"body":{"components/SettingsComponent.html":{}}}],["4",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{}}}],["4.18.2",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["40px",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["48px",{"_index":1071,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["4b4f54",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4caf50",{"_index":384,"title":{},"body":{"components/ContactComponent.html":{}}}],["4px",{"_index":374,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["5",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{}}}],["5/6",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["50px",{"_index":343,"title":{},"body":{"components/ContactComponent.html":{}}}],["555",{"_index":885,"title":{},"body":{"components/SettingsComponent.html":{}}}],["5px",{"_index":348,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["6",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["6/7",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":341,"title":{},"body":{"components/ContactComponent.html":{}}}],["66",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["66bb6a",{"_index":378,"title":{},"body":{"components/ContactComponent.html":{}}}],["68f0b0",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6dbb31",{"_index":845,"title":{},"body":{"components/SettingsComponent.html":{}}}],["7.8.0",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["757575",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{}}}],["77",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1077,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["8/10",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["8592",{"_index":748,"title":{},"body":{"components/RegisterComponent.html":{}}}],["88",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":470,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["90",{"_index":881,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["95",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["95f1c1",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["96",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["9999",{"_index":467,"title":{},"body":{"components/ErrorsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["9px",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["a.points",{"_index":802,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["a:hover",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["absolute",{"_index":464,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{}}}],["abstractcontrol",{"_index":724,"title":{},"body":{"components/RegisterComponent.html":{}}}],["account",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{}}}],["activated",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{}}}],["activatedroutesnapshot",{"_index":644,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["actual_component",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["add",{"_index":1254,"title":{},"body":{"index.html":{}}}],["adds",{"_index":249,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["adventures",{"_index":1055,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["again",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{}}}],["aizasyc4k7mi",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":357,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["allow",{"_index":450,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["allows",{"_index":767,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["already",{"_index":740,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alternative",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular",{"_index":219,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":256,"title":{},"body":{"directives/BodyClassDirective.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["angular/compiler",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":405,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":396,"title":{},"body":{"injectables/ContactService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":192,"title":{},"body":{"modules/AppServerModule.html":{}}}],["appbodyclass",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":894,"title":{},"body":{"components/SettingsComponent.html":{}}}],["appid",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apples",{"_index":1063,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["application",{"_index":1229,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1011,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["appmodule",{"_index":80,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":250,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["approutingmodule",{"_index":92,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":185,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":680,"title":{},"body":{"components/PauseComponent.html":{}}}],["arial",{"_index":750,"title":{},"body":{"components/RegisterComponent.html":{}}}],["array",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ScoreboardsComponent.html":{}}}],["arrow",{"_index":1057,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["artifacts",{"_index":1237,"title":{},"body":{"index.html":{}}}],["async",{"_index":912,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["attempt",{"_index":952,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["attempts",{"_index":950,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["auth",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["auth,private",{"_index":1121,"title":{},"body":{"injectables/UserService.html":{}}}],["auth/email",{"_index":739,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authdomain",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticated",{"_index":649,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["authentication",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":344,"title":{},"body":{"components/ContactComponent.html":{}}}],["automatically",{"_index":1230,"title":{},"body":{"index.html":{}}}],["available",{"_index":1266,"title":{},"body":{"modules.html":{}}}],["await",{"_index":993,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["b",{"_index":800,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["b.points",{"_index":801,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["back",{"_index":713,"title":{},"body":{"components/RegisterComponent.html":{}}}],["background",{"_index":333,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["backgroundcolor",{"_index":425,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["bar",{"_index":696,"title":{},"body":{"components/PauseComponent.html":{}}}],["based",{"_index":244,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ScoreboardsComponent.html":{}}}],["bbb",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["before",{"_index":226,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["being",{"_index":653,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["best",{"_index":918,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["bestscore",{"_index":795,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["bestscore[user].foreach((score",{"_index":796,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["between",{"_index":841,"title":{},"body":{"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["black",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["block",{"_index":756,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["board",{"_index":819,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["boardarray",{"_index":983,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["boardcols",{"_index":807,"title":{},"body":{"components/SettingsComponent.html":{}}}],["boardcolsitem",{"_index":864,"title":{},"body":{"components/SettingsComponent.html":{}}}],["boardrows",{"_index":808,"title":{},"body":{"components/SettingsComponent.html":{}}}],["boardrowsitem",{"_index":865,"title":{},"body":{"components/SettingsComponent.html":{}}}],["body",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bodyclassdirective",{"_index":74,"title":{"directives/BodyClassDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bold",{"_index":390,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["boolean",{"_index":302,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["border",{"_index":347,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["bottom",{"_index":361,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["bound",{"_index":235,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["box",{"_index":351,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["browse",{"_index":1264,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StartingMenuComponent.html":{}}}],["btn:active",{"_index":1082,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["btn:hover",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bucket",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":972,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"index.html":{}}}],["button",{"_index":375,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["button:active",{"_index":385,"title":{},"body":{"components/ContactComponent.html":{}}}],["button:hover",{"_index":383,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["buttons",{"_index":1072,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["c8e6c9",{"_index":350,"title":{},"body":{"components/ContactComponent.html":{}}}],["calc(100",{"_index":887,"title":{},"body":{"components/SettingsComponent.html":{}}}],["called",{"_index":225,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["calling",{"_index":650,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["calls",{"_index":237,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["canactivate",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{}}}],["canactivate(route",{"_index":643,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["canactivate:[loginguardian",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["capabilities",{"_index":1256,"title":{},"body":{"index.html":{}}}],["case",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["catch",{"_index":995,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["catch(error",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["ccc",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["cell",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cells",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["celltype",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/enumerations.html":{}}}],["center",{"_index":358,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["change",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["changedetectorref",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":825,"title":{},"body":{"components/SettingsComponent.html":{}}}],["characters",{"_index":746,"title":{},"body":{"components/RegisterComponent.html":{}}}],["check",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["checks",{"_index":648,"title":{},"body":{"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["child",{"_index":436,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["choice",{"_index":1250,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["class.directive",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["class.directive.ts",{"_index":194,"title":{},"body":{"directives/BodyClassDirective.html":{},"coverage.html":{}}}],["class.directive.ts:13",{"_index":210,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:28",{"_index":232,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:41",{"_index":242,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:58",{"_index":221,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["classes",{"_index":248,"title":{},"body":{"directives/BodyClassDirective.html":{},"classes/User.html":{}}}],["clears",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["cli",{"_index":1221,"title":{},"body":{"index.html":{}}}],["click",{"_index":1033,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["close",{"_index":430,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["closed",{"_index":440,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["closeerrors",{"_index":426,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["closegameover",{"_index":485,"title":{},"body":{"components/GameOverComponent.html":{}}}],["closemenu",{"_index":1026,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["closesettings",{"_index":810,"title":{},"body":{"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":186,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":188,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":187,"title":{},"body":{"modules/AppServerModule.html":{}}}],["code",{"_index":1233,"title":{},"body":{"index.html":{}}}],["color",{"_index":334,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["cols",{"_index":872,"title":{},"body":{"components/SettingsComponent.html":{}}}],["column",{"_index":366,"title":{},"body":{"components/ContactComponent.html":{},"components/StartingMenuComponent.html":{}}}],["columns",{"_index":820,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["combination",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["command",{"_index":1251,"title":{},"body":{"index.html":{}}}],["common/enums",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["common/user",{"_index":967,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communicate",{"_index":1031,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["communications.service",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["communications.service.ts",{"_index":900,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"coverage.html":{}}}],["communications.service.ts:123",{"_index":945,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:143",{"_index":929,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:151",{"_index":927,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:159",{"_index":928,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:16",{"_index":962,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:167",{"_index":926,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:179",{"_index":930,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:191",{"_index":932,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:204",{"_index":917,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:217",{"_index":942,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:22",{"_index":965,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:233",{"_index":958,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:248",{"_index":939,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:263",{"_index":936,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:28",{"_index":960,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:34",{"_index":964,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:40",{"_index":963,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:46",{"_index":915,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"overview.html":{}}}],["configuration",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["confirmation",{"_index":711,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":734,"title":{},"body":{"components/RegisterComponent.html":{}}}],["connection",{"_index":949,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console",{"_index":667,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.error(\"form",{"_index":742,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.error('error",{"_index":326,"title":{},"body":{"components/ContactComponent.html":{}}}],["console.error(error",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(\"user",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('connection",{"_index":975,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log('error",{"_index":997,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log('idtoken",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('mail",{"_index":324,"title":{},"body":{"components/ContactComponent.html":{}}}],["console.log('unexpected",{"_index":1001,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log(this.loginservice.gettoken",{"_index":656,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["console.log(this.userservice.gettoken",{"_index":315,"title":{},"body":{"components/ContactComponent.html":{}}}],["const",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["constructor",{"_index":204,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(contactservice",{"_index":280,"title":{},"body":{"components/ContactComponent.html":{}}}],["constructor(http",{"_index":398,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["constructor(loginservice",{"_index":640,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["constructor(private",{"_index":258,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":847,"title":{},"body":{"components/SettingsComponent.html":{}}}],["constructor(renderer",{"_index":205,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["constructor(router",{"_index":663,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(snakecommunicationsservice",{"_index":812,"title":{},"body":{"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["constructor(userservice",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["contact",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/NavbarComponent.html":{}}}],["contact'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["contact.component.css",{"_index":273,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":274,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact/contact.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["contactcomponent",{"_index":44,"title":{"components/ContactComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactform",{"_index":316,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactservice",{"_index":281,"title":{"injectables/ContactService.html":{}},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"coverage.html":{}}}],["container",{"_index":338,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["contains",{"_index":411,"title":{},"body":{"injectables/ContactService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":457,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["content.ng",{"_index":883,"title":{},"body":{"components/SettingsComponent.html":{}}}],["continue",{"_index":701,"title":{},"body":{"components/PauseComponent.html":{}}}],["control",{"_index":826,"title":{},"body":{"components/SettingsComponent.html":{}}}],["controls",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["cookie",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["cookies",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["cookies:cookieservice",{"_index":1122,"title":{},"body":{"injectables/UserService.html":{}}}],["cookieservice",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["correctly",{"_index":325,"title":{},"body":{"components/ContactComponent.html":{}}}],["courier",{"_index":330,"title":{},"body":{"components/ContactComponent.html":{}}}],["coverage",{"_index":1137,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createuserwithemailandpassword",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":1124,"title":{},"body":{"injectables/UserService.html":{}}}],["credential",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["css",{"_index":834,"title":{},"body":{"components/SettingsComponent.html":{}}}],["current",{"_index":245,"title":{},"body":{"directives/BodyClassDirective.html":{},"guards/LoginGuardian.html":{}}}],["currently",{"_index":789,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["currentmovement",{"_index":990,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["cursive",{"_index":1066,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["cursor",{"_index":379,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["custom",{"_index":721,"title":{},"body":{"components/RegisterComponent.html":{}}}],["d8e8d8",{"_index":335,"title":{},"body":{"components/ContactComponent.html":{},"components/StartingMenuComponent.html":{}}}],["data",{"_index":234,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["database",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseurl",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddd",{"_index":888,"title":{},"body":{"components/SettingsComponent.html":{}}}],["declarations",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["decoration",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["decorator",{"_index":446,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/ScoreItemComponent.html":{}}}],["decorators",{"_index":686,"title":{},"body":{"components/PauseComponent.html":{}}}],["default",{"_index":298,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":209,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["defines",{"_index":766,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["dependencies",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descending",{"_index":786,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["description",{"_index":215,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["destroys",{"_index":227,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["determine",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["determines",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardian.html":{}}}],["dev",{"_index":1227,"title":{},"body":{"index.html":{}}}],["development",{"_index":1223,"title":{},"body":{"index.html":{}}}],["different",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["direction",{"_index":365,"title":{},"body":{"components/ContactComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["directions",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["directive",{"_index":39,"title":{"directives/BodyClassDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1236,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1240,"title":{},"body":{"index.html":{}}}],["display",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{}}}],["displayname",{"_index":1084,"title":{},"body":{"classes/User.html":{}}}],["dist",{"_index":1239,"title":{},"body":{"index.html":{}}}],["divider",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["document",{"_index":208,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["document.documentelement.style.setproperty",{"_index":862,"title":{},"body":{"components/SettingsComponent.html":{}}}],["documentation",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["documentation.component.css",{"_index":419,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.html",{"_index":417,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["documentationcomponent",{"_index":46,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["domain",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["don't",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["doorway",{"_index":449,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["down",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["during",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["dynamic",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1248,"title":{},"body":{"index.html":{}}}],["e8f5e9",{"_index":373,"title":{},"body":{"components/ContactComponent.html":{}}}],["each",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ScoreboardsComponent.html":{}}}],["ease",{"_index":478,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["eat",{"_index":1061,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["email",{"_index":275,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email/password",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{}}}],["emit",{"_index":438,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["emitevent",{"_index":856,"title":{},"body":{"components/SettingsComponent.html":{}}}],["emits",{"_index":689,"title":{},"body":{"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["emitter",{"_index":953,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["empty",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/enumerations.html":{}}}],["encapsulation",{"_index":703,"title":{},"body":{"components/RegisterComponent.html":{}}}],["end",{"_index":1247,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":406,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["enter",{"_index":745,"title":{},"body":{"components/RegisterComponent.html":{}}}],["enumeration",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1191,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":996,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["err.message",{"_index":998,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["error",{"_index":306,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["error('no",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.code",{"_index":738,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessage",{"_index":428,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["erroroccurred",{"_index":901,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["errors",{"_index":421,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["errors'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["errors.component.css",{"_index":422,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors.component.html",{"_index":423,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors/errors.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["errorscomponent",{"_index":48,"title":{"components/ErrorsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["event",{"_index":239,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["event.key",{"_index":697,"title":{},"body":{"components/PauseComponent.html":{}}}],["eventemitter",{"_index":432,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["events",{"_index":229,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/StartingMenuComponent.html":{}}}],["execute",{"_index":1244,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["express",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["f1f1f1",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["failed",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":303,"title":{},"body":{"components/ContactComponent.html":{},"guards/LoginGuardian.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":329,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["ff4c4c",{"_index":443,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["ffe6e6",{"_index":479,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["fff",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ffffff",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1232,"title":{},"body":{"index.html":{}}}],["final",{"_index":491,"title":{},"body":{"components/GameOverComponent.html":{}}}],["finally",{"_index":832,"title":{},"body":{"components/SettingsComponent.html":{}}}],["firebase",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebasedb",{"_index":920,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["first",{"_index":1253,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":875,"title":{},"body":{"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["flag",{"_index":304,"title":{},"body":{"components/ContactComponent.html":{},"components/StartingMenuComponent.html":{}}}],["flex",{"_index":364,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["flow",{"_index":451,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["following",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["font",{"_index":328,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["food",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["form",{"_index":285,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["formcontrol",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["formcontrol(20",{"_index":836,"title":{},"body":{"components/SettingsComponent.html":{}}}],["formgroup",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup.get('password')!.value",{"_index":733,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup.get('passwordconfirm')!.value",{"_index":735,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formlogin",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{}}}],["formreg",{"_index":707,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["functionality",{"_index":679,"title":{},"body":{"components/PauseComponent.html":{}}}],["further",{"_index":1257,"title":{},"body":{"index.html":{}}}],["g",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["game",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gameover",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gameovercomponent",{"_index":50,"title":{"components/GameOverComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamestarted",{"_index":1047,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["gamestate",{"_index":986,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["gamestates",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gamestates.running",{"_index":1051,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["generate",{"_index":1235,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1220,"title":{},"body":{"index.html":{}}}],["getauth",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["getbestscore",{"_index":782,"title":{},"body":{"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["getbestscore(howmany",{"_index":916,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getdirection",{"_index":905,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getgamestates",{"_index":906,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["gets",{"_index":523,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["getscore",{"_index":907,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getsnakeboardupdate",{"_index":908,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getting",{"_index":1217,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":651,"title":{},"body":{"guards/LoginGuardian.html":{},"injectables/UserService.html":{}}}],["gettopscores",{"_index":919,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getuserdata",{"_index":940,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["github",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["githubauthprovider",{"_index":1119,"title":{},"body":{"injectables/UserService.html":{}}}],["githubauthprovider()).then((usercredential",{"_index":1134,"title":{},"body":{"injectables/UserService.html":{}}}],["given",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["global",{"_index":220,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["go",{"_index":749,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["goback",{"_index":709,"title":{},"body":{"components/RegisterComponent.html":{}}}],["google",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["googleauthprovider",{"_index":1118,"title":{},"body":{"injectables/UserService.html":{}}}],["googleauthprovider()).then((usercredential",{"_index":1133,"title":{},"body":{"injectables/UserService.html":{}}}],["graph",{"_index":1265,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1076,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["green",{"_index":388,"title":{},"body":{"components/ContactComponent.html":{}}}],["group",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["guard",{"_index":144,"title":{"guards/LoginGuardian.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{},"coverage.html":{},"overview.html":{}}}],["guardian",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guardian.ts",{"_index":639,"title":{},"body":{"guards/LoginGuardian.html":{},"coverage.html":{}}}],["guardian.ts:28",{"_index":647,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["guardian.ts:8",{"_index":641,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["guards",{"_index":637,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["h2",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["handle",{"_index":973,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["handled",{"_index":442,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["handlekeydown",{"_index":674,"title":{},"body":{"components/PauseComponent.html":{}}}],["handlekeydown(event",{"_index":685,"title":{},"body":{"components/PauseComponent.html":{}}}],["handles",{"_index":296,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{}}}],["handling",{"_index":284,"title":{},"body":{"components/ContactComponent.html":{}}}],["haserroroccurred",{"_index":1024,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["head",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["headers",{"_index":1010,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["height",{"_index":460,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["help",{"_index":1258,"title":{},"body":{"index.html":{}}}],["here",{"_index":288,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/StartingMenuComponent.html":{}}}],["hidden",{"_index":1044,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["hide",{"_index":880,"title":{},"body":{"components/SettingsComponent.html":{}}}],["hidepassword",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{}}}],["hides",{"_index":1037,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["holds",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["home",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["home/home.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":224,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["hostlistener",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/PauseComponent.html":{}}}],["hostlistener('window:keydown",{"_index":687,"title":{},"body":{"components/PauseComponent.html":{}}}],["hostlisteners",{"_index":676,"title":{},"body":{"components/PauseComponent.html":{}}}],["howmany",{"_index":923,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["http",{"_index":400,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["http://localhost:4200",{"_index":1228,"title":{},"body":{"index.html":{}}}],["http://localhost:5273/api/contact/send",{"_index":412,"title":{},"body":{"injectables/ContactService.html":{}}}],["httpclient",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["httpclientmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["https://snakepro",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hub",{"_index":948,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["hubconnection",{"_index":902,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["icon",{"_index":754,"title":{},"body":{"components/RegisterComponent.html":{}}}],["icon:hover",{"_index":758,"title":{},"body":{"components/RegisterComponent.html":{}}}],["id",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1091,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["idtoken",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["img",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["implements",{"_index":195,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"guards/LoginGuardian.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["index",{"_index":197,"title":{"index.html":{}},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1042,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["indicates",{"_index":788,"title":{},"body":{"components/ScoreboardsComponent.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":305,"title":{},"body":{"components/ContactComponent.html":{},"guards/LoginGuardian.html":{},"components/PauseComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["initial",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["initialize",{"_index":968,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["initializeapp",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.firebase",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["initialized",{"_index":233,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["initializes",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inject",{"_index":254,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["inject(document",{"_index":259,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["injectable",{"_index":393,"title":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":394,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injects",{"_index":211,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/UserService.html":{}}}],["inline",{"_index":755,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inner",{"_index":891,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input",{"_index":370,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/SettingsComponent.html":{}}}],["input::placeholder",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["input:focus",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["input:hover",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{}}}],["input[type=\"number",{"_index":886,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input[type=\"number\"]:focus",{"_index":896,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input[type=\"number\"]:hover",{"_index":895,"title":{},"body":{"components/SettingsComponent.html":{}}}],["inputs",{"_index":427,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/ScoreItemComponent.html":{}}}],["instance",{"_index":253,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["instanceof",{"_index":262,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["instructions",{"_index":1056,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["invalid",{"_index":743,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iserror",{"_index":276,"title":{},"body":{"components/ContactComponent.html":{}}}],["isloading",{"_index":777,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["ismenuhidden",{"_index":1025,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["issuccess",{"_index":277,"title":{},"body":{"components/ContactComponent.html":{}}}],["it's",{"_index":289,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["item",{"_index":761,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["item.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":763,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item.component.html",{"_index":762,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item.component.ts",{"_index":760,"title":{},"body":{"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:14",{"_index":765,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item/score",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["items",{"_index":458,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["js",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(idtoken",{"_index":1016,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify(key",{"_index":1012,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify(score",{"_index":1018,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify({columns",{"_index":1014,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["justify",{"_index":456,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["karma",{"_index":1246,"title":{},"body":{"index.html":{}}}],["key",{"_index":693,"title":{},"body":{"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/variables.html":{}}}],["keyboardevent",{"_index":682,"title":{},"body":{"components/PauseComponent.html":{}}}],["keydown",{"_index":684,"title":{},"body":{"components/PauseComponent.html":{}}}],["keys",{"_index":1058,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["label",{"_index":367,"title":{},"body":{"components/ContactComponent.html":{},"components/SettingsComponent.html":{}}}],["left",{"_index":465,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"overview.html":{}}}],["lifecycle",{"_index":223,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["lightgray",{"_index":1075,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["link",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["listens",{"_index":691,"title":{},"body":{"components/PauseComponent.html":{}}}],["literal",{"_index":764,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["loading",{"_index":790,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["local",{"_index":822,"title":{},"body":{"components/SettingsComponent.html":{}}}],["localstorage.getitem('boardcols",{"_index":849,"title":{},"body":{"components/SettingsComponent.html":{}}}],["localstorage.getitem('boardrows",{"_index":852,"title":{},"body":{"components/SettingsComponent.html":{}}}],["localstorage.getitem('gamestarted",{"_index":1048,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["localstorage.getitem('snakecolor",{"_index":860,"title":{},"body":{"components/SettingsComponent.html":{}}}],["localstorage.setitem('snakecolor",{"_index":863,"title":{},"body":{"components/SettingsComponent.html":{}}}],["log",{"_index":290,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["logged",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["login(undefined",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["login({email",{"_index":1125,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.css",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":55,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginguardian",{"_index":145,"title":{"guards/LoginGuardian.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{},"coverage.html":{}}}],["loginservice",{"_index":642,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["loginwithgithub",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["loginwithgoogle",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["logout",{"_index":662,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["logs",{"_index":666,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["long",{"_index":747,"title":{},"body":{"components/RegisterComponent.html":{}}}],["m4bpjrsbvw",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":327,"title":{},"body":{"components/ContactComponent.html":{}}}],["makes",{"_index":407,"title":{},"body":{"injectables/ContactService.html":{}}}],["making",{"_index":401,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["many",{"_index":1062,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["margin",{"_index":342,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["mark",{"_index":447,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["match",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["matching",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":339,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["maximum",{"_index":873,"title":{},"body":{"components/SettingsComponent.html":{}}}],["measurement",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["measurementid",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["menu.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.component.css",{"_index":1022,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.component.html",{"_index":1023,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.component.ts",{"_index":1021,"title":{},"body":{"components/StartingMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:16",{"_index":1043,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.component.ts:22",{"_index":1034,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":1032,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":1030,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.component.ts:48",{"_index":1039,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.component.ts:68",{"_index":1035,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.component.ts:79",{"_index":1040,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.hidden",{"_index":1070,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["menu.ng",{"_index":879,"title":{},"body":{"components/SettingsComponent.html":{}}}],["menu/starting",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{}}}],["message",{"_index":278,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["messages",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["messaging",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messagingsenderid",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["method",{"_index":222,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":200,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["microsoft/signalr",{"_index":966,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["minimum",{"_index":874,"title":{},"body":{"components/SettingsComponent.html":{}}}],["miscellaneous",{"_index":1190,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":731,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mode",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":79,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["modules",{"_index":81,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["monospace",{"_index":332,"title":{},"body":{"components/ContactComponent.html":{}}}],["more",{"_index":1259,"title":{},"body":{"index.html":{}}}],["mouth",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["move",{"_index":1059,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["movement",{"_index":903,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["moz",{"_index":1078,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navbar",{"_index":659,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["navbar.component.css",{"_index":661,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":660,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":57,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["navigates",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["navigatetoregister",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigation",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigationend",{"_index":238,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["necessary",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{}}}],["need",{"_index":1252,"title":{},"body":{"index.html":{}}}],["needs",{"_index":439,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["new",{"_index":331,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newboardcolsvalue",{"_index":868,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardrowsvalue",{"_index":870,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ng",{"_index":1225,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["ngondestroy",{"_index":201,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["ngoninit",{"_index":202,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["ngx",{"_index":1120,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["none",{"_index":475,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["null",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":486,"title":{},"body":{"components/GameOverComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{}}}],["o",{"_index":1079,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["object",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"miscellaneous/variables.html":{}}}],["objective",{"_index":1060,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["observable",{"_index":410,"title":{},"body":{"injectables/ContactService.html":{},"components/LoginComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["occur",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["occurred",{"_index":1036,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["occurs",{"_index":240,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["old",{"_index":831,"title":{},"body":{"components/SettingsComponent.html":{}}}],["oldboardcolsvalue",{"_index":866,"title":{},"body":{"components/SettingsComponent.html":{}}}],["oldboardrowsvalue",{"_index":867,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ondestroy",{"_index":196,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["ongithublogin",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{}}}],["ongooglelogin",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["onsubmit",{"_index":279,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["opacity",{"_index":877,"title":{},"body":{"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["open",{"_index":1041,"title":{},"body":{"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["opensettings",{"_index":1027,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["operations",{"_index":218,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/UserService.html":{}}}],["optional",{"_index":214,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["order",{"_index":787,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["out",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":893,"title":{},"body":{"components/SettingsComponent.html":{}}}],["outline",{"_index":889,"title":{},"body":{"components/SettingsComponent.html":{}}}],["output",{"_index":445,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["outputs",{"_index":429,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["over",{"_index":482,"title":{},"body":{"components/GameOverComponent.html":{},"miscellaneous/enumerations.html":{}}}],["over'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["over.component",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["over.component.css",{"_index":484,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.html",{"_index":483,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts",{"_index":481,"title":{},"body":{"components/GameOverComponent.html":{},"coverage.html":{}}}],["over.component.ts:14",{"_index":488,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts:20",{"_index":487,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts:26",{"_index":490,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over/game",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/GameOverComponent.html":{},"coverage.html":{}}}],["overview",{"_index":1260,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{},"components/StartingMenuComponent.html":{}}}],["package",{"_index":1169,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":345,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["page",{"_index":247,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["param",{"_index":257,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":212,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["parent",{"_index":437,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/ScoreItemComponent.html":{}}}],["password",{"_index":542,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["password).then((usercredential",{"_index":1127,"title":{},"body":{"injectables/UserService.html":{}}}],["passwordconfirm",{"_index":729,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatchvalidator",{"_index":708,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwords",{"_index":732,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":671,"title":{},"body":{"components/PauseComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["pause'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["pause.component.css",{"_index":673,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause.component.html",{"_index":672,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause/pause.component",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["pausecomponent",{"_index":59,"title":{"components/PauseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paused",{"_index":699,"title":{},"body":{"components/PauseComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pausegame",{"_index":909,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["pausing",{"_index":931,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["performs",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["platform",{"_index":1249,"title":{},"body":{"index.html":{}}}],["player",{"_index":769,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["player's",{"_index":770,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["players",{"_index":792,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["playing",{"_index":493,"title":{},"body":{"components/GameOverComponent.html":{}}}],["please",{"_index":454,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{}}}],["pointer",{"_index":380,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["points",{"_index":771,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["position",{"_index":463,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["possible",{"_index":1064,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["post",{"_index":408,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["press",{"_index":700,"title":{},"body":{"components/PauseComponent.html":{},"components/StartingMenuComponent.html":{}}}],["pressed",{"_index":694,"title":{},"body":{"components/PauseComponent.html":{}}}],["preventing",{"_index":652,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["private",{"_index":198,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["process",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["production",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1219,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["projectid",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":954,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":155,"title":{"properties.html":{}},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":448,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["provideauth",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["provideclienthydration",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":413,"title":{},"body":{"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["public",{"_index":424,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["pushes",{"_index":783,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["radius",{"_index":469,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["range",{"_index":830,"title":{},"body":{"components/SettingsComponent.html":{}}}],["reactiveformsmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["receive",{"_index":452,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["reconnected",{"_index":977,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["red",{"_index":392,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirect",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectto",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectunauthorizedto",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reestablished",{"_index":978,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["reference",{"_index":1261,"title":{},"body":{"index.html":{}}}],["register",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["register(undefined",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{}}}],["register({email",{"_index":1123,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":705,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":706,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":61,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registers",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["registration",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["related",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["relative",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StartingMenuComponent.html":{}}}],["relevant",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reload",{"_index":1231,"title":{},"body":{"index.html":{}}}],["removes",{"_index":246,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["renderer",{"_index":216,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["renderer2",{"_index":206,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["rendering",{"_index":217,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["representing",{"_index":944,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["represents",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":409,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["requests",{"_index":402,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["required",{"_index":744,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reset",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["resolves",{"_index":955,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["respective",{"_index":824,"title":{},"body":{"components/SettingsComponent.html":{}}}],["respond",{"_index":921,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["response",{"_index":297,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["response.user",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{}}}],["restart",{"_index":455,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["results",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":933,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["resumed",{"_index":690,"title":{},"body":{"components/PauseComponent.html":{}}}],["resumegame",{"_index":675,"title":{},"body":{"components/PauseComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["resuming",{"_index":934,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["retrieve",{"_index":924,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["retrieves",{"_index":817,"title":{},"body":{"components/SettingsComponent.html":{}}}],["retro",{"_index":337,"title":{},"body":{"components/ContactComponent.html":{}}}],["return",{"_index":414,"title":{},"body":{"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":522,"title":{},"body":{"components/LoginComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["returning",{"_index":922,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["returns",{"_index":230,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{}}}],["rgb(255",{"_index":1067,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["rgba(0",{"_index":461,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["right",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["route",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{}}}],["router",{"_index":207,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["router's",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{}}}],["routermodule",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":646,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["routersubscription",{"_index":199,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["routes",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rows",{"_index":821,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["rtdb.europe",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1224,"title":{},"body":{"index.html":{}}}],["running",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxjs",{"_index":255,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"dependencies.html":{}}}],["sans",{"_index":751,"title":{},"body":{"components/RegisterComponent.html":{}}}],["save",{"_index":828,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["saved",{"_index":818,"title":{},"body":{"components/SettingsComponent.html":{}}}],["savedboardcols",{"_index":848,"title":{},"body":{"components/SettingsComponent.html":{}}}],["savedboardrows",{"_index":851,"title":{},"body":{"components/SettingsComponent.html":{}}}],["savedcolor",{"_index":859,"title":{},"body":{"components/SettingsComponent.html":{}}}],["saves",{"_index":833,"title":{},"body":{"components/SettingsComponent.html":{}}}],["savescore",{"_index":910,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["savescore(score",{"_index":935,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["savesettings",{"_index":811,"title":{},"body":{"components/SettingsComponent.html":{}}}],["saving",{"_index":937,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["scaffolding",{"_index":1234,"title":{},"body":{"index.html":{}}}],["score",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{}}}],["score.player",{"_index":772,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["score.points",{"_index":773,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["scoreboard",{"_index":269,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ScoreboardsComponent.html":{}}}],["scoreboards",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["scoreboards'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["scoreboards.component.css",{"_index":776,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["scoreboards.component.html",{"_index":775,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["scoreboards/score",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["scoreboards/scoreboards.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["scoreboardscomponent",{"_index":63,"title":{"components/ScoreboardsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoreboardscomponent,canactivate:[loginguardian",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scoreitemcomponent",{"_index":65,"title":{"components/ScoreItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scores",{"_index":778,"title":{},"body":{"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["screen",{"_index":489,"title":{},"body":{"components/GameOverComponent.html":{}}}],["second",{"_index":1038,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["send",{"_index":311,"title":{},"body":{"components/ContactComponent.html":{}}}],["sendcontactform",{"_index":397,"title":{},"body":{"injectables/ContactService.html":{}}}],["sendcontactform(data",{"_index":403,"title":{},"body":{"injectables/ContactService.html":{}}}],["sender",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sending",{"_index":301,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{}}}],["sends",{"_index":295,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["sendtoken",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["sendtoken(idtoken",{"_index":938,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sent",{"_index":308,"title":{},"body":{"components/ContactComponent.html":{}}}],["serif",{"_index":377,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["serpent",{"_index":1054,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["serve",{"_index":1226,"title":{},"body":{"index.html":{}}}],["server",{"_index":191,"title":{},"body":{"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"dependencies.html":{},"index.html":{}}}],["server's",{"_index":925,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["servermodule",{"_index":190,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["services",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/UserService.html":{}}}],["services/contact.service",{"_index":313,"title":{},"body":{"components/ContactComponent.html":{}}}],["services/snake",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["services/user.service",{"_index":314,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["set",{"_index":768,"title":{},"body":{"components/ScoreItemComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["setmovement",{"_index":911,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["setmovement(key",{"_index":941,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sets",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["setting",{"_index":943,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["settings",{"_index":804,"title":{},"body":{"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["settings'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["settings.component.css",{"_index":805,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":806,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["settingsclicked",{"_index":1028,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["settingscomponent",{"_index":68,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shadow",{"_index":352,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["sign",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["signalr",{"_index":947,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signalr.hubconnection",{"_index":961,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":970,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signinwithemailandpassword",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":1126,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithpopup",{"_index":1117,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithpopup(this.auth",{"_index":1132,"title":{},"body":{"injectables/UserService.html":{}}}],["signout",{"_index":1116,"title":{},"body":{"injectables/UserService.html":{}}}],["signout(this.auth",{"_index":1135,"title":{},"body":{"injectables/UserService.html":{}}}],["size",{"_index":359,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["sizing",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["snake",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snakeboardupdate",{"_index":904,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["snakebody",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["snakecolor",{"_index":809,"title":{},"body":{"components/SettingsComponent.html":{}}}],["snakecommunicationsservice",{"_index":28,"title":{"injectables/SnakeCommunicationsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["snakehead",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["snakemouthopen",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["snakepro",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakeproweb",{"_index":1218,"title":{},"body":{"index.html":{}}}],["snaketail",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["snapshot",{"_index":654,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["solid",{"_index":349,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["sorts",{"_index":784,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["sortscores",{"_index":779,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":695,"title":{},"body":{"components/PauseComponent.html":{},"components/StartingMenuComponent.html":{}}}],["span",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["span:hover",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["special",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specialfood",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specifies",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["spin",{"_index":892,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/.../enums.ts",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.ts",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.server.ts",{"_index":189,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/app.module.ts",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/body",{"_index":193,"title":{},"body":{"directives/BodyClassDirective.html":{},"coverage.html":{}}}],["src/app/contact/contact.component.ts",{"_index":272,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/contact/contact.component.ts:15",{"_index":312,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:21",{"_index":300,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:27",{"_index":310,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:33",{"_index":307,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:39",{"_index":283,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:51",{"_index":287,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:59",{"_index":293,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/documentation/documentation.component.ts",{"_index":416,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/errors/errors.component.ts",{"_index":420,"title":{},"body":{"components/ErrorsComponent.html":{},"coverage.html":{}}}],["src/app/errors/errors.component.ts:15",{"_index":433,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:21",{"_index":431,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:27",{"_index":444,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:33",{"_index":441,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/game",{"_index":480,"title":{},"body":{"components/GameOverComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["src/app/login/login",{"_index":638,"title":{},"body":{"guards/LoginGuardian.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:104",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:137",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:163",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:17",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:63",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:90",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":658,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:10",{"_index":664,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:27",{"_index":665,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/pause/pause.component.ts",{"_index":670,"title":{},"body":{"components/PauseComponent.html":{},"coverage.html":{}}}],["src/app/pause/pause.component.ts:16",{"_index":678,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/pause/pause.component.ts:29",{"_index":683,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/pause/pause.component.ts:38",{"_index":688,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":702,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:16",{"_index":718,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":710,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:43",{"_index":720,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:55",{"_index":714,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:74",{"_index":712,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/scoreboards/score",{"_index":759,"title":{},"body":{"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["src/app/scoreboards/scoreboards.component.ts",{"_index":774,"title":{},"body":{"components/ScoreboardsComponent.html":{},"coverage.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:15",{"_index":791,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:20",{"_index":780,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:37",{"_index":781,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:53",{"_index":785,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/settings/settings.component.ts",{"_index":803,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:107",{"_index":815,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:14",{"_index":814,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:20",{"_index":839,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:26",{"_index":844,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:32",{"_index":813,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:39",{"_index":846,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:47",{"_index":816,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:81",{"_index":827,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/starting",{"_index":1020,"title":{},"body":{"components/StartingMenuComponent.html":{},"coverage.html":{}}}],["src/common/enums.ts",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/user.ts",{"_index":1083,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/common/user.ts:10",{"_index":1086,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:15",{"_index":1087,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:20",{"_index":1088,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:5",{"_index":1089,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.ts",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/contact.service.ts",{"_index":395,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/services/contact.service.ts:12",{"_index":399,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/services/contact.service.ts:28",{"_index":404,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/services/snake",{"_index":899,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"coverage.html":{}}}],["src/services/user.service.ts",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:13",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:28",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:38",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:54",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:70",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:85",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:95",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":951,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["startclicked",{"_index":1029,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["startconnection",{"_index":913,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["started",{"_index":956,"title":{"index.html":{}},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["startgame",{"_index":914,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["startgame(columns",{"_index":957,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["starting",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["startingmenucomponent",{"_index":70,"title":{"components/StartingMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["starts",{"_index":946,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["state",{"_index":645,"title":{},"body":{"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["storage",{"_index":823,"title":{},"body":{"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["storagebucket",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1238,"title":{},"body":{"index.html":{}}}],["string",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["styleurl",{"_index":418,"title":{},"body":{"components/DocumentationComponent.html":{},"components/GameOverComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["subject",{"_index":959,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["submission",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{}}}],["submits",{"_index":294,"title":{},"body":{"components/ContactComponent.html":{}}}],["submitted",{"_index":715,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribes",{"_index":236,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["subscription",{"_index":251,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["success",{"_index":387,"title":{},"body":{"components/ContactComponent.html":{}}}],["successful",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["successfully",{"_index":309,"title":{},"body":{"components/ContactComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["support",{"_index":1262,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1263,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["tail",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["test",{"_index":1243,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1255,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1242,"title":{},"body":{"index.html":{}}}],["text",{"_index":356,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["textarea",{"_index":371,"title":{},"body":{"components/ContactComponent.html":{}}}],["thanks",{"_index":492,"title":{},"body":{"components/GameOverComponent.html":{}}}],["then(idtoken",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["then(response",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.boardcols.setvalue(+savedboardcols",{"_index":850,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.setvalue(value",{"_index":858,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.value",{"_index":869,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.valuechanges.subscribe(value",{"_index":854,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.setvalue(+savedboardrows",{"_index":853,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.setvalue(value",{"_index":855,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.value",{"_index":871,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.valuechanges.subscribe(value",{"_index":857,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.close.emit",{"_index":453,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{}}}],["this.contactservice.sendcontactform(contactform).subscribe",{"_index":320,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.cookies.get(\"token",{"_index":1136,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookies.set(\"token\",this.token",{"_index":1130,"title":{},"body":{"injectables/UserService.html":{}}}],["this.email",{"_index":318,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.errormessage",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.erroroccurred.emit('the",{"_index":980,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(err.message",{"_index":999,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(error.message",{"_index":976,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(string(err",{"_index":1002,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.formlogin",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formreg",{"_index":725,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formreg.valid",{"_index":736,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.gamestates.asobservable",{"_index":1004,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.gamestates.next(gamestate",{"_index":987,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.haserroroccurred",{"_index":1046,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["this.hidepassword",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.http.get(`http://localhost:5273/api/firebasedb/gettopscores?count=${howmany",{"_index":1009,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/firebasedb/getuserdata",{"_index":1017,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/firebasedb/savescore",{"_index":1019,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/pausegame",{"_index":1007,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/resumegame",{"_index":1008,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/setmovement",{"_index":1013,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post(`http://localhost:5273/api/game/start",{"_index":1015,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post(this.apiurl",{"_index":415,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.hubconnection",{"_index":969,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"currentmovement",{"_index":991,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"gamestates",{"_index":985,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"score",{"_index":988,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"snakeboardupdate",{"_index":982,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.onclose((error",{"_index":974,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.onreconnected",{"_index":979,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.start",{"_index":994,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.iserror",{"_index":323,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.isloading",{"_index":793,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.ismenuhidden",{"_index":1049,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["this.issuccess",{"_index":321,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.loginservice.gettoken",{"_index":655,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["this.message",{"_index":319,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.movement.asobservable",{"_index":1006,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.movement.next(currentmovement",{"_index":992,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.name",{"_index":317,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":730,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renderer.addclass(this.document.body",{"_index":266,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.renderer.removeclass(this.document.body",{"_index":264,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.resumegame",{"_index":698,"title":{},"body":{"components/PauseComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":261,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.router.navigate(['/home",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":669,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/register",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":657,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["this.routersubscription",{"_index":260,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.routersubscription.unsubscribe",{"_index":271,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.score.asobservable",{"_index":1005,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.score.next(score",{"_index":989,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.scores.push({player",{"_index":797,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.scores.sort((a",{"_index":799,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.settingsclicked.emit",{"_index":1053,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["this.snakeboardupdate.asobservable",{"_index":1003,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.snakeboardupdate.next(boardarray",{"_index":984,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.snakecolor",{"_index":861,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.snakecommunicationsservice.erroroccurred.subscribe((error",{"_index":1045,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["this.snakecommunicationsservice.getbestscore(6).subscribe((bestscore",{"_index":794,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.snakecommunicationsservice.getgamestates().subscribe((gamestate",{"_index":1050,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["this.snakecommunicationsservice.sendtoken(idtoken).subscribe((user",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.sortscores",{"_index":798,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.startclicked.emit",{"_index":1052,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["this.token",{"_index":1129,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updatebodyclass(event.urlafterredirects",{"_index":263,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.userservice.login(this.formlogin.value",{"_index":564,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.loginwithgithub",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.loginwithgoogle",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logout",{"_index":668,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userservice.register(this.formreg.value",{"_index":737,"title":{},"body":{"components/RegisterComponent.html":{}}}],["through",{"_index":434,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["throw",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{}}}],["throws",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["title",{"_index":355,"title":{},"body":{"components/ContactComponent.html":{},"components/StartingMenuComponent.html":{}}}],["toggle",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["togglepasswordvisibility",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{}}}],["toggles",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":292,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["tools",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":391,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{}}}],["transform",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["transition",{"_index":381,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["translatey",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["translatey(+100px",{"_index":1073,"title":{},"body":{"components/StartingMenuComponent.html":{}}}],["translatey(0",{"_index":882,"title":{},"body":{"components/SettingsComponent.html":{}}}],["travel",{"_index":435,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["true",{"_index":322,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["try",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["tslib",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["type",{"_index":213,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uid",{"_index":1085,"title":{},"body":{"classes/User.html":{}}}],["undefined",{"_index":252,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/StartingMenuComponent.html":{}}}],["underline",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["unexpected",{"_index":1000,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["unique",{"_index":1090,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":1241,"title":{},"body":{"index.html":{}}}],["unsubscribes",{"_index":228,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["up",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["updatebodyclass",{"_index":203,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["updatebodyclass(url",{"_index":241,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["updated",{"_index":981,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["updates",{"_index":243,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["url",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"injectables/ContactService.html":{},"miscellaneous/variables.html":{}}}],["url.includes('contact",{"_index":270,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('home",{"_index":267,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('login",{"_index":265,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('scoreboards",{"_index":268,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["use",{"_index":741,"title":{},"body":{"components/RegisterComponent.html":{},"components/StartingMenuComponent.html":{},"index.html":{}}}],["used",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["user",{"_index":286,"title":{"classes/User.html":{}},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":291,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["user.getidtoken",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{}}}],["usercredential",{"_index":1131,"title":{},"body":{"injectables/UserService.html":{}}}],["usercredential.user.getidtoken().then((idtoken",{"_index":1128,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":282,"title":{"injectables/UserService.html":{}},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uses",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{}}}],["using",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["valid",{"_index":716,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["validator",{"_index":722,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":719,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":723,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["validators.email",{"_index":727,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.max(30",{"_index":838,"title":{},"body":{"components/SettingsComponent.html":{}}}],["validators.min(10",{"_index":837,"title":{},"body":{"components/SettingsComponent.html":{}}}],["validators.minlength(6",{"_index":728,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":726,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":299,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"components/StartingMenuComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":717,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["variable",{"_index":835,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1269,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1222,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1245,"title":{},"body":{"index.html":{}}}],["videogamefont",{"_index":376,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["viewencapsulation",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewencapsulation.none",{"_index":704,"title":{},"body":{"components/RegisterComponent.html":{}}}],["visibility",{"_index":541,"title":{},"body":{"components/LoginComponent.html":{}}}],["void",{"_index":231,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["webkit",{"_index":890,"title":{},"body":{"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["weight",{"_index":389,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["west1.firebasedatabase.app",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/ScoreboardsComponent.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":472,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/StartingMenuComponent.html":{}}}],["width",{"_index":340,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["win",{"_index":1215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window",{"_index":692,"title":{},"body":{"components/PauseComponent.html":{}}}],["window:keydown",{"_index":677,"title":{},"body":{"components/PauseComponent.html":{}}}],["window:keydown(event",{"_index":681,"title":{},"body":{"components/PauseComponent.html":{}}}],["within",{"_index":829,"title":{},"body":{"components/SettingsComponent.html":{}}}],["withurl(\"http://localhost:5273/snakegamehub",{"_index":971,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["won",{"_index":1216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wrapper",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["xlt2r3bhbzeo7_5yrvxg3xjjeq",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":466,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{},"components/StartingMenuComponent.html":{}}}],["zone.js",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, HostListener, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CellType, GameStates} from \"../common/Enums\";\nimport {SnakeCommunicationsService} from \"../services/snake-communications.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyClassDirective\n\nBodyClassDirective\n\nAppModule -->\n\nBodyClassDirective->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nErrorsComponent\n\nErrorsComponent\n\nAppModule -->\n\nErrorsComponent->AppModule\n\n\n\n\n\nGameOverComponent\n\nGameOverComponent\n\nAppModule -->\n\nGameOverComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPauseComponent\n\nPauseComponent\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nScoreItemComponent\n\nScoreItemComponent\n\nAppModule -->\n\nScoreItemComponent->AppModule\n\n\n\n\n\nScoreboardsComponent\n\nScoreboardsComponent\n\nAppModule -->\n\nScoreboardsComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nStartingMenuComponent\n\nStartingMenuComponent\n\nAppModule -->\n\nStartingMenuComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSnakeCommunicationsService\n\nSnakeCommunicationsService\n\nAppModule -->\n\nSnakeCommunicationsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BodyClassDirective\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            DocumentationComponent\n                        \n                        \n                            ErrorsComponent\n                        \n                        \n                            GameOverComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PauseComponent\n                        \n                        \n                            PauseComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ScoreItemComponent\n                        \n                        \n                            ScoreboardsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            StartingMenuComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SnakeCommunicationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule, provideClientHydration } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {SnakeCommunicationsService} from \"../services/snake-communications.service\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { ErrorsComponent } from './errors/errors.component';\nimport { GameOverComponent } from './game-over/game-over.component';\nimport { PauseComponent } from './pause/pause.component';\nimport {initializeApp, provideFirebaseApp} from \"@angular/fire/app\";\nimport {getAuth, provideAuth} from \"@angular/fire/auth\";\nimport {environment} from \"../environments/environment\";\nimport { RegisterComponent } from './register/register.component';\nimport {HomeComponent} from \"./home/home.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport { ScoreboardsComponent } from './scoreboards/scoreboards.component';\nimport { ScoreItemComponent } from './scoreboards/score-item/score-item.component';\nimport {BodyClassDirective} from \"./body-class.directive\";\nimport { ContactComponent } from './contact/contact.component';\nimport { StartingMenuComponent } from './starting-menu/starting-menu.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SettingsComponent,\n    ErrorsComponent,\n    GameOverComponent,\n    PauseComponent,\n    PauseComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    ScoreboardsComponent,\n    ScoreItemComponent,\n    RegisterComponent,\n    BodyClassDirective,\n    ContactComponent,\n    DocumentationComponent,\n    StartingMenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    provideClientHydration(),\n    SnakeCommunicationsService,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth())\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {canActivate, redirectUnauthorizedTo} from \"@angular/fire/auth-guard\";\nimport {ScoreboardsComponent} from \"./scoreboards/scoreboards.component\";\nimport {ContactComponent} from \"./contact/contact.component\";\nimport {LoginGuardian} from \"./login/login-guardian\";\nimport {DocumentationComponent} from \"./documentation/documentation.component\";\n\n/**\n * routes is an array of route configurations.\n * Each route configuration is an object with the following properties:\n * - path: a string that represents the URL path for the route.\n * - redirectTo: a string that represents the URL path to redirect to. This is used when the path is an empty string ('').\n * - pathMatch: a string that specifies how to match the URL path. This is used in combination with redirectTo.\n * - component: the component to display when the route is activated.\n * - canActivate: an array of services that determine if the route can be activated. In this case, the LoginGuardian service is used.\n */\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent, canActivate:[LoginGuardian]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'scoreboards', component: ScoreboardsComponent,canActivate:[LoginGuardian]},\n  {path: 'contact', component: ContactComponent, canActivate:[LoginGuardian]},\n  { path: 'documentation', component: DocumentationComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.server.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BodyClassDirective.html":{"url":"directives/BodyClassDirective.html","title":"directive - BodyClassDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BodyClassDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/body-class.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appBodyClass]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                routerSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateBodyClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, router: Router, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/body-class.directive.ts:13\n                            \n                        \n\n                \n                    \n                            The constructor for the BodyClassDirective class.\nIt injects the Renderer2, Router, and DOCUMENT services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for rendering operations.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular router service.\n\n\n                                                        \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe global document object.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:58\n                        \n                    \n\n\n            \n                \n                        The ngOnDestroy method is a lifecycle hook that is called just before Angular destroys the directive.\nIn this method, it unsubscribes from the router events.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:28\n                        \n                    \n\n\n            \n                \n                        The ngOnInit method is a lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\nIn this method, it subscribes to the router events and calls the updateBodyClass method when a NavigationEnd event occurs.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBodyClass\n                        \n                    \n                \n            \n            \n                \nupdateBodyClass(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:41\n                        \n                    \n\n\n            \n                \n                        The updateBodyClass method updates the class of the body element based on the current route.\nIt removes the 'login-page' and 'home-page' classes, then it adds the appropriate class based on the current route.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL of the current route.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/body-class.directive.ts:13\n                        \n                    \n\n            \n                \n                    routerSubscription is a Subscription instance that represents the subscription to the router events.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Renderer2, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[appBodyClass]'\n})\nexport class BodyClassDirective implements OnInit, OnDestroy {\n  /**\n   * routerSubscription is a Subscription instance that represents the subscription to the router events.\n   */\n  private routerSubscription: Subscription | undefined;\n\n  /**\n   * The constructor for the BodyClassDirective class.\n   * It injects the Renderer2, Router, and DOCUMENT services.\n   * @param {Renderer2} renderer - The service for rendering operations.\n   * @param {Router} router - The Angular router service.\n   * @param {Document} document - The global document object.\n   */\n  constructor(private renderer: Renderer2, private router: Router, @Inject(DOCUMENT) private document: Document) {}\n\n  /**\n   * The ngOnInit method is a lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n   * In this method, it subscribes to the router events and calls the updateBodyClass method when a NavigationEnd event occurs.\n   */\n  ngOnInit() {\n    this.routerSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.updateBodyClass(event.urlAfterRedirects);\n      }\n    });\n  }\n\n  /**\n   * The updateBodyClass method updates the class of the body element based on the current route.\n   * It removes the 'login-page' and 'home-page' classes, then it adds the appropriate class based on the current route.\n   * @param {string} url - The URL of the current route.\n   */\n  updateBodyClass(url: string) {\n    this.renderer.removeClass(this.document.body, 'login-page');\n    this.renderer.removeClass(this.document.body, 'home-page');\n    if (url.includes('login')) {\n      this.renderer.addClass(this.document.body, 'login-page');\n    } else if (url.includes('home')) {\n      this.renderer.addClass(this.document.body, 'home-page');\n    }else if (url.includes('scoreboards')) {\n      this.renderer.addClass(this.document.body, 'scoreboard-page');\n    }else if (url.includes('contact')) {\n      this.renderer.addClass(this.document.body, 'home-page');}\n  }\n\n  /**\n   * The ngOnDestroy method is a lifecycle hook that is called just before Angular destroys the directive.\n   * In this method, it unsubscribes from the router events.\n   */\n  ngOnDestroy() {\n    if (this.routerSubscription) {\n      this.routerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contact/contact.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n\n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isError\n                            \n                            \n                                isSuccess\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(contactService: ContactService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contact/contact.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        contactService\n                                                  \n                                                        \n                                                                        ContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for handling contact form operations.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for handling user operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact/contact.component.ts:51\n                        \n                    \n\n\n            \n                \n                        A lifecycle hook that is called after Angular has initialized the component.\nHere it's used to log the user's token.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact/contact.component.ts:59\n                        \n                    \n\n\n            \n                \n                        This method is called when the user submits the contact form.\nIt sends the contact form to the server and handles the response.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:21\n                        \n                    \n\n            \n                \n                    The email of the user sending the message.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:39\n                        \n                    \n\n            \n                \n                    A flag indicating if there was an error sending the message.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:33\n                        \n                    \n\n            \n                \n                    A flag indicating if the message was sent successfully.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:27\n                        \n                    \n\n            \n                \n                    The message that the user wants to send.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:15\n                        \n                    \n\n            \n                \n                    The name of the user sending the message.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { ContactService } from \"../../services/contact.service\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit{\n  /**\n   * The name of the user sending the message.\n   * @type {string}\n   */\n  name: string = '';\n\n  /**\n   * The email of the user sending the message.\n   * @type {string}\n   */\n  email: string = '';\n\n  /**\n   * The message that the user wants to send.\n   * @type {string}\n   */\n  message: string = '';\n\n  /**\n   * A flag indicating if the message was sent successfully.\n   * @type {boolean}\n   */\n  isSuccess: boolean = false;\n\n  /**\n   * A flag indicating if there was an error sending the message.\n   * @type {boolean}\n   */\n  isError: boolean = false;\n\n  /**\n   * @param {ContactService} contactService - A service for handling contact form operations.\n   * @param {UserService} userService - A service for handling user operations.\n   */\n  constructor(private contactService: ContactService, private userService: UserService) {}\n\n  /**\n   * A lifecycle hook that is called after Angular has initialized the component.\n   * Here it's used to log the user's token.\n   */\n  ngOnInit() {\n    console.log(this.userService.getToken());\n  }\n\n  /**\n   * This method is called when the user submits the contact form.\n   * It sends the contact form to the server and handles the response.\n   */\n  onSubmit() {\n    const contactForm = {\n      name: this.name,\n      email: this.email,\n      message: this.message\n    };\n\n    this.contactService.sendContactForm(contactForm).subscribe(\n      (response: any) => {\n        this.isSuccess = true;\n        this.isError = false;\n        console.log('Mail sent correctly', response);\n        this.name = '';\n        this.email = '';\n        this.message = '';\n      },\n      (error: any) => {\n        this.isSuccess = false;\n        this.isError = true;\n        console.error('Error sending mail', error);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n\n  Contact Page\n  \n    Name\n    \n\n    Email\n    \n\n    Message\n    \n\n    Send\n  \n  Email sent successfully.\n  Error sending email.\n\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                body {\n  font-family: 'Courier New', Courier, monospace;\n  background-color: #d8e8d8;\n  color: #000;\n}\n\n.retro-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 5px solid #000;\n  background-color: #c8e6c9;\n  box-shadow: 10px 10px 0 #000;\n}\n\n.retro-title {\n  text-align: center;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n  text-shadow: 2px 2px 0 #388e3c;\n}\n\n.retro-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.retro-label {\n  font-size: 1.2em;\n  margin-bottom: 5px;\n  color: #1b5e20;\n}\n\n.retro-input, .retro-textarea {\n  font-size: 1em;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 2px solid #000;\n  background-color: #e8f5e9;\n  box-shadow: 4px 4px 0 #000;\n}\n\n.retro-button {\n  font-family: VideoGameFont, serif;\n  font-size: 1.2em;\n  padding: 10px;\n  border: 2px solid #000;\n  background-color: #66bb6a;\n  cursor: pointer;\n  box-shadow: 4px 4px 0 #000;\n  transition: all 0.2s;\n}\n\n.retro-button:hover {\n  background-color: #4caf50;\n  box-shadow: 2px 2px 0 #000;\n}\n\n.retro-button:active {\n  box-shadow: 1px 1px 0 #000;\n}\n\n.success-message {\n  color: green;\n  font-weight: bold;\n  margin-top: 20px;\n}\n\n.error-message {\n  color: red;\n  font-weight: bold;\n  margin-top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Contact Page      Name        Email        Message        Send    Email sent successfully.  Error sending email.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendContactForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/contact.service.ts:12\n                            \n                        \n\n                \n                    \n                            The constructor for the ContactService class.\nIt injects the HttpClient service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular HttpClient service for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendContactForm\n                        \n                    \n                \n            \n            \n                \nsendContactForm(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/contact.service.ts:28\n                        \n                    \n\n\n            \n                \n                        The sendContactForm method sends the contact form data to the API endpoint.\nIt makes a POST request to the apiUrl with the data as the request body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe contact form data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that contains the response from the API endpoint.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5273/api/Contact/send'\n                    \n                \n                    \n                        \n                                Defined in src/services/contact.service.ts:12\n                        \n                    \n\n            \n                \n                    apiUrl is a string that represents the URL of the API endpoint for sending the contact form.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  /**\n   * apiUrl is a string that represents the URL of the API endpoint for sending the contact form.\n   */\n  private apiUrl = 'http://localhost:5273/api/Contact/send';\n\n  /**\n   * The constructor for the ContactService class.\n   * It injects the HttpClient service.\n   * @param {HttpClient} http - The Angular HttpClient service for making HTTP requests.\n   */\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * The sendContactForm method sends the contact form data to the API endpoint.\n   * It makes a POST request to the apiUrl with the data as the request body.\n   * @param {any} data - The contact form data.\n   * @returns {Observable} An Observable that contains the response from the API endpoint.\n   */\n  sendContactForm(data: any): Observable {\n    return this.http.post(this.apiUrl, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./documentation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrl: './documentation.component.css'\n})\nexport class DocumentationComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorsComponent.html":{"url":"components/ErrorsComponent.html","title":"component - ErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/errors.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-errors\n            \n\n\n\n            \n                styleUrls\n                ./errors.component.css\n            \n\n\n\n            \n                templateUrl\n                ./errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundcolor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/errors/errors.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/errors/errors.component.ts:15\n                            \n                        \n                \n                    \n                        through which data can travel from the child to the parent. Here it's used to emit\nan event when the error message needs to be closed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeErrors\n                        \n                    \n                \n            \n            \n                \ncloseErrors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/errors/errors.component.ts:33\n                        \n                    \n\n\n            \n                \n                        This method is used to emit the 'close' event, which should be handled by the parent component\nto close the error message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        backgroundcolor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#ff4c4c'\n                    \n                \n                    \n                        \n                                Defined in src/app/errors/errors.component.ts:27\n                        \n                    \n\n            \n                \n                    The background color of the error message box.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { SnakeCommunicationsService } from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-errors',\n  templateUrl: './errors.component.html',\n  styleUrls: ['./errors.component.css']\n})\nexport class ErrorsComponent{\n  /**\n   * @Output() decorator is used to mark a property in a child component as a doorway\n   * through which data can travel from the child to the parent. Here it's used to emit\n   * an event when the error message needs to be closed.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * @Input() decorator is used to allow data to flow from a parent component into a child component.\n   * Here it's used to receive the error message from the parent component.\n   */\n  @Input() errorMessage: string = '';\n\n  /**\n   * The background color of the error message box.\n   * @type {string}\n   */\n  public backgroundcolor: string = '#ff4c4c';\n\n  /**\n   * This method is used to emit the 'close' event, which should be handled by the parent component\n   * to close the error message.\n   */\n  closeErrors() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n    Please restart the server\n    Close\n  \n\n\n    \n\n    \n                \n                    ./errors.component.css\n                \n                \n.error-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n}\n\n.error-message {\n  padding: 20px 30px;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  color: white;\n  font-size: 18px;\n  text-align: center;\n}\n\n.error-button {\n  margin-top: 15px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  background-color: white;\n  color: #ff4c4c;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  font-family: VideoGameFont, serif;\n}\n\n.error-button:hover {\n  background-color: #ffe6e6;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}    Please restart the server    Close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameOverComponent.html":{"url":"components/GameOverComponent.html","title":"component - GameOverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameOverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game-over/game-over.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-over\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./game-over.component.html\n            \n\n\n\n            \n                styleUrl\n                ./game-over.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeGameOver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game-over/game-over.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game-over/game-over.component.ts:14\n                            \n                        \n                \n                    \n                        through which data can travel from the child to the parent. Here it's used to emit\nan event when the game over screen needs to be closed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeGameOver\n                        \n                    \n                \n            \n            \n                \ncloseGameOver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game-over/game-over.component.ts:26\n                        \n                    \n\n\n            \n                \n                        This method is used to emit the 'close' event, which should be handled by the parent component\nto close the game over screen.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-game-over',\n  templateUrl: './game-over.component.html',\n  styleUrl: './game-over.component.css'\n})\nexport class GameOverComponent {\n  /**\n   * @Output() decorator is used to mark a property in a child component as a doorway\n   * through which data can travel from the child to the parent. Here it's used to emit\n   * an event when the game over screen needs to be closed.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * @Input() decorator is used to allow data to flow from a parent component into a child component.\n   * Here it's used to receive the final score from the parent component.\n   */\n  @Input() score!: number;\n\n  /**\n   * This method is used to emit the 'close' event, which should be handled by the parent component\n   * to close the game over screen.\n   */\n  closeGameOver() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    Game Over\n    Thanks for playing! Your score was: {{score}}\n    \n      Close\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Game Over    Thanks for playing! Your score was: {{score}}          Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'GameOverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formLogin\n                            \n                            \n                                hidePassword\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToRegister\n                            \n                            \n                                onGithubLogin\n                            \n                            \n                                onGoogleLogin\n                            \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            The constructor for the LoginComponent class.\nIt initializes the login form and injects the necessary services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular router for navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for snake game-related operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToRegister\n                        \n                    \n                \n            \n            \n                \nnavigateToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:90\n                        \n                    \n\n\n            \n                \n                        The navigateToRegister method is used to navigate to the registration page.\nIt uses the Angular router's navigate method to change the route to '/register'.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGithubLogin\n                        \n                    \n                \n            \n            \n                \nonGithubLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:137\n                        \n                    \n\n\n            \n                \n                        The onGithubLogin method handles the Github login process.\nIt performs the following steps:\n\nCalls the loginWithGithub method of the UserService.\nIf a user is returned from the loginWithGithub method, it gets the user's ID token.\nIf no user is returned, it throws an error.\nSends the ID token to the server using the sendToken method of the SnakeCommunicationsService.\nNavigates to the home page.\nIf any errors occur during this process, it sets the errorMessage property with a relevant message.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGoogleLogin\n                        \n                    \n                \n            \n            \n                \nonGoogleLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:104\n                        \n                    \n\n\n            \n                \n                        The onGoogleLogin method handles the Google login process.\nIt performs the following steps:\n\nCalls the loginWithGoogle method of the UserService.\nIf a user is returned from the loginWithGoogle method, it gets the user's ID token.\nIf no user is returned, it throws an error.\nSends the ID token to the server using the sendToken method of the SnakeCommunicationsService.\nNavigates to the home page.\nIf any errors occur during this process, it sets the errorMessage property with a relevant message.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:63\n                        \n                    \n\n\n            \n                \n                        The onSubmit method handles the form submission for email/password login.\nIt performs the following steps:\n\nCalls the login method of the UserService with the formLogin value.\nIf a user is returned from the login method, it gets the user's ID token.\nIf no user is returned, it throws an error.\nSends the ID token to the server using the sendToken method of the SnakeCommunicationsService.\nNavigates to the home page.\nIf any errors occur during this process, it sets the errorMessage property with a relevant message.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:163\n                        \n                    \n\n\n            \n                \n                        togglePasswordVisibility is a method that toggles the visibility of the password input field.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n            \n                \n                    errorMessage is a string that holds any error messages that occur during login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:17\n                        \n                    \n\n            \n                \n                    formLogin is a FormGroup instance that represents the login form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:27\n                        \n                    \n\n            \n                \n                    hidePassword is a boolean that determines whether the password input field is of type password or text.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:32\n                        \n                    \n\n            \n                \n                    token is a string that holds the user's ID token after successful login.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  /**\n   * formLogin is a FormGroup instance that represents the login form.\n   */\n  formLogin: FormGroup;\n\n  /**\n   * errorMessage is a string that holds any error messages that occur during login.\n   */\n  errorMessage: string | null = null;\n\n  /**\n   * hidePassword is a boolean that determines whether the password input field is of type password or text.\n   */\n  hidePassword: boolean = true;\n\n  /**\n   * token is a string that holds the user's ID token after successful login.\n   */\n  private token: string | null = null;\n\n  /**\n   * The constructor for the LoginComponent class.\n   * It initializes the login form and injects the necessary services.\n   *\n   * @param {UserService} userService - The service for user-related operations.\n   * @param {Router} router - The Angular router for navigation.\n   * @param {SnakeCommunicationsService} snakeCommunicationsService - The service for snake game-related operations.\n   */\n  constructor(private userService: UserService, private router: Router, private snakeCommunicationsService: SnakeCommunicationsService) {\n    /**\n     * formLogin is a FormGroup instance that represents the login form.\n     * It has two form controls: email and password.\n     */\n    this.formLogin = new FormGroup({\n      email: new FormControl(),\n      password: new FormControl()\n    });\n  }\n\n  /**\n   * The onSubmit method handles the form submission for email/password login.\n   * It performs the following steps:\n   * 1. Calls the login method of the UserService with the formLogin value.\n   * 2. If a user is returned from the login method, it gets the user's ID token.\n   * 3. If no user is returned, it throws an error.\n   * 4. Sends the ID token to the server using the sendToken method of the SnakeCommunicationsService.\n   * 5. Navigates to the home page.\n   * 6. If any errors occur during this process, it sets the errorMessage property with a relevant message.\n   */\n  onSubmit() {\n    this.userService.login(this.formLogin.value)\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from email/password sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login. Please check your email and password.\";\n      });\n  }\n\n  /**\n   * The navigateToRegister method is used to navigate to the registration page.\n   * It uses the Angular router's navigate method to change the route to '/register'.\n   */\n  navigateToRegister() {\n    this.router.navigate(['/register']);\n  }\n\n  /**\n   * The onGoogleLogin method handles the Google login process.\n   * It performs the following steps:\n   * 1. Calls the loginWithGoogle method of the UserService.\n   * 2. If a user is returned from the loginWithGoogle method, it gets the user's ID token.\n   * 3. If no user is returned, it throws an error.\n   * 4. Sends the ID token to the server using the sendToken method of the SnakeCommunicationsService.\n   * 5. Navigates to the home page.\n   * 6. If any errors occur during this process, it sets the errorMessage property with a relevant message.\n   */\n  onGoogleLogin() {\n    this.userService.loginWithGoogle()\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from Google sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login with Google. Please try again.\";\n      });\n  }\n\n  /**\n   * The onGithubLogin method handles the Github login process.\n   * It performs the following steps:\n   * 1. Calls the loginWithGithub method of the UserService.\n   * 2. If a user is returned from the loginWithGithub method, it gets the user's ID token.\n   * 3. If no user is returned, it throws an error.\n   * 4. Sends the ID token to the server using the sendToken method of the SnakeCommunicationsService.\n   * 5. Navigates to the home page.\n   * 6. If any errors occur during this process, it sets the errorMessage property with a relevant message.\n   */\n  onGithubLogin() {\n    this.userService.loginWithGithub()\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from Github sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login with Github. Please try again.\";\n      });\n  }\n\n  /**\n   * togglePasswordVisibility is a method that toggles the visibility of the password input field.\n   */\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n\n    \n\n    \n        \n  \n    Log in\n    \n      \n        \n      \n      \n        \n        👁️\n      \n      Log in\n    \n\n\n    \n      {{ errorMessage }}\n    \n    \n    \n      Have Google or GitHub?\n      \n        \n        Log in with Google\n      \n      \n        \n        Log in with GitHub\n      \n    \n    \n      Don't have an account yet?\n      Sign up\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n.login-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.login-container {\n  max-width: 400px;\n  width: 400px;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.login-container h2 {\n  margin-bottom: 15px;\n  color: #ffffff;\n  font-size: 1.3rem;\n}\n\n.form-group {\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  box-sizing: border-box;\n  border: 2px solid #4b4f54;\n  border-radius: 5px;\n  background-color: #070b10;\n  color: #fff;\n}\n\n.form-group input::placeholder {\n  color: #bbb;\n  font-size: 14px;\n}\n\n.toggle-password {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #fff;\n}\n\n.login-btn {\n  width: 100%;\n  padding: 9px;\n  background-color: #68f0b0;\n  color: #247b56;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.login-btn:hover {\n  background-color: #95f1c1;\n}\n\n.alternative-login {\n  text-align: center;\n  margin-top: 30px;\n}\n\n.alternative-login p {\n  margin-bottom: 30px;\n  font-size: 14px;\n  margin-top: 20px;\n}\n\n.google-btn, .github-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 5px;\n  margin-top: 20px;\n  background-color: #070b10;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.google-btn img, .github-btn img {\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n}\n\n.google-btn span, .github-btn span {\n  font-weight: bold;\n  color: #fff;\n}\n\n\n.google-btn:hover, .github-btn:hover {\n  background-color: #f1f1f1;\n\n}\n\nspan:hover {\n  text-decoration: underline;\n}\n\n.register-link {\n  margin-top: 23px;\n  text-align: center;\n}\n\n.register-link span {\n  margin-right: 5px;\n  font-size: 14px;\n}\n\n.register-link a {\n  color: #1dbf73;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.register-link a:hover {\n  text-decoration: underline;\n}\n\n.error-message {\n  color: red;\n  margin-top: 15px;\n  text-align: center;\n}\n\n.divider {\n  width: 100%;\n  height: 2px;\n  background-color: white;\n  margin: 25px 0;\n}\n\n.google-btn:hover span,\n.github-btn:hover span {\n  color: #757575;\n}\n.google-btn span:hover,\n.github-btn span:hover {\n  color: black;\n}\n\n/*\n.form-group input:hover {\n  background-color: #95f1c1;\n}\n\n  .form-group input:focus {\n  background-color: #95f1c1;\n  color: #000;\n}\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Log in                                              👁️            Log in              {{ errorMessage }}                  Have Google or GitHub?                      Log in with Google                            Log in with GitHub                    Don\\'t have an account yet?      Sign up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuardian.html":{"url":"guards/LoginGuardian.html","title":"guard - LoginGuardian","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuardian\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/login/login-guardian.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login-guardian.ts:8\n                            \n                        \n\n                \n                    \n                            The constructor for the LoginGuardian class.\nIt injects the UserService and Router services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular router service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login-guardian.ts:28\n                        \n                    \n\n\n            \n                \n                        The canActivate method is a guard that determines whether a route can be activated.\nIt checks if the user is authenticated by calling the getToken method of the UserService.\nIf the user is authenticated, it returns true and the route can be activated.\nIf the user is not authenticated, it navigates to the login page and returns false, preventing the route from being activated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current route snapshot.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current router state snapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nA boolean indicating whether the route can be activated.\n\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuardian implements CanActivate {\n\n  /**\n   * The constructor for the LoginGuardian class.\n   * It injects the UserService and Router services.\n   * @param {UserService} loginService - The service for user-related operations.\n   * @param {Router} router - The Angular router service.\n   */\n  constructor(private loginService: UserService, private router: Router) {}\n\n\n  /**\n   * The canActivate method is a guard that determines whether a route can be activated.\n   * It checks if the user is authenticated by calling the getToken method of the UserService.\n   * If the user is authenticated, it returns true and the route can be activated.\n   * If the user is not authenticated, it navigates to the login page and returns false, preventing the route from being activated.\n   * @param {ActivatedRouteSnapshot} route - The current route snapshot.\n   * @param {RouterStateSnapshot} state - The current router state snapshot.\n   * @returns {boolean} - A boolean indicating whether the route can be activated.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.loginService.getToken()) {\n      console.log(this.loginService.getToken())\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor for the NavbarComponent class.\nIt injects the Router and UserService services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular router service.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for user-related operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:27\n                        \n                    \n\n\n            \n                \n                        The logout method is used to log out the user.\nIt performs the following steps:\n\nCalls the logout method of the UserService.\nIf the logout is successful, it navigates to the login page.\nIf any errors occur during this process, it logs the error to the console.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  /**\n   * The constructor for the NavbarComponent class.\n   * It injects the Router and UserService services.\n   * @param {Router} router - The Angular router service.\n   * @param {UserService} userService - The service for user-related operations.\n   */\n  constructor(private router: Router,  private userService: UserService) {}\n\n  /**\n   * The logout method is used to log out the user.\n   * It performs the following steps:\n   * 1. Calls the logout method of the UserService.\n   * 2. If the logout is successful, it navigates to the login page.\n   * 3. If any errors occur during this process, it logs the error to the console.\n   */\n  logout(): void {\n    this.userService.logout()\n      .then(() => {\n        this.router.navigate(['/login']);\n      })\n      .catch(error => console.error(error));\n  }\n  \n\n}\n\n    \n\n    \n        \n  \n    Home\n    Scoreboards\n    Contact\n    Documentation\n    Logout\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Home    Scoreboards    Contact    Documentation    Logout  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PauseComponent.html":{"url":"components/PauseComponent.html","title":"component - PauseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PauseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pause/pause.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pause\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./pause.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pause.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleKeyDown\n                            \n                            \n                                resumeGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pause/pause.component.ts:16\n                            \n                        \n                \n                    \n                        The PauseComponent class is an Angular component that represents the pause functionality in a game.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:29\n                        \n                    \n\n\n            \n                \n                        When a keydown event occurs, it calls the handleKeyDown method with the event object.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:29\n                        \n                    \n\n\n            \n                \n                        When a keydown event occurs, it calls the handleKeyDown method with the event object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resumeGame\n                        \n                    \n                \n            \n            \n                \nresumeGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:38\n                        \n                    \n\n\n            \n                \n                        The resumeGame method emits the close event, indicating that the game should be resumed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-pause',\n  templateUrl: './pause.component.html',\n  styleUrl: './pause.component.css'\n})\nexport class PauseComponent {\n/**\n * The PauseComponent class is an Angular component that represents the pause functionality in a game.\n */\n\n/**\n * @Output() close is an EventEmitter that emits an event when the game is resumed.\n */\n@Output() close = new EventEmitter();\n\n/**\n * @HostListener('window:keydown', ['$event']) is a decorator that listens for the 'keydown' event on the window object.\n * When a keydown event occurs, it calls the handleKeyDown method with the event object.\n */\n@HostListener('window:keydown', ['$event'])\n\n/**\n * The handleKeyDown method handles the keydown event.\n * If the key pressed is the space bar (' '), it calls the resumeGame method.\n * @param {KeyboardEvent} event - The keydown event object.\n */\nhandleKeyDown(event: KeyboardEvent) {\n  if (event.key === ' ') {\n    this.resumeGame();\n  }\n}\n\n/**\n * The resumeGame method emits the close event, indicating that the game should be resumed.\n */\nresumeGame() {\n  this.close.emit();\n}\n}\n\n    \n\n    \n        \n  \n    The game is paused\n    Please press space to continue.\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      The game is paused    Please press space to continue.          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'PauseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formReg\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor for the RegisterComponent class.\nIt injects the UserService and Router services.\nIt also initializes the formReg property with form controls for email, password, and password confirmation.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular router service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:74\n                        \n                    \n\n\n            \n                \n                        The goBack method is used to navigate back to the login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:55\n                        \n                    \n\n\n            \n                \n                        The onSubmit method is called when the registration form is submitted.\nIf the form is valid, it calls the register method of the UserService with the form values.\nIf the registration is successful, it navigates to the login page.\nIf an error occurs during the registration process, it sets the errorMessage property with a relevant message.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:21\n                        \n                    \n\n            \n                \n                    errorMessage is a string that holds any error messages that occur during the registration process.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formReg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:16\n                        \n                    \n\n            \n                \n                    formReg is a FormGroup instance that represents the registration form.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:43\n                        \n                    \n\n            \n                \n                    The passwordMatchValidator method is a custom validator that checks if the password and password confirmation match.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    formGroup\n                                                    \n                                                            \nThe form group that contains the password and password confirmation controls.\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n\n\n\n    \n        import {Component, ViewEncapsulation} from '@angular/core';\nimport { FormControl, FormGroup, Validators, ValidatorFn, AbstractControl } from \"@angular/forms\";\nimport { UserService } from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css',],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RegisterComponent {\n  /**\n   * formReg is a FormGroup instance that represents the registration form.\n   */\n  formReg: FormGroup;\n\n  /**\n   * errorMessage is a string that holds any error messages that occur during the registration process.\n   */\n  errorMessage: string | null = null;\n\n  /**\n   * The constructor for the RegisterComponent class.\n   * It injects the UserService and Router services.\n   * It also initializes the formReg property with form controls for email, password, and password confirmation.\n   * @param {UserService} userService - The service for user-related operations.\n   * @param {Router} router - The Angular router service.\n   */\n  constructor(private userService: UserService, private router: Router) {\n    this.formReg = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      passwordConfirm: new FormControl('', [Validators.required, Validators.minLength(6)])\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  /**\n   * The passwordMatchValidator method is a custom validator that checks if the password and password confirmation match.\n   * @param {AbstractControl} formGroup - The form group that contains the password and password confirmation controls.\n   * @returns { { [key: string]: boolean } | null } - Returns an object with a 'mismatch' key if the passwords do not match, or null if they do.\n   */\n  passwordMatchValidator: ValidatorFn = (formGroup: AbstractControl): { [key: string]: boolean } | null => {\n    const password = formGroup.get('password')!.value;\n    const confirmPassword = formGroup.get('passwordConfirm')!.value;\n    return password === confirmPassword ? null : { 'mismatch': true };\n  };\n\n  /**\n   * The onSubmit method is called when the registration form is submitted.\n   * If the form is valid, it calls the register method of the UserService with the form values.\n   * If the registration is successful, it navigates to the login page.\n   * If an error occurs during the registration process, it sets the errorMessage property with a relevant message.\n   */\n  onSubmit() {\n    if (this.formReg.valid) {\n      this.userService.register(this.formReg.value)\n        .then(response =>\n          this.router.navigate(['/login']))\n        .catch(error => {\n          console.error(error)\n          if (error.code === 'auth/email-already-in-use') {\n            this.errorMessage = 'Email already in use';\n          }\n        });\n    } else {\n      console.error(\"Form is invalid or passwords do not match.\");\n    }\n  }\n\n  /**\n   * The goBack method is used to navigate back to the login page.\n   */\n  goBack() {\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n  \n    Register\n    \n      \n        \n        \n          Email is required.\n          Enter a valid email.\n        \n      \n      \n        \n        \n          Password is required.\n          Password must be at least 6 characters long.\n        \n      \n      \n        \n        \n          Passwords do not match.\n        \n      \n      Register\n      \n        {{ errorMessage }}\n      \n      &#8592; Go Back\n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                body {\n  background-color: #070b10;\n  color: #ffffff;\n  font-family: 'Arial', sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n}\n\n.register-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.register-container {\n  max-width: 400px;\n  width: 400px;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.register-container h2 {\n  margin-bottom: 15px;\n  color: #ffffff;\n  font-size: 1.3rem;\n}\n\n.form-group {\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  box-sizing: border-box;\n  border: 2px solid #4b4f54;\n  border-radius: 5px;\n  background-color: #070b10;\n  color: #fff;\n}\n\n.form-group input::placeholder {\n  color: #bbb;\n  font-size: 14px;\n}\n\n.error {\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.register-btn {\n  width: 100%;\n  padding: 9px;\n  background-color: #68f0b0;\n  color: #247b56;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.register-btn:hover {\n  background-color: #95f1c1;\n}\n\n.goback-icon {\n  display: inline-block;\n  margin-top: 15px;\n  color: #68f0b0;\n  cursor: pointer;\n  font-size: 0.9rem;\n  text-decoration: none;\n}\n\n.goback-icon:hover {\n  color: #95f1c1;\n  text-decoration: underline;\n}\n\n.error-message {\n  color: red;\n  margin-top: 15px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Register                                    Email is required.          Enter a valid email.                                              Password is required.          Password must be at least 6 characters long.                                              Passwords do not match.                    Register              {{ errorMessage }}            ← Go Back      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreItemComponent.html":{"url":"components/ScoreItemComponent.html","title":"component - ScoreItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScoreItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/scoreboards/score-item/score-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-item\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./score-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./score-item.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/scoreboards/score-item/score-item.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-score-item',\n  templateUrl: './score-item.component.html',\n  styleUrl: './score-item.component.css'\n})\nexport class ScoreItemComponent {\n/**\n * @Input() score is a property decorator that defines an input property.\n * It allows the value of this property to be set from the parent component.\n * The score property is an object with a 'player' property that represents the player's name and a 'points' property that represents the player's points.\n */\n@Input() score!: { player: string, points: number };\n}\n\n    \n\n    \n        \n  {{ score.player }}\n  {{ score.points }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ score.player }}  {{ score.points }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreboardsComponent.html":{"url":"components/ScoreboardsComponent.html","title":"component - ScoreboardsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScoreboardsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/scoreboards/scoreboards.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scoreboards\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./scoreboards.component.html\n            \n\n\n\n            \n                styleUrl\n                ./scoreboards.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                scores\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sortScores\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/scoreboards/scoreboards.component.ts:20\n                            \n                        \n\n                \n                    \n                            The constructor for the ScoreboardsComponent class.\nIt injects the UserService and SnakeCommunicationsService services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for snake game-related operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/scoreboards/scoreboards.component.ts:37\n                        \n                    \n\n\n            \n                \n                        The ngOnInit method is a lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\nIn this method, it sets isLoading to true, then it calls the getBestScore method of the SnakeCommunicationsService with the number 6.\nIt subscribes to the Observable returned by getBestScore and pushes the scores to the scores array.\nIt then sorts the scores array and sets isLoading to false.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortScores\n                        \n                    \n                \n            \n            \n                \nsortScores()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/scoreboards/scoreboards.component.ts:53\n                        \n                    \n\n\n            \n                \n                        The sortScores method sorts the scores array in descending order based on the points.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/scoreboards/scoreboards.component.ts:20\n                        \n                    \n\n            \n                \n                    isLoading is a boolean that indicates whether the component is currently loading data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/scoreboards/scoreboards.component.ts:15\n                        \n                    \n\n            \n                \n                    scores is an array that holds the scores of the players.\nEach score is an object with a 'player' property that represents the player's name and a 'points' property that represents the player's points.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-scoreboards',\n  templateUrl: './scoreboards.component.html',\n  styleUrl: './scoreboards.component.css'\n})\nexport class ScoreboardsComponent implements OnInit {\n  /**\n   * scores is an array that holds the scores of the players.\n   * Each score is an object with a 'player' property that represents the player's name and a 'points' property that represents the player's points.\n   */\n  scores: { player: string, points: number }[] = [];\n\n  /**\n   * isLoading is a boolean that indicates whether the component is currently loading data.\n   */\n  isLoading = false;\n\n  /**\n   * The constructor for the ScoreboardsComponent class.\n   * It injects the UserService and SnakeCommunicationsService services.\n   * @param {UserService} userService - The service for user-related operations.\n   * @param {SnakeCommunicationsService} snakeCommunicationsService - The service for snake game-related operations.\n   */\n  constructor(private userService: UserService, private snakeCommunicationsService: SnakeCommunicationsService) {\n  }\n\n  /**\n   * The ngOnInit method is a lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n   * In this method, it sets isLoading to true, then it calls the getBestScore method of the SnakeCommunicationsService with the number 6.\n   * It subscribes to the Observable returned by getBestScore and pushes the scores to the scores array.\n   * It then sorts the scores array and sets isLoading to false.\n   */\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.snakeCommunicationsService.getBestScore(6).subscribe((bestScore: { [key: string]: number[] }) => {\n      for (let user in bestScore) {\n        bestScore[user].forEach((score: number) => {\n          this.scores.push({player: user, points: score});\n        });\n      }\n      this.sortScores();\n      this.isLoading = false;\n    });\n  }\n\n  /**\n   * The sortScores method sorts the scores array in descending order based on the points.\n   */\n  sortScores(): void {\n    this.scores.sort((a, b) => b.points - a.points);\n  }\n}\n\n    \n\n    \n        \n\n\n  Scoreboard\n  Loading...\n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Scoreboard  Loading...                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreboardsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardCols\n                            \n                            \n                                boardRows\n                            \n                            \n                                snakeColor\n                            \n                            \n                                    Public\n                                snakeCommunicationsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveSettings\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:32\n                            \n                        \n\n                \n                    \n                            The constructor for the SettingsComponent class.\nIt injects the SnakeCommunicationsService service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service for snake game-related operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSettings\n                        \n                    \n                \n            \n            \n                \ncloseSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:107\n                        \n                    \n\n\n            \n                \n                        The closeSettings method is used to close the settings.\nIt emits the close event.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:47\n                        \n                    \n\n\n            \n                \n                        The ngOnInit method is a lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\nIn this method, it retrieves the saved board columns, board rows, and snake color from the local storage and sets them to the respective form controls and properties.\nIt also subscribes to the value changes of the boardCols and boardRows form controls and sets the value of the other form control to the new value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveSettings\n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:81\n                        \n                    \n\n\n            \n                \n                        The saveSettings method is called to save the settings.\nIt retrieves the saved board columns and board rows from the local storage and sets them to the respective form controls.\nIt also checks if the new values are within the valid range, and if not, it sets them to the old values.\nFinally, it saves the new board columns, board rows, and snake color to the local storage and sets the snake color CSS variable.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardCols\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(20, [Validators.min(10), Validators.max(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:20\n                        \n                    \n\n            \n                \n                    boardCols is a FormControl that represents the number of columns in the game board.\nIt has a default value of 20 and it must be between 10 and 30.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardRows\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(20, [Validators.min(10), Validators.max(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:26\n                        \n                    \n\n            \n                \n                    boardRows is a FormControl that represents the number of rows in the game board.\nIt has a default value of 20 and it must be between 10 and 30.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        snakeColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#6dbb31'\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:32\n                        \n                    \n\n            \n                \n                    snakeColor is a string that represents the color of the snake in the game.\nIt has a default value of '#6dbb31'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snakeCommunicationsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnakeCommunicationsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:39\n                        \n                    \n\n            \n                \n                    - The service for snake game-related operations.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Output, EventEmitter, OnInit} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  /**\n   * @Output() close is an EventEmitter that emits an event when the settings are closed.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * boardCols is a FormControl that represents the number of columns in the game board.\n   * It has a default value of 20 and it must be between 10 and 30.\n   */\n  boardCols = new FormControl(20, [Validators.min(10), Validators.max(30)]);\n\n  /**\n   * boardRows is a FormControl that represents the number of rows in the game board.\n   * It has a default value of 20 and it must be between 10 and 30.\n   */\n  boardRows = new FormControl(20, [Validators.min(10), Validators.max(30)]);\n\n  /**\n   * snakeColor is a string that represents the color of the snake in the game.\n   * It has a default value of '#6dbb31'.\n   */\n  snakeColor: string = '#6dbb31';\n\n  /**\n   * The constructor for the SettingsComponent class.\n   * It injects the SnakeCommunicationsService service.\n   * @param {SnakeCommunicationsService} snakeCommunicationsService - The service for snake game-related operations.\n   */\n  constructor(public snakeCommunicationsService: SnakeCommunicationsService) {\n  }\n\n  /**\n   * The ngOnInit method is a lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n   * In this method, it retrieves the saved board columns, board rows, and snake color from the local storage and sets them to the respective form controls and properties.\n   * It also subscribes to the value changes of the boardCols and boardRows form controls and sets the value of the other form control to the new value.\n   */\n  ngOnInit() {\n    const savedboardCols = localStorage.getItem('boardCols');\n    if (savedboardCols !== null) {\n      this.boardCols.setValue(+savedboardCols);\n    }\n    const savedboardRows = localStorage.getItem('boardRows');\n    if (savedboardRows !== null) {\n      this.boardRows.setValue(+savedboardRows);\n    }\n\n    this.boardCols.valueChanges.subscribe(value => {\n      this.boardRows.setValue(value, {emitEvent: false});\n    });\n\n    this.boardRows.valueChanges.subscribe(value => {\n      this.boardCols.setValue(value, {emitEvent: false});\n    });\n    const savedColor = localStorage.getItem('snakeColor');\n    if (savedColor) {\n      this.snakeColor = savedColor;\n      document.documentElement.style.setProperty('--snake-color', this.snakeColor);\n    } else {\n      this.snakeColor = '#6dbb31';\n      localStorage.setItem('snakeColor', this.snakeColor);\n      document.documentElement.style.setProperty('--snake-color', this.snakeColor);\n    }\n  }\n\n  /**\n   * The saveSettings method is called to save the settings.\n   * It retrieves the saved board columns and board rows from the local storage and sets them to the respective form controls.\n   * It also checks if the new values are within the valid range, and if not, it sets them to the old values.\n   * Finally, it saves the new board columns, board rows, and snake color to the local storage and sets the snake color CSS variable.\n   */\n  saveSettings() {\n    const boardColsItem = localStorage.getItem('boardCols');\n    const boardRowsItem = localStorage.getItem('boardRows');\n    const oldBoardColsValue = boardColsItem ? +boardColsItem : 20;\n    const oldBoardRowsValue = boardRowsItem ? +boardRowsItem : 20;\n\n    let newBoardColsValue = this.boardCols.value ?? oldBoardColsValue;\n    let newBoardRowsValue = this.boardRows.value ?? oldBoardRowsValue;\n\n    if (newBoardColsValue > 30 || newBoardColsValue  30 || newBoardRowsValue \n    \n\n    \n        \n  \n    Settings\n\n    \n      Board Cols:\n      \n      \n        The maximum value is 30.\n      \n      \n        The minimum value is 10.\n      \n    \n\n    \n      Board Rows:\n      \n      \n        The maximum value is 30.\n      \n      \n        The minimum value is 10.\n      \n    \n\n    \n      Snake Color:\n      \n    \n\n    \n      Close\n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                #settings-menu {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.3s ease;\n  opacity: 1;\n  z-index: 10000;\n}\n\n#settings-menu.ng-hide {\n  opacity: 0;\n}\n\n#settings-content {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  max-width: 400px;\n  width: 90%;\n  transition: transform 0.3s ease, opacity 0.3s ease;\n  transform: translateY(0);\n  opacity: 1;\n}\n\n#settings-content.ng-hide {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n\n#settings-content h2 {\n  margin-top: 0;\n  color: #333;\n}\n\n.input-group {\n  margin-bottom: 20px;\n}\n\n#settings-content label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #555;\n}\n\n#settings-content input[type=\"number\"] {\n  width: calc(100% - 20px);\n  margin-bottom: 10px;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  outline: none;\n  box-sizing: border-box;\n}\n\n#settings-content input[type=\"number\"]::-webkit-inner-spin-button,\n#settings-content input[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n#settings-content input[type=\"number\"]:hover,\n#settings-content input[type=\"number\"]:focus {\n  border-color: #3eff65;\n}\n\n.button-group {\n  margin-top: 20px;\n}\n\n#settings-content button {\n  background-color: #3eff65;\n  color: black;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s ease;\n  font-family: VideoGameFont, serif;\n}\n\n#settings-content button:hover {\n  background-color: #3ea62d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Settings          Board Cols:                    The maximum value is 30.                    The minimum value is 10.                    Board Rows:                    The maximum value is 30.                    The minimum value is 10.                    Snake Color:                    Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnakeCommunicationsService.html":{"url":"injectables/SnakeCommunicationsService.html","title":"injectable - SnakeCommunicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnakeCommunicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/snake-communications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorOccurred\n                            \n                            \n                                    Private\n                                gameStates\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                    Private\n                                movement\n                            \n                            \n                                    Private\n                                score\n                            \n                            \n                                    Private\n                                snakeBoardUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBestScore\n                            \n                            \n                                    Public\n                                getDirection\n                            \n                            \n                                    Public\n                                getGameStates\n                            \n                            \n                                    Public\n                                getScore\n                            \n                            \n                                    Public\n                                getSnakeBoardUpdate\n                            \n                            \n                                    Public\n                                pauseGame\n                            \n                            \n                                    Public\n                                resumeGame\n                            \n                            \n                                    Public\n                                saveScore\n                            \n                            \n                                    Public\n                                sendToken\n                            \n                            \n                                    Public\n                                setMovement\n                            \n                            \n                                    Public\n                                    Async\n                                startConnection\n                            \n                            \n                                    Public\n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/snake-communications.service.ts:46\n                            \n                        \n\n                \n                    \n                            Constructor for the SnakeCommunicationsService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular HttpClient for making HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getBestScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBestScore(howMany: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:204\n                        \n                    \n\n\n            \n                \n                        Sends a request to the server to get the best scores.\nThis method sends a GET request to the 'GetTopScores' endpoint of the FirebaseDb API.\nThe server should respond by returning the top scores.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                howMany\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe number of top scores to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the server's response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getDirection\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDirection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:167\n                        \n                    \n\n\n            \n                \n                        Returns an Observable that emits updates to the movement direction.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits updates to the movement direction.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getGameStates\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGameStates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Returns an Observable that emits updates to the game state.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits updates to the game state.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getScore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:159\n                        \n                    \n\n\n            \n                \n                        Returns an Observable that emits updates to the score.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits updates to the score.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSnakeBoardUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSnakeBoardUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:143\n                        \n                    \n\n\n            \n                \n                        Returns an Observable that emits updates to the snake board.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits updates to the snake board.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pauseGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    pauseGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:179\n                        \n                    \n\n\n            \n                \n                        Sends a request to the server to pause the game.\nThis method sends a POST request to the 'PauseGame' endpoint of the game API.\nThe server should respond by pausing the game and returning a response.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the server's response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resumeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    resumeGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:191\n                        \n                    \n\n\n            \n                \n                        Sends a request to the server to resume the game.\nThis method sends a POST request to the 'ResumeGame' endpoint of the game API.\nThe server should respond by resuming the game and returning a response.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the server's response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveScore(score: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:263\n                        \n                    \n\n\n            \n                \n                        Sends a request to the server to save the score.\nThis method sends a POST request to the 'SaveScore' endpoint of the FirebaseDb API.\nThe server should respond by saving the score and returning a response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe score to save.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the server's response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToken(idToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:248\n                        \n                    \n\n\n            \n                \n                        Sends a request to the server to get the user data.\nThis method sends a POST request to the 'GetUserData' endpoint of the FirebaseDb API.\nThe server should respond by returning the user data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                idToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID token of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the server's response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setMovement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMovement(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:217\n                        \n                    \n\n\n            \n                \n                        Sends a request to the server to set the movement direction.\nThis method sends a POST request to the 'SetMovement' endpoint of the game API.\nThe server should respond by setting the movement direction and returning a response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key representing the movement direction.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the server's response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        startConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    startConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Starts the SignalR hub connection.\nThis method attempts to start the hub connection and logs a message if the connection is successful.\nIf an error occurs during the connection attempt, it logs the error message and emits the error message\nusing the errorOccurred event emitter.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the connection is successfully started.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    startGame(columns: number, rows: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:233\n                        \n                    \n\n\n            \n                \n                        Sends a request to the server to start the game.\nThis method sends a POST request to the 'Start' endpoint of the game API.\nThe server should respond by starting the game and returning a response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe number of columns in the game board.\n\n\n                                            \n                                        \n                                        \n                                                rows\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe number of rows in the game board.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the server's response.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorOccurred\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:46\n                        \n                    \n\n            \n                \n                    Event emitter that emits when an error occurs.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:28\n                        \n                    \n\n            \n                \n                    Subject that emits updates to the game state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:16\n                        \n                    \n\n            \n                \n                    Represents a connection to the SignalR hub.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        movement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:40\n                        \n                    \n\n            \n                \n                    Subject that emits updates to the movement direction.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:34\n                        \n                    \n\n            \n                \n                    Subject that emits updates to the score.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        snakeBoardUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:22\n                        \n                    \n\n            \n                \n                    Subject that emits updates to the snake board.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport {CellType, Direction, GameStates} from \"../common/Enums\";\nimport {Observable, Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from \"../common/User\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnakeCommunicationsService {\n  /**\n   * Represents a connection to the SignalR hub.\n   * @type {signalR.HubConnection}\n   */\n  private hubConnection: signalR.HubConnection;\n\n  /**\n   * Subject that emits updates to the snake board.\n   * @type {Subject}\n   */\n  private snakeBoardUpdate: Subject = new Subject()\n\n  /**\n   * Subject that emits updates to the game state.\n   * @type {Subject}\n   */\n  private gameStates: Subject = new Subject()\n\n  /**\n   * Subject that emits updates to the score.\n   * @type {Subject}\n   */\n  private score: Subject = new Subject()\n\n  /**\n   * Subject that emits updates to the movement direction.\n   * @type {Subject}\n   */\n  private movement: Subject = new Subject()\n\n  /**\n   * Event emitter that emits when an error occurs.\n   * @type {EventEmitter}\n   */\n  public errorOccurred: EventEmitter = new EventEmitter();\n\n  /**\n   * Constructor for the SnakeCommunicationsService class.\n   * @param {HttpClient} http - The Angular HttpClient for making HTTP requests.\n   */\n  constructor(private http: HttpClient) {\n    /**\n     * Initialize the SignalR hub connection.\n     */\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(\"http://localhost:5273/snakegamehub\")\n      .build();\n\n    /**\n     * Handle the 'close' event of the hub connection.\n     * Emit an error message if there is an error.\n     */\n    this.hubConnection.onclose((error) => {\n      console.log('Connection closed');\n      if (error) {\n        this.errorOccurred.emit(error.message);\n      }\n    });\n\n    /**\n     * Handle the 'reconnected' event of the hub connection.\n     * Emit a message indicating that the connection has been reestablished.\n     */\n    this.hubConnection.onreconnected(() => {\n      console.log('Connection reestablished');\n      this.errorOccurred.emit('The connection has been reestablished');\n    });\n\n    /**\n     * Handle the 'SnakeBoardUpdate' event of the hub connection.\n     * Emit the updated snake board.\n     */\n    this.hubConnection.on(\"SnakeBoardUpdate\", (boardArray: CellType [][]) => {\n      this.snakeBoardUpdate.next(boardArray);\n    });\n\n    /**\n     * Handle the 'GameStates' event of the hub connection.\n     * Emit the updated game state.\n     */\n    this.hubConnection.on(\"GameStates\", (gameState: GameStates) => {\n      this.gameStates.next(gameState);\n    });\n\n    /**\n     * Handle the 'Score' event of the hub connection.\n     * Emit the updated score.\n     */\n    this.hubConnection.on(\"Score\", (score: number) => {\n      this.score.next(score);\n    });\n\n    /**\n     * Handle the 'CurrentMovement' event of the hub connection.\n     * Emit the updated movement direction.\n     */\n    this.hubConnection.on(\"CurrentMovement\", (currentMovement: Direction) => {\n      this.movement.next(currentMovement);\n    });\n  }\n\n  /**\n   * Starts the SignalR hub connection.\n   *\n   * This method attempts to start the hub connection and logs a message if the connection is successful.\n   * If an error occurs during the connection attempt, it logs the error message and emits the error message\n   * using the `errorOccurred` event emitter.\n   *\n   * @returns {Promise} A Promise that resolves when the connection is successfully started.\n   * @throws {Error} If an error occurs while starting the connection.\n   */\n  public async startConnection(): Promise {\n    try {\n      await this.hubConnection.start();\n      console.log('Connection started');\n    } catch (err) {\n      if (err instanceof Error) {\n        console.log('Error while starting connection: ' + err.message);\n        this.errorOccurred.emit(err.message);\n      } else {\n        // Handle unexpected error type\n        console.log('Unexpected error while starting connection: ' + err);\n        this.errorOccurred.emit(String(err));\n      }\n    }\n  }\n\n  /**\n   * Returns an Observable that emits updates to the snake board.\n   * @returns {Observable} An Observable that emits updates to the snake board.\n   */\n  public getSnakeBoardUpdate(): Observable {\n    return this.snakeBoardUpdate.asObservable();\n  }\n\n  /**\n   * Returns an Observable that emits updates to the game state.\n   * @returns {Observable} An Observable that emits updates to the game state.\n   */\n  public getGameStates(): Observable {\n    return this.gameStates.asObservable();\n  }\n\n  /**\n   * Returns an Observable that emits updates to the score.\n   * @returns {Observable} An Observable that emits updates to the score.\n   */\n  public getScore(): Observable {\n    return this.score.asObservable();\n  }\n\n  /**\n   * Returns an Observable that emits updates to the movement direction.\n   * @returns {Observable} An Observable that emits updates to the movement direction.\n   */\n  public getDirection(): Observable {\n    return this.movement.asObservable();\n  }\n\n  /**\n   * Sends a request to the server to pause the game.\n   *\n   * This method sends a POST request to the 'PauseGame' endpoint of the game API.\n   * The server should respond by pausing the game and returning a response.\n   *\n   * @returns {Observable} An Observable that emits the server's response.\n   */\n  public pauseGame(): Observable {\n    return this.http.post('http://localhost:5273/api/Game/PauseGame', null);\n  }\n\n  /**\n   * Sends a request to the server to resume the game.\n   *\n   * This method sends a POST request to the 'ResumeGame' endpoint of the game API.\n   * The server should respond by resuming the game and returning a response.\n   *\n   * @returns {Observable} An Observable that emits the server's response.\n   */\n  public resumeGame(): Observable {\n    return this.http.post('http://localhost:5273/api/Game/ResumeGame', null);\n  }\n\n  /**\n   * Sends a request to the server to get the best scores.\n   *\n   * This method sends a GET request to the 'GetTopScores' endpoint of the FirebaseDb API.\n   * The server should respond by returning the top scores.\n   *\n   * @param {number} howMany - The number of top scores to retrieve.\n   * @returns {Observable} An Observable that emits the server's response.\n   */\n  public getBestScore(howMany: number): Observable {\n    return this.http.get(`http://localhost:5273/api/FirebaseDb/GetTopScores?count=${howMany}`);\n  }\n\n  /**\n   * Sends a request to the server to set the movement direction.\n   *\n   * This method sends a POST request to the 'SetMovement' endpoint of the game API.\n   * The server should respond by setting the movement direction and returning a response.\n   *\n   * @param {string} key - The key representing the movement direction.\n   * @returns {Observable} An Observable that emits the server's response.\n   */\n  public setMovement(key: string): Observable {\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify(key);\n    return this.http.post('http://localhost:5273/api/Game/SetMovement', body, {'headers': headers});\n  }\n\n  /**\n   * Sends a request to the server to start the game.\n   *\n   * This method sends a POST request to the 'Start' endpoint of the game API.\n   * The server should respond by starting the game and returning a response.\n   *\n   * @param {number} columns - The number of columns in the game board.\n   * @param {number} rows - The number of rows in the game board.\n   * @returns {Observable} An Observable that emits the server's response.\n   */\n  public startGame(columns: number, rows: number): Observable {\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify({columns, rows});\n    return this.http.post(`http://localhost:5273/api/Game/Start`, body, {'headers': headers});\n  }\n\n  /**\n   * Sends a request to the server to get the user data.\n   *\n   * This method sends a POST request to the 'GetUserData' endpoint of the FirebaseDb API.\n   * The server should respond by returning the user data.\n   *\n   * @param {string} idToken - The ID token of the user.\n   * @returns {Observable} An Observable that emits the server's response.\n   */\n  public sendToken(idToken: string): Observable {\n    const headers = {'Content-Type': 'application/json'};\n    const body = JSON.stringify(idToken);\n    return this.http.post('http://localhost:5273/api/FirebaseDb/GetUserData', body, {headers});\n  }\n\n  /**\n   * Sends a request to the server to save the score.\n   *\n   * This method sends a POST request to the 'SaveScore' endpoint of the FirebaseDb API.\n   * The server should respond by saving the score and returning a response.\n   *\n   * @param {number} score - The score to save.\n   * @returns {Observable} An Observable that emits the server's response.\n   */\n  public saveScore(score: number): Observable {\n    const headers = {'Content-Type': 'application/json'};\n    const body = JSON.stringify(score);\n    return this.http.post('http://localhost:5273/api/FirebaseDb/SaveScore', body, {headers});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartingMenuComponent.html":{"url":"components/StartingMenuComponent.html","title":"component - StartingMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartingMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/starting-menu/starting-menu.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-starting-menu\n            \n\n\n\n            \n                styleUrls\n                ./starting-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./starting-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasErrorOccurred\n                            \n                            \n                                isMenuHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSettings\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                settingsClicked\n                            \n                            \n                                startClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/starting-menu/starting-menu.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor for the StartingMenuComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe service to communicate with the snake game.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        settingsClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/starting-menu/starting-menu.component.ts:28\n                            \n                        \n                \n                    \n                        Event emitter for the settings click event.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        startClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/starting-menu/starting-menu.component.ts:22\n                            \n                        \n                \n                    \n                        Event emitter for the start click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenu\n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-menu/starting-menu.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Method to close the menu. If no error has occurred, it hides the menu and emits the startClicked event after 1 second.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-menu/starting-menu.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook that is called after data-bound properties of a directive are initialized.\nHere, it subscribes to the errorOccurred event from the snakeCommunicationsService.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSettings\n                        \n                    \n                \n            \n            \n                \nopenSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/starting-menu/starting-menu.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Method to open the settings. It emits the settingsClicked event.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hasErrorOccurred\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-menu/starting-menu.component.ts:34\n                        \n                    \n\n            \n                \n                    Flag to indicate if an error has occurred.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuHidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/starting-menu/starting-menu.component.ts:16\n                        \n                    \n\n            \n                \n                    Flag to indicate if the menu is hidden or not.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\nimport {GameStates} from \"../../common/Enums\";\n\n@Component({\n  selector: 'app-starting-menu',\n  templateUrl: './starting-menu.component.html',\n  styleUrls: ['./starting-menu.component.css']\n})\nexport class StartingMenuComponent implements OnInit {\n\n/**\n * Flag to indicate if the menu is hidden or not.\n * @type {boolean}\n */\nisMenuHidden = false;\n\n/**\n * Event emitter for the start click event.\n * @type {EventEmitter}\n */\n@Output() startClicked = new EventEmitter();\n\n/**\n * Event emitter for the settings click event.\n * @type {EventEmitter}\n */\n@Output() settingsClicked = new EventEmitter();\n\n/**\n * Flag to indicate if an error has occurred.\n * @type {boolean | undefined}\n */\nprivate hasErrorOccurred: boolean | undefined;\n\n/**\n * Constructor for the StartingMenuComponent.\n * @param {SnakeCommunicationsService} snakeCommunicationsService - The service to communicate with the snake game.\n */\nconstructor(private snakeCommunicationsService: SnakeCommunicationsService) {\n\n}\n\n/**\n * Angular lifecycle hook that is called after data-bound properties of a directive are initialized.\n * Here, it subscribes to the errorOccurred event from the snakeCommunicationsService.\n */\nngOnInit() {\n  this.snakeCommunicationsService.errorOccurred.subscribe((error) => {\n    this.hasErrorOccurred = true;\n  });\n\n  const gameStarted = localStorage.getItem('gameStarted');\n  if (gameStarted === 'true') {\n    this.isMenuHidden = true;\n  }\n\n  this.snakeCommunicationsService.getGameStates().subscribe((gameState) => {\n    if (gameState === GameStates.Running) {\n      this.isMenuHidden = true;\n    }\n  });\n}\n\n/**\n * Method to close the menu. If no error has occurred, it hides the menu and emits the startClicked event after 1 second.\n */\ncloseMenu() {\n  if (!this.hasErrorOccurred) {\n    this.isMenuHidden = true;\n      this.startClicked.emit();\n    }\n\n}\n\n/**\n * Method to open the settings. It emits the settingsClicked event.\n */\nopenSettings() {\n  this.settingsClicked.emit();\n}\n\n}\n\n    \n\n    \n        \n  \n    Serpent Adventures\n  \n  \n    START\n    SETTINGS\n  \n  \n    Instructions:\n    Use arrow keys to move\n    Press 'P' to pause\n    Objective: Eat as many apples as possible\n  \n\n\n    \n\n    \n                \n                    ./starting-menu.component.css\n                \n                body {\n  font-family: 'Press Start 2P', cursive;\n  margin: 0;\n  padding: 0;\n  background-color: #d8e8d8;\n  color: #000;\n}\n\n.menu {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  background-color: rgb(255, 255, 255);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  opacity: 1;\n  transition: opacity 0.5s ease;\n}\n\n.menu.hidden {\n  opacity: 0;\n  pointer-events: none;\n}\n\n.game-title {\n  font-size: 48px;\n  margin-bottom: 30px;\n  color: #1b5e20;\n  text-align: center;\n}\n\n.buttons {\n  display: block;\n  justify-content: space-between;\n}\n\n\n.instructions {\n  text-align: center;\n  transform: translateY(+100px);\n}\n\n.instructions h2 {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.instructions p {\n  font-size: 18px;\n  margin: 5px 0;\n}\n\n.start-btn{\n  text-align: center;\n  display: block;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  font-weight: bold;\n  padding: 10px 0 10px 10px ;\n  background-color: lightgray;\n  text-shadow: -1px -1px black, 1px 1px white;\n  color: gray;\n  -webkit-border-radius: 7px;\n  -moz-border-radius: 7px;\n  -o-border-radius: 7px;\n  border-radius: 7px;\n  box-shadow: 0 .2em gray;\n  cursor: pointer;\n  font-size: 25pt;\n\n}\n.start-btn:active {\n  box-shadow: none;\n  position: relative;\n  top: .2em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Serpent Adventures        START    SETTINGS        Instructions:    Use arrow keys to move    Press \\'P\\' to pause    Objective: Eat as many apples as possible  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'StartingMenuComponent', 'selector': 'app-starting-menu'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'StartingMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/User.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                displayName\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                score\n                            \n                            \n                                    Optional\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:10\n                        \n                    \n\n            \n                \n                    Gets or sets the display name of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:15\n                        \n                    \n\n            \n                \n                    Gets or sets the email of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:20\n                        \n                    \n\n            \n                \n                    Gets or sets the score of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:5\n                        \n                    \n\n            \n                \n                    Gets or sets the unique identifier for the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Gets or sets the unique identifier for the user.\n   */\n  uid?: string;\n\n  /**\n   * Gets or sets the display name of the user.\n   */\n  displayName?: string;\n\n  /**\n   * Gets or sets the email of the user.\n   */\n  email?: string;\n\n  /**\n   * Gets or sets the score of the user.\n   */\n  score?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                login\n                            \n                            \n                                loginWithGithub\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, cookies: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            The constructor for the UserService class.\nIt injects the Auth and CookieService services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Firebase Auth service for authentication operations.\n\n\n                                                        \n                                                \n                                                \n                                                        cookies\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CookieService for cookie operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:95\n                        \n                    \n\n\n            \n                \n                        The getToken method gets the authentication token from the cookie.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                The authentication token.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:38\n                        \n                    \n\n\n            \n                \n                        The login method logs in a user with the given email and password.\nIt also sets the authentication token in a cookie.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves with the user credential.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGithub\n                        \n                    \n                \n            \n            \n                \nloginWithGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:70\n                        \n                    \n\n\n            \n                \n                        The loginWithGithub method logs in a user with Github.\nIt also sets the authentication token in a cookie.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves with the user credential.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:54\n                        \n                    \n\n\n            \n                \n                        The loginWithGoogle method logs in a user with Google.\nIt also sets the authentication token in a cookie.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves with the user credential.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:85\n                        \n                    \n\n\n            \n                \n                        The logout method logs out the user and clears the authentication token from the cookie.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves when the user is logged out.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:28\n                        \n                    \n\n\n            \n                \n                        The register method registers a new user with the given email and password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves with the user credential.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/services/user.service.ts:13\n                        \n                    \n\n            \n                \n                    token is a string that represents the authentication token of the user. It is null when the user is not logged in.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, signInWithPopup, GoogleAuthProvider, GithubAuthProvider} from \"@angular/fire/auth\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n/**\n * token is a string that represents the authentication token of the user. It is null when the user is not logged in.\n */\nprivate token: string | null = null;\n\n/**\n * The constructor for the UserService class.\n * It injects the Auth and CookieService services.\n * @param {Auth} auth - The Firebase Auth service for authentication operations.\n * @param {CookieService} cookies - The CookieService for cookie operations.\n */\nconstructor(private auth: Auth,private cookies:CookieService) { }\n\n/**\n * The register method registers a new user with the given email and password.\n * @param {any} {email, password} - The email and password of the user.\n * @returns {Promise} A promise that resolves with the user credential.\n */\nregister({email, password}: any) {\n  return createUserWithEmailAndPassword(this.auth, email, password);\n}\n\n/**\n * The login method logs in a user with the given email and password.\n * It also sets the authentication token in a cookie.\n * @param {any} {email, password} - The email and password of the user.\n * @returns {Promise} A promise that resolves with the user credential.\n */\nlogin({email, password}: any) {\n  return signInWithEmailAndPassword(this.auth, email, password).then((userCredential) => {\n    // Set the token when the user logs in\n    userCredential.user.getIdToken().then((idToken) => {\n      this.token = idToken;\n      this.cookies.set(\"token\",this.token)\n    });\n    return userCredential;\n  });\n}\n\n/**\n * The loginWithGoogle method logs in a user with Google.\n * It also sets the authentication token in a cookie.\n * @returns {Promise} A promise that resolves with the user credential.\n */\nloginWithGoogle() {\n  return signInWithPopup(this.auth, new GoogleAuthProvider()).then((userCredential) => {\n    // Set the token when the user logs in\n    userCredential.user.getIdToken().then((idToken) => {\n      this.token = idToken;\n      this.cookies.set(\"token\",this.token);\n    });\n    return userCredential;\n  });\n}\n\n/**\n * The loginWithGithub method logs in a user with Github.\n * It also sets the authentication token in a cookie.\n * @returns {Promise} A promise that resolves with the user credential.\n */\nloginWithGithub(){\n  return signInWithPopup(this.auth, new GithubAuthProvider()).then((userCredential) => {\n    // Set the token when the user logs in\n    userCredential.user.getIdToken().then((idToken) => {\n      this.token = idToken;\n      this.cookies.set(\"token\",this.token);\n    });\n    return userCredential;\n  });\n}\n\n/**\n * The logout method logs out the user and clears the authentication token from the cookie.\n * @returns {Promise} A promise that resolves when the user is logged out.\n */\nlogout() {\n  this.token=\"\";\n  this.cookies.set(\"token\",this.token)\n  return signOut(this.auth);\n}\n\n/**\n * The getToken method gets the authentication token from the cookie.\n * @returns {string} The authentication token.\n */\ngetToken() {\n  return this.cookies.get(\"token\")\n}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/body-class.directive.ts\n            \n            directive\n            BodyClassDirective\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            component\n            DocumentationComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/errors/errors.component.ts\n            \n            component\n            ErrorsComponent\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/game-over/game-over.component.ts\n            \n            component\n            GameOverComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                96 %\n                (32/33)\n            \n        \n        \n            \n                \n                src/app/login/login-guardian.ts\n            \n            guard\n            LoginGuardian\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pause/pause.component.ts\n            \n            component\n            PauseComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/scoreboards/score-item/score-item.component.ts\n            \n            component\n            ScoreItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/scoreboards/scoreboards.component.ts\n            \n            component\n            ScoreboardsComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/starting-menu/starting-menu.component.ts\n            \n            component\n            StartingMenuComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/common/User.ts\n            \n            class\n            User\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/services/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/services/snake-communications.service.ts\n            \n            injectable\n            SnakeCommunicationsService\n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                88 %\n                (8/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/platform-server : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @angular/ssr : ^17.3.3\n        \n            express : ^4.18.2\n        \n            firebase-tools : ^13.10.2\n        \n            js-cookie : ^3.0.5\n        \n            ngx-cookie-service : ^17.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellType   (src/.../Enums.ts)\n                        \n                        \n                            Direction   (src/.../Enums.ts)\n                        \n                        \n                            GameStates   (src/.../Enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/Enums.ts\n    \n        \n            \n                \n                    \n                        \n                        CellType\n                    \n                \n                    \n                        \n                            CellType is an enumeration that represents the different types of cells in the game.\nIt has the following values:\n\nEmpty: represents an empty cell.\nBlock: represents a block cell.\nFood: represents a food cell.\nSpecialFood: represents a special food cell.\nSnakeBody: represents a snake body cell.\nSnakeHead: represents a snake head cell.\nSnakeMouthOpen: represents a snake mouth open cell.\nSnakeTail: represents a snake tail cell.\n\n\n                        \n                    \n                        \n                            \n                                 Empty\n                            \n                        \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                 Food\n                            \n                        \n                        \n                            \n                                 SpecialFood\n                            \n                        \n                        \n                            \n                                 SnakeBody\n                            \n                        \n                        \n                            \n                                 SnakeHead\n                            \n                        \n                        \n                            \n                                 SnakeMouthOpen\n                            \n                        \n                        \n                            \n                                 SnakeTail\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Direction\n                    \n                \n                    \n                        \n                            Direction is an enumeration that represents the different directions in the game.\nIt has the following values:\n\nUp: represents the up direction.\nDown: represents the down direction.\nLeft: represents the left direction.\nRight: represents the right direction.\n\n\n                        \n                    \n                        \n                            \n                                 Up\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Down\n                            \n                        \n                        \n                            \n                                 Left\n                            \n                        \n                        \n                            \n                                 Right\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GameStates\n                    \n                \n                    \n                        \n                            GameStates is an enumeration that represents the different states of the game.\nIt has the following values:\n\nNone: represents the initial state of the game.\nRunning: represents the state when the game is running.\nPaused: represents the state when the game is paused.\nGameOver: represents the state when the game is over.\nWin: represents the state when the game is won.\n\n\n                        \n                    \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                 Paused\n                            \n                        \n                        \n                            \n                                 GameOver\n                            \n                        \n                        \n                            \n                                 Win\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSnakeProWeb\nThis project was generated with Angular CLI version 17.3.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyClassDirective\n\nBodyClassDirective\n\nAppModule -->\n\nBodyClassDirective->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nErrorsComponent\n\nErrorsComponent\n\nAppModule -->\n\nErrorsComponent->AppModule\n\n\n\n\n\nGameOverComponent\n\nGameOverComponent\n\nAppModule -->\n\nGameOverComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPauseComponent\n\nPauseComponent\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nScoreItemComponent\n\nScoreItemComponent\n\nAppModule -->\n\nScoreItemComponent->AppModule\n\n\n\n\n\nScoreboardsComponent\n\nScoreboardsComponent\n\nAppModule -->\n\nScoreboardsComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nStartingMenuComponent\n\nStartingMenuComponent\n\nAppModule -->\n\nStartingMenuComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSnakeCommunicationsService\n\nSnakeCommunicationsService\n\nAppModule -->\n\nSnakeCommunicationsService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    apiKey: \"AIzaSyC4K7mi-Xlt2R3BhbZEo7_5yRvxG3xJJeQ\",\n    authDomain: \"snakepro-2bf73.firebaseapp.com\",\n    databaseURL: \"https://snakepro-2bf73-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"snakepro-2bf73\",\n    storageBucket: \"snakepro-2bf73.appspot.com\",\n    messagingSenderId: \"169384997647\",\n    appId: \"1:169384997647:web:53c3c0e1a388f9bc2ac47a\",\n    measurementId: \"G-M4BPJRSBVW\",\n  },\n  production: false\n}\n                    \n                \n\n            \n                \n                    The environment object contains the configuration for the application.\nIt has the following properties:\n\nfirebase: an object that contains the configuration for Firebase. It has the following properties:\napiKey: a string that represents the API key for Firebase.\nauthDomain: a string that represents the domain for Firebase authentication.\ndatabaseURL: a string that represents the URL for the Firebase database.\nprojectId: a string that represents the project ID for Firebase.\nstorageBucket: a string that represents the storage bucket for Firebase.\nmessagingSenderId: a string that represents the sender ID for Firebase messaging.\nappId: a string that represents the app ID for Firebase.\nmeasurementId: a string that represents the measurement ID for Firebase.\n\n\nproduction: a boolean that indicates whether the application is in production mode.\n\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

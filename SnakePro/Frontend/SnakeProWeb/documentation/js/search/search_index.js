var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.084,1,0.568]],["body/components/AppComponent.html",[0,0.14,1,0.998,2,1.23,3,0.423,4,0.371,5,1.036,6,1.914,7,1.036,8,1.036,9,0.371,10,3.061,11,0.95,12,1.655,13,1.381,14,2.736,15,2.476,16,5.271,17,1.341,18,4.754,19,0.724,20,3.675,21,2.657,22,1.742,23,2.355,24,0.423,25,2.355,26,2.355,27,2.657,28,1.338,29,1.914,30,1.914,31,2.114,32,2.114,33,0.032,34,0.423,35,0.273,36,0.795,37,1.341,38,1.341,39,0.725,40,1.572,41,1.036,42,0.767,43,1.036,44,0.658,45,1.036,46,0.658,47,1.036,48,0.725,49,1.036,50,0.725,51,0.95,52,1.036,53,0.658,54,1.036,55,0.658,56,1.036,57,0.725,58,1.036,59,0.725,60,1.036,61,0.658,62,1.036,63,0.658,64,1.036,65,0.725,66,0.87,67,1.036,68,0.725,69,1.036,70,0.95,71,0.658,72,0.95,73,1.036,74,0.024,75,0.024]],["title/modules/AppModule.html",[76,1.654,77,1.827]],["body/modules/AppModule.html",[1,1.068,3,0.304,4,0.267,9,0.267,13,0.572,19,0.82,24,0.304,28,1.949,29,1.376,30,1.376,31,1.52,32,1.52,33,0.034,34,0.304,35,0.196,36,0.572,44,0.958,46,0.958,48,1.055,50,1.055,51,0.683,53,0.958,55,0.958,57,1.055,59,1.133,61,1.029,63,0.958,65,1.055,68,1.055,71,0.958,74,0.02,75,0.02,76,1.376,77,3.74,78,1.376,79,1.52,80,3.211,81,3.211,82,3.211,83,1.694,84,2.201,85,2.201,86,2.201,87,2.201,88,2.201,89,3.306,90,2.744,91,1.911,92,1.694,93,2.642,94,2.744,95,2.744,96,3.795,97,3.795,98,1.911,99,1.911,100,2.642,101,2.201,102,3.795,103,2.642,104,2.642,105,3.795,106,3.795,107,1.52,108,2.642,109,1.911,110,2.642,111,2.642,112,2.642,113,3.795,114,2.642,115,3.795,116,3.795,117,1.911,118,1.911,119,2.642,120,2.201,121,2.201,122,2.201,123,2.201,124,2.642,125,1.911,126,2.642,127,1.694,128,2.642,129,2.201,130,2.201,131,2.642]],["title/modules/AppRoutingModule.html",[76,1.654,89,1.827]],["body/modules/AppRoutingModule.html",[0,0.161,3,0.463,4,0.405,9,0.405,19,0.82,24,0.463,33,0.033,34,0.463,35,0.298,44,0.901,46,0.901,53,0.901,55,0.901,61,0.901,63,0.72,74,0.026,75,0.026,78,2.093,83,2.576,89,2.896,94,2.906,95,3.64,117,2.906,120,3.348,121,3.348,122,3.348,123,3.348,129,3.348,130,3.348,132,4.019,133,4.019,134,5.033,135,5.496,136,1.905,137,3.348,138,4.019,139,2.576,140,2.576,141,4.019,142,4.019,143,1.905,144,6.14,145,4.019,146,3.226,147,4.019,148,4.019,149,5.033,150,2.576,151,2.576,152,2.906,153,4.019,154,2.906,155,2.906,156,4.019]],["title/modules/AppServerModule.html",[76,1.654,157,2.035]],["body/modules/AppServerModule.html",[1,1.111,3,0.485,4,0.425,9,0.425,19,0.761,24,0.485,33,0.033,34,0.485,35,0.312,36,0.912,74,0.027,75,0.027,76,2.194,77,3.523,78,2.194,79,2.423,80,3.045,81,4.059,82,3.045,83,2.7,90,3.747,91,3.045,92,2.7,94,3.747,95,3.747,98,3.045,101,3.508,157,3.976,158,3.508,159,4.211,160,4.211,161,4.211,162,5.182,163,2.7,164,4.211]],["title/directives/BodyClassDirective.html",[39,0.626,71,0.568]],["body/directives/BodyClassDirective.html",[3,0.377,4,0.33,9,0.33,11,0.846,12,1.139,19,0.692,22,2.36,24,0.377,33,0.034,34,0.377,35,0.243,39,0.868,42,0.641,70,0.846,71,0.788,72,1.139,74,0.023,75,0.023,136,1.551,146,3.19,150,2.822,165,4.768,166,2.725,167,1.907,168,4.977,169,0.425,170,1.139,171,2.023,172,4.977,173,1.043,174,5.324,175,2.773,176,4.403,177,0.923,178,3.271,179,5.324,180,3.365,181,5.849,182,1.096,183,4.403,184,1.139,185,0.806,186,1.043,187,4.403,188,3.271,189,1.077,190,1.529,191,3.271,192,4.403,193,1.664,194,3.271,195,3.271,196,4.977,197,3.668,198,3.271,199,4.403,200,1.882,201,2.725,202,1.094,203,3.271,204,4.403,205,3.271,206,2.366,207,2.725,208,3.271,209,4.403,210,4.139,211,3.271,212,5.324,213,3.271,214,3.271,215,2.725,216,3.271,217,3.271]],["title/components/ContactComponent.html",[0,0.084,44,0.568]],["body/components/ContactComponent.html",[0,0.102,1,0.367,2,0.813,3,0.236,4,0.207,5,0.578,6,1.068,7,0.578,8,0.578,9,0.207,11,0.53,12,1.524,13,1.265,15,1.637,17,0.887,19,0.497,22,1.812,24,0.236,33,0.034,34,0.236,35,0.152,36,0.444,37,0.887,38,0.887,39,0.404,40,1.209,41,0.578,42,0.798,43,0.578,44,0.767,45,0.578,46,0.367,47,0.578,48,0.404,49,0.578,50,0.404,51,0.53,52,0.578,53,0.367,54,0.578,55,0.367,56,0.578,57,0.404,58,0.578,59,0.404,60,0.578,61,0.367,62,0.578,63,0.367,64,0.578,65,0.404,66,0.486,67,0.578,68,0.404,69,0.578,70,0.53,71,0.367,72,0.53,73,0.578,74,0.016,75,0.016,127,1.314,143,0.972,154,3.099,167,1.362,169,0.266,170,0.813,171,0.747,173,0.745,175,2.232,177,0.578,182,1.033,184,0.53,185,0.789,186,0.486,189,0.68,190,0.966,193,1.631,202,0.686,210,2.273,218,1.708,219,3.823,220,3.144,221,3.154,222,3.823,223,3.823,224,3.357,225,3.099,226,2.051,227,3.126,228,1.849,229,3.144,230,2.051,231,2.051,232,1.546,233,1.546,234,2.051,235,2.466,236,2.806,237,2.051,238,2.051,239,2.051,240,2.051,241,0.972,242,1.483,243,2.051,244,3.144,245,3.144,246,3.144,247,2.051,248,3.144,249,3.144,250,1.809,251,3.144,252,2.051,253,3.823,254,2.051,255,2.407,256,2.051,257,3.823,258,2.051,259,3.144,260,3.144,261,3.014,262,2.015,263,3.144,264,0.686,265,2.051,266,2.66,267,3.09,268,2.051,269,4.474,270,5.37,271,1.314,272,1.314,273,1.18,274,2.051,275,2.806,276,2.051,277,2.051,278,2.2,279,2.66,280,2.2,281,1.809,282,2.451,283,2.051,284,2.66,285,3.527,286,2.466,287,2.312,288,1.708,289,1.809,290,1.18,291,1.18,292,2.466,293,2.051,294,2.451,295,3.527,296,2.051,297,1.483,298,1.068,299,1.809,300,2.051,301,2.051,302,1.708,303,3.144,304,2.051,305,0.972,306,2.051,307,2.051,308,2.051,309,3.099,310,1.483,311,1.483,312,1.314,313,2.051,314,1.18,315,1.18,316,1.314,317,2.051,318,1.483,319,2.051,320,2.051,321,2.273,322,2.051,323,1.708,324,2.015,325,2.015,326,1.809,327,1.314]],["title/injectables/ContactService.html",[227,2.035,328,1.375]],["body/injectables/ContactService.html",[3,0.466,4,0.408,9,0.408,14,2.329,19,0.716,24,0.466,31,3.323,32,2.329,33,0.034,34,0.466,35,0.3,42,0.736,74,0.026,75,0.026,169,0.526,170,1.308,171,2.007,173,1.197,177,1.141,182,1.087,184,1.308,185,0.892,186,1.197,189,0.876,193,1.353,200,2.329,202,1.353,227,3.24,232,1.353,233,1.353,328,2.19,329,2.594,330,3.371,331,5.513,332,5.055,333,3.371,334,5.055,335,3.655,336,5.055,337,4.047,338,5.055,339,3.987,340,5.055,341,2.594,342,1.918,343,4.047]],["title/components/DocumentationComponent.html",[0,0.084,46,0.568]],["body/components/DocumentationComponent.html",[0,0.142,1,0.681,2,1.257,3,0.438,4,0.384,5,1.072,7,1.072,8,1.072,9,0.384,11,0.983,12,1.661,13,1.386,17,1.37,19,0.494,24,0.438,33,0.033,34,0.438,35,0.282,36,0.823,37,1.37,38,1.37,39,0.75,40,1.592,41,1.072,42,0.779,43,1.072,44,0.681,45,1.072,46,1.011,47,1.072,48,0.75,49,1.072,50,0.75,51,0.983,52,1.072,53,0.681,54,1.072,55,0.681,56,1.072,57,0.75,58,1.072,59,0.75,60,1.072,61,0.681,62,1.072,63,0.681,64,1.072,65,0.75,66,0.901,67,1.072,68,0.75,69,1.072,70,0.983,71,0.681,72,0.983,73,1.072,74,0.025,75,0.025,155,3.514,344,3.167,345,4.859,346,2.304,347,4.859]],["title/components/ErrorsComponent.html",[0,0.084,48,0.626]],["body/components/ErrorsComponent.html",[0,0.115,1,0.449,2,0.946,3,0.289,4,0.253,5,0.708,6,1.307,7,0.708,8,0.708,9,0.253,11,0.649,12,1.576,13,1.31,15,1.905,17,1.031,19,0.475,22,2.045,24,0.289,28,1.834,29,1.307,30,1.307,33,0.033,34,0.289,35,0.186,36,0.543,37,1.031,38,1.031,39,0.495,40,1.337,41,0.708,42,0.69,43,0.708,44,0.449,45,0.708,46,0.449,47,0.708,48,0.935,49,0.708,50,0.495,51,0.649,52,0.708,53,0.449,54,0.708,55,0.449,56,0.708,57,0.495,58,0.708,59,0.495,60,0.708,61,0.449,62,0.708,63,0.449,64,0.708,65,0.495,66,0.595,67,0.708,68,0.495,69,0.708,70,0.649,71,0.449,72,0.649,73,0.708,74,0.019,75,0.019,163,2.344,167,1.584,169,0.475,170,0.946,173,0.866,175,2.469,177,0.708,182,1.071,184,0.649,185,0.815,186,0.595,189,0.792,190,1.123,193,1.585,224,1.609,232,1.223,233,1.223,255,2.624,261,2.482,262,1.609,264,0.839,266,2.727,267,3.026,271,1.609,273,1.444,275,1.444,278,2.104,279,2.104,280,2.482,281,1.444,284,1.444,285,1.815,286,1.444,287,2.573,289,1.444,290,2.104,291,2.482,292,2.104,298,1.307,299,1.444,305,1.734,309,1.815,310,1.815,311,1.815,312,1.609,314,1.444,315,1.444,316,1.609,318,1.815,326,2.104,348,2.091,349,3.657,350,4.314,351,3.657,352,3.229,353,4.314,354,4.739,355,4.739,356,2.644,357,3.229,358,2.344,359,3.229,360,2.51,361,3.657,362,2.51,363,2.482,364,2.51,365,2.51,366,2.51,367,4.314,368,2.51,369,2.344,370,2.091,371,2.51,372,1.609,373,2.51,374,1.609,375,2.644,376,3.657,377,1.609,378,1.444,379,1.609,380,2.104,381,1.609,382,3.046,383,2.51,384,1.609,385,2.091,386,2.091,387,2.51,388,2.51,389,1.609,390,2.344,391,3.046,392,2.091,393,2.644,394,2.51,395,1.815,396,1.444,397,2.091,398,1.815,399,2.091,400,2.51]],["title/components/GameOverComponent.html",[0,0.084,50,0.626]],["body/components/GameOverComponent.html",[0,0.133,1,0.59,2,1.145,3,0.379,4,0.332,5,0.929,7,0.929,8,0.929,9,0.332,11,0.853,12,1.635,13,1.363,17,1.248,19,0.428,24,0.379,33,0.033,34,0.379,35,0.245,36,0.713,37,1.248,38,1.248,39,0.65,40,1.506,41,0.929,42,0.727,43,0.929,44,0.59,45,0.929,46,0.59,47,0.929,48,0.65,49,0.929,50,1.053,51,1.561,52,0.929,53,0.59,54,0.929,55,0.59,56,0.929,57,0.65,58,0.929,59,0.65,60,0.929,61,0.59,62,0.929,63,0.59,64,0.929,65,0.65,66,1.411,67,0.929,68,0.65,69,0.929,70,0.853,71,0.59,72,0.853,73,0.929,74,0.023,75,0.023,109,3.862,169,0.428,173,1.048,182,0.985,185,0.716,189,0.713,190,1.012,264,1.102,305,2.098,346,2.098,356,3.2,358,2.837,359,3.571,363,2.875,369,2.837,374,2.113,401,4.449,402,2.746,403,5.34,404,4.425,405,4.425,406,5.34,407,2.546,408,3.296,409,3.296,410,3.296,411,4.425,412,4.425]],["title/components/HomeComponent.html",[0,0.084,53,0.568]],["body/components/HomeComponent.html",[0,0.088,1,0.296,2,0.687,3,0.19,4,0.167,5,0.466,7,0.466,8,0.466,9,0.167,11,0.428,12,1.461,13,1.21,17,0.749,19,0.579,21,1.196,22,1.577,23,1.06,24,0.19,25,2.132,26,2.673,27,1.196,28,1.621,29,0.861,30,0.861,31,2.191,32,0.951,33,0.034,34,0.19,35,0.123,36,0.358,37,0.749,38,0.749,39,0.326,40,1.074,41,0.466,42,0.681,43,0.466,44,0.296,45,0.466,46,0.296,47,0.466,48,0.326,49,0.466,50,0.326,51,1.079,52,0.466,53,0.682,54,0.466,55,0.296,56,0.466,57,0.326,58,0.466,59,0.326,60,0.466,61,0.296,62,0.466,63,0.296,64,0.466,65,0.326,66,1.29,67,0.466,68,0.326,69,0.749,70,0.428,71,0.296,72,0.428,73,0.466,74,0.014,75,0.014,143,1.259,146,1.702,167,1.15,169,0.215,170,0.687,171,0.967,173,0.629,175,1.983,177,0.466,182,1.177,184,0.985,185,0.881,186,0.902,189,1.115,190,1.582,193,1.395,197,1.377,202,0.553,206,2.754,228,1.704,232,1.821,233,1.793,235,2.191,236,3.134,241,0.784,242,1.196,250,2.562,255,0.861,287,1.805,288,2.771,323,1.377,327,1.06,335,2.405,342,1.977,346,1.259,352,3.436,357,2.132,372,1.06,393,1.196,407,3.177,413,1.377,414,2.655,415,2.655,416,4.453,417,2.771,418,2.771,419,2.771,420,3.326,421,3.326,422,3.326,423,3.326,424,3.326,425,2.655,426,2.655,427,2.655,428,3.808,429,3.808,430,3.808,431,3.808,432,3.808,433,3.172,434,2.212,435,2.655,436,1.377,437,2.655,438,1.377,439,1.653,440,3.172,441,2.655,442,2.655,443,1.653,444,2.771,445,2.655,446,3.326,447,1.653,448,1.653,449,2.655,450,1.377,451,2.655,452,1.653,453,1.653,454,1.653,455,1.653,456,1.653,457,1.653,458,1.653,459,1.653,460,3.172,461,1.653,462,1.653,463,1.653,464,1.653,465,1.653,466,1.653,467,1.653,468,1.653,469,2.212,470,1.653,471,1.653,472,0.784,473,1.377,474,1.653,475,1.653,476,2.771,477,1.377,478,1.383,479,1.653,480,2.771,481,1.377,482,1.653,483,1.653,484,1.653,485,1.653,486,1.377,487,1.653,488,1.653,489,2.655,490,1.653,491,1.653,492,1.653,493,1.653,494,1.653,495,3.326,496,1.653,497,1.653,498,2.655,499,2.655,500,5.019,501,2.655,502,3.808,503,1.653,504,3.326,505,1.653,506,1.653,507,1.653,508,1.653,509,1.653,510,1.653,511,1.196,512,1.653,513,1.653,514,1.653,515,2.655,516,1.653,517,1.653,518,1.653,519,1.196,520,2.212,521,1.377,522,1.653,523,1.653,524,1.653,525,1.653,526,2.655,527,3.172,528,2.655,529,2.655,530,2.655,531,1.653,532,1.653]],["title/components/LoginComponent.html",[0,0.084,55,0.568]],["body/components/LoginComponent.html",[0,0.082,1,0.267,2,0.632,3,0.172,4,0.151,5,0.421,6,0.777,7,0.421,8,0.421,9,0.151,11,0.386,12,1.428,13,1.181,15,1.272,17,0.689,19,0.552,23,0.956,24,0.172,28,1.632,29,0.777,30,0.777,33,0.034,34,0.172,35,0.111,36,0.323,37,0.689,38,0.689,39,0.294,40,1.011,41,0.421,42,0.522,43,0.421,44,0.267,45,0.421,46,0.267,47,0.421,48,0.294,49,0.421,50,0.294,51,0.386,52,0.421,53,0.267,54,0.421,55,0.642,56,0.421,57,0.294,58,0.421,59,0.294,60,0.421,61,0.267,62,0.421,63,0.267,64,0.421,65,0.294,66,0.353,67,0.421,68,0.294,69,0.421,70,0.386,71,0.267,72,0.386,73,0.421,74,0.013,75,0.013,107,0.859,136,0.707,143,1.47,150,3.338,151,2.298,169,0.194,170,0.632,171,1.44,173,0.579,177,0.421,180,2.58,182,0.983,184,0.386,185,0.64,186,0.353,189,0.856,190,1.215,193,1.199,200,0.859,202,0.499,221,1.406,224,0.956,225,2.592,228,1.546,232,1.037,233,1.037,235,1.406,241,0.707,250,1.406,255,0.777,261,2.444,264,1.42,266,2.787,267,3.295,269,1.243,271,1.566,272,0.956,273,2.692,275,2.937,278,2.063,279,1.785,280,2.692,281,2.276,282,1.566,284,1.406,286,1.785,287,0.707,289,2.444,290,2.276,291,2.58,292,2.063,294,1.988,295,1.766,297,2.86,298,1.272,299,1.406,305,0.707,314,2.063,315,2.063,316,0.956,321,1.079,324,1.566,325,1.566,326,2.444,327,0.956,339,1.079,342,1.47,357,2.535,372,1.988,375,2.243,377,1.566,378,1.406,379,1.566,380,2.276,381,1.566,384,1.566,385,1.243,389,1.988,390,2.298,393,1.079,395,2.243,396,1.406,398,1.079,472,2.469,478,2.437,511,1.079,521,1.243,533,1.243,534,3.101,535,2.443,536,3.101,537,3.101,538,2.584,539,3.585,540,3.585,541,3.585,542,3.585,543,1.079,544,2.443,545,1.492,546,1.492,547,1.492,548,1.492,549,1.492,550,1.492,551,2.986,552,1.492,553,1.492,554,2.243,555,1.492,556,2.243,557,1.492,558,2.584,559,3.101,560,3.101,561,3.101,562,3.101,563,3.101,564,1.492,565,3.955,566,3.101,567,3.101,568,2.243,569,3.101,570,3.101,571,3.101,572,2.243,573,2.243,574,3.101,575,1.243,576,1.492,577,1.492,578,5.208,579,2.035,580,2.443,581,1.492,582,5.208,583,2.443,584,4.679,585,1.492,586,2.443,587,2.443,588,1.243,589,1.766,590,1.079,591,1.243,592,1.243,593,2.86,594,1.243,595,1.079,596,1.243,597,2.035,598,2.243,599,1.243,600,1.243,601,2.584,602,1.492,603,3.101,604,2.443,605,1.243,606,1.243,607,4.034,608,1.243,609,1.243,610,1.243,611,3.295,612,2.584,613,2.443,614,1.492,615,2.443,616,2.443,617,3.955,618,1.492,619,3.101,620,2.584,621,2.035,622,3.585,623,1.492,624,1.492,625,1.492,626,1.492,627,1.492,628,1.492,629,1.492,630,1.492,631,1.492]],["title/guards/LoginGuardian.html",[139,2.035,140,2.035]],["body/guards/LoginGuardian.html",[3,0.456,4,0.4,9,0.4,14,2.281,19,0.71,24,0.456,33,0.033,34,0.456,35,0.294,42,0.726,74,0.026,75,0.026,136,1.88,137,4.922,140,3.199,167,1.717,169,0.515,171,1.444,173,1.182,177,1.118,180,3.523,182,0.984,184,1.291,185,0.808,186,1.182,189,0.858,202,1.326,228,2.087,235,2.872,236,2.281,241,1.88,250,2.281,328,2.162,341,2.541,342,2.366,632,3.965,633,4.55,634,3.303,635,3.965,636,3.965,637,4.99,638,3.965,639,5.732,640,5.462,641,5.732,642,3.965,643,4.99,644,3.965,645,3.965,646,3.965]],["title/components/NavbarComponent.html",[0,0.084,57,0.626]],["body/components/NavbarComponent.html",[0,0.134,1,0.6,2,1.158,3,0.386,4,0.338,5,0.945,7,0.945,8,0.945,9,0.338,11,0.867,12,1.638,13,1.365,17,1.262,19,0.655,24,0.386,33,0.033,34,0.386,35,0.249,36,0.726,37,1.262,38,1.262,39,0.661,40,1.516,41,0.945,42,0.782,43,0.945,44,0.6,45,0.945,46,0.6,47,0.945,48,0.661,49,0.945,50,0.661,51,0.867,52,0.945,53,0.6,54,0.945,55,0.6,56,0.945,57,1.06,58,0.945,59,0.661,60,0.945,61,0.6,62,0.945,63,0.6,64,0.945,65,0.661,66,0.794,67,0.945,68,0.661,69,0.945,70,0.867,71,0.6,72,0.867,73,0.945,74,0.023,75,0.023,136,1.589,146,2.869,152,3.237,154,3.237,169,0.436,171,1.221,173,1.06,177,0.945,180,3.317,182,0.883,184,0.867,185,0.543,186,0.794,189,0.726,190,1.375,202,1.121,228,2.143,241,1.589,346,2.122,572,2.424,573,2.424,647,2.793,648,4.476,649,4.476,650,4.476,651,4.802,652,3.352,653,3.352,654,3.352,655,3.352,656,2.793]],["title/components/PauseComponent.html",[0,0.084,59,0.626]],["body/components/PauseComponent.html",[0,0.131,1,0.573,2,1.122,3,0.368,4,0.323,5,0.902,7,0.902,8,0.902,9,0.323,11,0.828,12,1.629,13,1.357,17,1.223,19,0.416,21,2.314,24,0.368,33,0.033,34,0.368,35,0.237,36,0.693,37,1.223,38,1.223,39,0.631,40,1.488,41,0.902,42,0.768,43,0.902,44,0.573,45,0.902,46,0.573,47,0.902,48,0.631,49,0.902,50,0.631,51,1.273,52,0.902,53,0.573,54,0.902,55,0.573,56,0.902,57,0.631,58,0.902,59,1.041,60,0.902,61,0.573,62,0.902,63,0.573,64,0.902,65,0.631,66,0.758,67,0.902,68,0.631,69,0.902,70,0.828,71,0.573,72,0.828,73,0.902,74,0.022,75,0.022,169,0.416,173,1.028,182,1.041,184,0.828,185,0.702,186,0.758,189,0.939,190,1.332,206,3.815,264,1.07,346,2.057,358,2.781,359,3.155,363,2.832,369,2.781,374,2.051,375,3.137,434,3.614,438,2.666,440,4.396,450,2.666,520,2.666,657,2.666,658,4.338,659,4.338,660,4.338,661,4.338,662,4.396,663,4.338,664,3.2,665,3.2,666,4.338,667,4.338,668,4.338,669,3.2,670,3.2,671,3.614,672,4.338,673,4.338,674,4.338]],["title/components/RegisterComponent.html",[0,0.084,61,0.568]],["body/components/RegisterComponent.html",[0,0.099,1,0.35,2,0.783,3,0.225,4,0.197,5,0.551,6,1.017,7,0.551,8,0.551,9,0.197,11,0.505,12,1.51,13,1.253,15,1.577,17,0.854,19,0.543,23,1.252,24,0.225,33,0.034,34,0.225,35,0.145,36,0.423,37,0.854,38,0.854,39,0.385,40,1.178,41,0.551,42,0.608,43,0.551,44,0.35,45,0.551,46,0.35,47,0.551,48,0.385,49,0.551,50,0.385,51,0.505,52,0.551,53,0.35,54,0.551,55,0.35,56,0.551,57,0.385,58,0.551,59,0.385,60,0.551,61,0.748,62,0.551,63,0.35,64,0.551,65,0.385,66,0.463,67,0.551,68,0.385,69,0.551,70,0.505,71,0.35,72,0.505,73,0.551,74,0.016,75,0.016,107,1.124,127,1.252,136,0.926,143,1.435,151,3.53,169,0.254,170,0.783,171,0.711,173,0.717,177,0.551,180,2.87,182,0.943,184,0.505,185,0.676,186,0.463,189,0.655,190,0.93,193,1.24,202,0.653,221,2.752,224,1.252,225,3.02,228,1.741,232,1.012,233,1.012,235,1.124,241,0.926,250,1.124,255,1.577,261,2.752,262,1.252,264,1.397,266,2.403,267,3.26,271,1.941,272,1.252,273,2.601,275,2.752,278,2.133,279,1.124,280,2.752,281,2.133,282,1.252,284,1.742,286,1.124,287,0.926,289,2.133,290,2.133,291,2.601,292,2.403,294,1.941,295,1.412,297,2.681,298,1.931,299,1.742,305,0.926,312,1.252,314,1.742,315,1.742,324,1.252,325,1.252,326,2.133,327,1.941,342,0.926,357,2.897,372,1.252,377,1.941,378,1.742,379,1.941,380,2.133,381,1.252,384,1.252,389,1.252,390,2.376,395,3.02,396,1.742,478,2.491,543,1.412,551,3.765,554,3.02,556,3.607,558,1.627,572,1.412,573,1.412,588,1.627,589,2.189,590,1.412,591,2.522,592,1.627,593,2.681,594,1.627,595,1.412,596,1.627,597,2.522,598,1.412,599,1.627,600,1.627,601,1.627,607,1.627,608,1.627,609,2.522,610,1.627,611,1.627,612,2.522,620,2.522,621,1.627,656,2.522,675,1.627,676,3.027,677,3.027,678,3.707,679,3.027,680,3.707,681,3.707,682,4.782,683,3.027,684,1.953,685,1.953,686,1.953,687,3.707,688,1.953,689,2.522,690,3.027,691,1.953,692,3.707,693,1.953,694,3.027,695,1.953,696,1.953,697,1.627,698,1.953,699,3.027,700,1.953,701,1.953,702,1.953,703,1.953,704,1.953,705,1.953,706,3.027,707,2.522,708,1.953,709,1.953,710,3.707,711,3.707,712,4.177,713,3.027,714,3.027,715,3.027,716,3.027,717,3.027,718,1.953,719,2.522,720,3.027,721,1.953,722,1.953,723,1.953,724,1.953,725,1.953,726,1.953,727,1.412,728,1.953,729,1.953]],["title/components/ScoreItemComponent.html",[0,0.084,65,0.626]],["body/components/ScoreItemComponent.html",[0,0.137,1,0.627,2,1.191,3,0.403,4,0.353,5,0.987,7,0.987,8,0.987,9,0.353,11,0.905,12,1.646,13,1.373,17,1.299,19,0.455,24,0.403,33,0.033,34,0.403,35,0.26,36,0.757,37,1.299,38,1.299,39,0.69,40,1.542,41,0.987,42,0.749,43,0.987,44,0.627,45,0.987,46,0.627,47,0.987,48,0.69,49,0.987,50,0.69,51,0.905,52,0.987,53,0.627,54,0.987,55,0.627,56,0.987,57,0.69,58,0.987,59,0.69,60,0.987,61,0.627,62,0.987,63,0.627,64,0.987,65,1.079,66,1.46,67,0.987,68,0.69,69,0.987,70,0.905,71,0.627,72,0.905,73,0.987,74,0.024,75,0.024,125,3.33,169,0.455,182,0.69,185,0.745,193,1.17,305,2.183,346,2.183,356,3.33,407,2.014,730,3.836,731,2.915,732,4.605,733,4.605,734,4.605,735,3.499,736,3.499,737,2.915,738,2.915,739,4.605,740,4.605]],["title/components/ScoreboardsComponent.html",[0,0.084,63,0.568]],["body/components/ScoreboardsComponent.html",[0,0.127,1,0.541,2,1.078,3,0.347,4,0.305,5,0.851,7,0.851,8,0.851,9,0.305,11,0.781,12,1.617,13,1.347,17,1.176,19,0.542,22,2.264,24,0.347,33,0.034,34,0.347,35,0.224,36,0.653,37,1.176,38,1.176,39,0.595,40,1.452,41,0.851,42,0.749,43,0.851,44,0.541,45,0.851,46,0.541,47,0.851,48,0.595,49,0.851,50,0.595,51,0.781,52,0.851,53,0.541,54,0.851,55,0.541,56,0.851,57,0.595,58,0.851,59,0.595,60,0.851,61,0.541,62,0.851,63,0.922,64,0.851,65,0.595,66,0.715,67,0.851,68,0.595,69,0.851,70,0.781,71,0.541,72,0.781,73,0.851,74,0.021,75,0.021,152,3.014,167,1.806,169,0.392,170,1.078,173,0.987,175,2.682,177,0.851,182,1.015,184,0.781,185,0.675,186,0.715,189,0.902,190,1.582,202,1.009,215,3.473,228,2.034,232,1.009,233,1.009,241,1.431,242,2.183,346,1.976,380,2.399,543,2.183,737,5.087,738,4.654,741,2.515,742,4.168,743,4.168,744,4.774,745,5.149,746,3.019,747,3.019,748,3.019,749,3.014,750,4.168,751,4.168,752,3.473,753,3.473,754,3.019,755,3.019,756,3.019,757,3.019,758,3.019,759,3.019]],["title/components/SettingsComponent.html",[0,0.084,68,0.626]],["body/components/SettingsComponent.html",[0,0.095,1,0.331,2,0.751,3,0.213,4,0.187,5,0.522,6,0.964,7,0.522,8,0.522,9,0.187,11,0.479,12,1.495,13,1.239,15,1.512,17,0.819,19,0.465,22,1.698,24,0.213,28,1.896,29,0.964,30,0.964,33,0.034,34,0.213,35,0.137,36,0.4,37,0.819,38,0.819,39,0.365,40,1.144,41,0.522,42,0.59,43,0.522,44,0.331,45,0.522,46,0.331,47,0.522,48,0.365,49,0.522,50,0.365,51,0.479,52,0.522,53,0.331,54,0.522,55,0.331,56,0.522,57,0.365,58,0.522,59,0.365,60,0.522,61,0.331,62,0.522,63,0.331,64,0.522,65,0.365,66,0.438,67,0.522,68,0.8,69,1.656,70,0.479,71,0.331,72,0.479,73,0.522,74,0.015,75,0.015,107,1.065,143,2.217,167,1.257,169,0.24,170,0.751,173,0.687,175,2.113,177,0.522,182,0.998,184,0.479,185,0.58,186,0.438,189,0.775,190,1.1,232,0.971,233,1.564,236,1.67,261,2.334,262,1.186,264,1.474,266,2.536,267,2.996,272,1.186,273,2.334,275,2.691,278,2.061,279,2.536,280,2.813,281,2.061,282,1.186,284,2.061,285,1.338,286,2.334,287,2.574,289,1.065,290,1.67,291,2.061,292,1.67,294,2.296,298,1.512,299,1.065,302,1.541,305,0.877,309,1.338,310,2.933,311,1.338,312,1.186,314,1.065,315,1.065,316,2.296,318,1.338,321,1.338,324,1.186,325,1.186,326,2.061,352,1.86,358,1.86,359,2.825,363,2.061,369,1.86,370,1.541,374,1.186,377,1.186,378,3.124,379,1.186,380,1.67,381,1.186,382,2.418,384,1.186,386,1.541,389,1.186,390,2.296,391,1.541,392,1.541,396,2.061,397,2.418,398,2.933,399,3.379,418,3.671,419,3.671,436,1.541,460,2.418,476,2.418,477,2.418,478,1.512,480,2.418,481,2.418,486,3.379,511,1.338,554,1.338,589,1.338,590,1.338,593,2.099,595,1.338,598,1.338,605,2.984,606,1.541,689,1.541,727,1.338,749,2.099,760,1.541,761,3.582,762,2.902,763,4.056,764,4.056,765,2.902,766,1.85,767,1.85,768,1.85,769,1.85,770,4.056,771,4.056,772,4.056,773,1.85,774,1.85,775,1.85,776,1.85,777,2.902,778,2.902,779,2.902,780,2.902,781,1.85,782,1.85,783,2.902,784,1.85,785,1.85,786,3.582,787,3.582,788,3.582,789,3.582,790,3.582,791,1.85,792,4.056,793,1.85,794,4.676,795,1.85,796,1.85,797,1.85,798,1.85,799,1.85,800,2.902,801,4.056,802,2.418,803,1.85,804,1.85,805,1.85,806,4.676,807,1.85,808,2.902,809,1.85,810,1.85,811,1.85,812,1.85,813,1.85,814,3.582,815,1.85,816,1.85,817,1.85,818,3.582,819,1.85,820,2.902,821,1.85,822,1.85,823,1.85,824,1.85,825,2.902,826,1.85]],["title/injectables/SnakeCommunicationsService.html",[28,1.156,328,1.375]],["body/injectables/SnakeCommunicationsService.html",[3,0.229,4,0.201,9,0.201,14,1.144,19,0.626,24,0.229,25,1.968,26,2.921,27,1.438,28,1.118,31,2.426,32,1.144,33,0.034,34,0.229,35,0.147,42,0.701,66,1.079,74,0.016,75,0.016,127,3.324,143,2.458,169,0.258,170,0.794,171,2.045,173,0.727,177,0.561,182,1.164,184,1.246,185,0.909,186,1.141,189,1.197,193,1.611,200,1.144,202,0.665,207,1.656,232,1.41,233,1.41,255,2.196,264,1.78,328,1.33,329,1.274,333,1.656,335,2.22,339,4.372,341,1.274,342,2.577,352,4.047,363,2.158,378,2.426,407,3.231,417,1.656,433,2.557,444,1.656,472,0.942,473,1.656,478,1.599,519,1.438,568,1.438,579,1.656,662,3.513,697,1.656,802,3.513,827,4.952,828,1.656,829,3.75,830,3.75,831,3.75,832,3.07,833,4.217,834,4.217,835,4.217,836,4.217,837,3.07,838,3.07,839,3.07,840,3.75,841,4.217,842,3.07,843,1.988,844,1.988,845,1.988,846,1.988,847,1.988,848,1.988,849,1.988,850,1.988,851,3.07,852,1.988,853,3.07,854,1.988,855,3.07,856,1.988,857,1.988,858,3.07,859,3.07,860,1.988,861,1.988,862,5.021,863,1.988,864,3.07,865,1.988,866,1.988,867,1.988,868,1.988,869,1.988,870,1.988,871,1.988,872,1.988,873,1.656,874,1.988,875,3.75,876,1.988,877,1.988,878,1.988,879,1.988,880,1.988,881,1.988,882,1.988,883,1.988,884,1.988,885,1.988,886,1.988,887,1.988,888,1.988,889,1.988,890,1.988,891,1.988,892,1.988,893,1.988,894,3.75,895,1.988,896,3.07,897,3.07,898,1.988,899,1.988,900,1.988,901,1.988,902,1.988,903,1.988,904,1.988,905,1.988,906,5.435,907,4.217,908,1.988,909,1.988,910,1.988,911,1.988,912,1.988,913,1.988,914,1.988,915,1.988,916,1.988,917,1.988,918,1.988,919,1.988,920,1.988]],["title/classes/User.html",[35,0.236,472,1.505]],["body/classes/User.html",[3,0.448,4,0.393,9,0.393,33,0.033,34,0.448,35,0.289,42,0.718,66,1.392,74,0.025,75,0.025,169,0.506,170,1.276,182,1.123,185,0.922,186,1.462,193,2.008,221,3.381,298,2.57,407,2.839,472,2.975,921,3.894,922,3.244,923,5.417,924,5.417,925,3.894,926,6.17,927,6.17,928,3.894,929,3.894,930,3.894,931,4.934,932,4.111]],["title/injectables/UserService.html",[228,1.156,328,1.375]],["body/injectables/UserService.html",[3,0.352,4,0.308,9,0.308,14,1.758,19,0.624,24,0.352,33,0.034,34,0.352,35,0.227,42,0.699,74,0.022,75,0.022,117,2.209,150,2.694,151,2.694,169,0.397,170,1.087,171,1.75,173,0.996,177,0.862,182,1.154,184,1.243,185,0.838,186,1.138,189,1.214,193,1.406,202,1.022,221,2.419,228,1.531,232,1.022,233,1.022,264,1.406,328,1.821,329,1.958,341,1.958,342,2.815,472,2.278,478,2.696,538,4.672,556,3.475,568,3.475,651,4.311,933,2.545,934,5.175,935,5.175,936,5.175,937,3.055,938,5.426,939,4.203,940,4.805,941,4.203,942,3.055,943,3.055,944,3.055,945,3.055,946,3.055,947,3.055,948,3.055,949,3.055,950,3.055,951,3.055,952,3.055,953,3.055,954,3.055,955,3.055,956,2.545,957,2.545,958,2.545,959,3.055,960,3.055,961,3.055,962,3.055,963,3.055,964,3.055,965,3.055,966,4.805,967,4.805,968,4.805,969,5.175,970,5.175,971,4.805,972,4.203,973,3.055,974,3.055,975,3.055,976,3.055]],["title/coverage.html",[977,3.595]],["body/coverage.html",[0,0.167,1,0.638,9,0.359,10,2.968,13,0.771,28,1.297,33,0.033,35,0.264,39,0.703,44,0.638,46,0.638,48,0.703,50,0.703,53,0.638,55,0.638,57,0.703,59,0.703,61,0.638,63,0.638,65,0.703,68,0.703,71,0.638,74,0.024,75,0.024,109,2.576,118,2.576,125,2.576,139,2.284,140,2.284,155,2.576,165,2.968,166,2.968,185,0.577,218,2.968,227,2.284,228,1.297,264,1.191,287,3.062,328,2.249,330,2.968,344,2.968,348,2.968,401,2.968,402,2.968,413,2.968,472,1.689,533,2.968,633,2.968,634,2.968,647,2.968,657,2.968,675,2.968,730,2.968,731,2.968,741,2.968,753,2.968,760,2.968,827,2.968,828,2.968,922,2.968,932,2.968,933,2.968,977,2.968,978,3.563,979,3.882,980,4.66,981,5.716,982,2.576,983,3.563,984,5.193,985,3.563,986,4.66,987,3.563,988,4.66,989,3.563,990,4.66,991,3.563,992,3.563,993,3.563,994,2.968,995,3.563,996,3.563,997,3.563,998,3.563]],["title/dependencies.html",[79,2.194,999,1.924]],["body/dependencies.html",[24,0.495,33,0.034,74,0.027,75,0.027,79,2.477,98,4.098,99,3.797,107,2.477,136,2.041,163,2.759,200,2.477,201,3.586,956,3.586,957,4.375,958,3.586,1000,4.304,1001,6.335,1002,4.304,1003,4.304,1004,4.304,1005,4.304,1006,4.304,1007,3.586,1008,4.304,1009,4.304,1010,3.586,1011,4.304,1012,4.304,1013,4.304,1014,4.304,1015,4.304,1016,4.304,1017,4.304,1018,4.304,1019,4.304,1020,4.304]],["title/miscellaneous/enumerations.html",[1021,1.386,1022,3.177]],["body/miscellaneous/enumerations.html",[25,3.603,26,3.603,33,0.029,74,0.029,75,0.029,169,0.627,396,2.776,527,4.019,671,4.019,727,3.488,1021,2.512,1022,4.019,1023,5.621,1024,4.824,1025,4.824,1026,4.824,1027,4.019,1028,4.824,1029,4.824]],["title/miscellaneous/functions.html",[1021,1.386,1030,3.177]],["body/miscellaneous/functions.html",[13,1.289,33,0.032,74,0.029,75,0.029,169,0.629,189,1.218,190,1.486,979,4.961,982,4.306,1021,2.519,1030,4.03,1031,4.837]],["title/index.html",[169,0.346,519,1.924,1032,2.66]],["body/index.html",[0,0.145,4,0.396,33,0.026,42,0.572,74,0.026,75,0.026,92,2.519,163,3.181,167,1.702,210,2.841,264,1.314,469,3.273,575,3.273,707,4.531,719,3.273,873,4.76,982,4.261,999,2.841,1007,3.273,1027,4.134,1033,4.962,1034,3.929,1035,5.439,1036,5.439,1037,3.273,1038,3.929,1039,6.11,1040,3.929,1041,3.929,1042,3.929,1043,3.929,1044,3.929,1045,3.929,1046,3.929,1047,3.929,1048,3.929,1049,3.929,1050,3.929,1051,5.439,1052,3.929,1053,3.929,1054,3.929,1055,3.929,1056,3.929,1057,4.962,1058,5.713,1059,3.929,1060,4.962,1061,4.962,1062,3.929,1063,6.017,1064,3.929,1065,3.929,1066,3.929,1067,4.962,1068,3.929,1069,3.929,1070,3.929,1071,3.929,1072,3.929,1073,3.929,1074,5.439,1075,3.929,1076,2.841,1077,3.929]],["title/modules.html",[78,2.247]],["body/modules.html",[33,0.029,74,0.029,75,0.029,77,2.807,78,2.54,89,2.807,99,4.091,157,3.126,1078,5.657,1079,5.657,1080,5.975,1081,4.877,1082,4.877]],["title/overview.html",[1076,3.12]],["body/overview.html",[1,1.094,2,0.907,28,1.876,33,0.033,35,0.26,36,0.759,39,0.691,44,0.923,46,0.923,48,1.016,50,1.016,53,0.923,55,0.923,57,1.016,59,1.079,61,0.98,63,0.923,65,1.016,68,1.016,71,0.923,74,0.024,75,0.024,76,1.826,77,3.791,78,1.826,79,2.018,80,2.535,81,2.535,82,2.535,83,2.247,84,2.921,85,2.921,86,2.921,87,2.921,88,2.921,89,3.15,90,3.334,91,2.535,92,2.247,139,2.247,157,3.645,158,2.921,329,2.247,749,3.726,752,3.841,1076,2.535,1083,3.506]],["title/properties.html",[170,0.986,999,1.924]],["body/properties.html",[33,0.031,74,0.03,75,0.03,170,1.301,1037,4.191,1084,5.031]],["title/miscellaneous/variables.html",[1021,1.386,1085,3.177]],["body/miscellaneous/variables.html",[33,0.033,74,0.028,75,0.028,118,3.902,169,0.585,185,0.729,232,1.805,233,1.506,236,2.591,994,3.751,1010,3.751,1021,2.345,1085,3.751,1086,4.503,1087,4.503,1088,4.503,1089,4.503,1090,4.503,1091,4.503,1092,5.779,1093,4.503,1094,4.503,1095,4.503,1096,5.396,1097,4.503,1098,4.503,1099,4.503,1100,4.503,1101,4.503,1102,4.503,1103,4.503,1104,4.503,1105,4.503,1106,4.503,1107,4.503,1108,4.503,1109,4.503]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":287,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1084,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":392,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["0.2s",{"_index":317,"title":{},"body":{"components/ContactComponent.html":{}}}],["0.3s",{"_index":398,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["0.5",{"_index":383,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["0.7",{"_index":805,"title":{},"body":{"components/SettingsComponent.html":{}}}],["0.9rem",{"_index":728,"title":{},"body":{"components/RegisterComponent.html":{}}}],["0/1",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":269,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{}}}],["070b10",{"_index":597,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["1",{"_index":749,"title":{},"body":{"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["1.2em",{"_index":303,"title":{},"body":{"components/ContactComponent.html":{}}}],["1.3rem",{"_index":592,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["100",{"_index":380,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["100vh",{"_index":723,"title":{},"body":{"components/RegisterComponent.html":{}}}],["10px",{"_index":286,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["12px",{"_index":724,"title":{},"body":{"components/RegisterComponent.html":{}}}],["13",{"_index":1083,"title":{},"body":{"overview.html":{}}}],["13.10.2",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["15px",{"_index":395,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["169384997647",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16px",{"_index":397,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["17.0.0",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["17.1.0",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":1007,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["18px",{"_index":394,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["1:169384997647:web:53c3c0e1a388f9bc2ac47a",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b5e20",{"_index":304,"title":{},"body":{"components/ContactComponent.html":{}}}],["1dbf73",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["1em",{"_index":307,"title":{},"body":{"components/ContactComponent.html":{}}}],["1px",{"_index":321,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["2",{"_index":751,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["2.3.0",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":293,"title":{},"body":{"components/ContactComponent.html":{}}}],["20",{"_index":460,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["20px",{"_index":279,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["23px",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["247b56",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["25px",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{}}}],["2bf73",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2bf73.appspot.com",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2bf73.firebaseapp.com",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2px",{"_index":295,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["3",{"_index":752,"title":{},"body":{"components/ScoreboardsComponent.html":{},"overview.html":{}}}],["3.0.5",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":794,"title":{},"body":{"components/SettingsComponent.html":{}}}],["30px",{"_index":389,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["333",{"_index":812,"title":{},"body":{"components/SettingsComponent.html":{}}}],["388e3c",{"_index":296,"title":{},"body":{"components/ContactComponent.html":{}}}],["3ea62d",{"_index":826,"title":{},"body":{"components/SettingsComponent.html":{}}}],["3eff65",{"_index":825,"title":{},"body":{"components/SettingsComponent.html":{}}}],["4.18.2",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":589,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["40px",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["4b4f54",{"_index":596,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["4caf50",{"_index":319,"title":{},"body":{"components/ContactComponent.html":{}}}],["4px",{"_index":309,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["50",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["50px",{"_index":276,"title":{},"body":{"components/ContactComponent.html":{}}}],["555",{"_index":813,"title":{},"body":{"components/SettingsComponent.html":{}}}],["5px",{"_index":281,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["6",{"_index":715,"title":{},"body":{"components/RegisterComponent.html":{}}}],["60",{"_index":750,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["600px",{"_index":274,"title":{},"body":{"components/ContactComponent.html":{}}}],["66bb6a",{"_index":313,"title":{},"body":{"components/ContactComponent.html":{}}}],["68f0b0",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["7.8.0",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["757575",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{}}}],["80",{"_index":753,"title":{},"body":{"components/ScoreboardsComponent.html":{},"coverage.html":{}}}],["8592",{"_index":718,"title":{},"body":{"components/RegisterComponent.html":{}}}],["8px",{"_index":391,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["90",{"_index":809,"title":{},"body":{"components/SettingsComponent.html":{}}}],["95f1c1",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["9999",{"_index":388,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["9px",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["a.points",{"_index":759,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["a:hover",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{}}}],["absolute",{"_index":385,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{}}}],["abstractcontrol",{"_index":690,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accordingly",{"_index":780,"title":{},"body":{"components/SettingsComponent.html":{}}}],["account",{"_index":586,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":639,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["actual_component",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":1070,"title":{},"body":{"index.html":{}}}],["again",{"_index":580,"title":{},"body":{"components/LoginComponent.html":{}}}],["aizasyc4k7mi",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":290,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["already",{"_index":706,"title":{},"body":{"components/RegisterComponent.html":{}}}],["alternative",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular",{"_index":1035,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":201,"title":{},"body":{"directives/BodyClassDirective.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["angular/compiler",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/UserService.html":{}}}],["angular/forms",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["apikey",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":331,"title":{},"body":{"injectables/ContactService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":164,"title":{},"body":{"modules/AppServerModule.html":{}}}],["appbodyclass",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":822,"title":{},"body":{"components/SettingsComponent.html":{}}}],["appid",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1044,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":907,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["appmodule",{"_index":77,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":89,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":157,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["arguments",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["arial",{"_index":721,"title":{},"body":{"components/RegisterComponent.html":{}}}],["artifacts",{"_index":1053,"title":{},"body":{"index.html":{}}}],["async",{"_index":840,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["auth",{"_index":938,"title":{},"body":{"injectables/UserService.html":{}}}],["auth,private",{"_index":959,"title":{},"body":{"injectables/UserService.html":{}}}],["auth/email",{"_index":705,"title":{},"body":{"components/RegisterComponent.html":{}}}],["authdomain",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":277,"title":{},"body":{"components/ContactComponent.html":{}}}],["automatically",{"_index":1045,"title":{},"body":{"index.html":{}}}],["available",{"_index":1082,"title":{},"body":{"modules.html":{}}}],["await",{"_index":891,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["b",{"_index":757,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["b.points",{"_index":758,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["back",{"_index":720,"title":{},"body":{"components/RegisterComponent.html":{}}}],["background",{"_index":266,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["backgroundcolor",{"_index":353,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["bbb",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["best",{"_index":530,"title":{},"body":{"components/HomeComponent.html":{}}}],["bestscore",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["black",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["block",{"_index":727,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["board",{"_index":486,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardarray",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["boardcols",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardcolsitem",{"_index":786,"title":{},"body":{"components/SettingsComponent.html":{}}}],["boardrows",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["boardrowsitem",{"_index":787,"title":{},"body":{"components/SettingsComponent.html":{}}}],["body",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["bodyclassdirective",{"_index":71,"title":{"directives/BodyClassDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bold",{"_index":325,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["boolean",{"_index":235,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{}}}],["bootstrap",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["border",{"_index":280,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["bottom",{"_index":294,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["box",{"_index":284,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["break",{"_index":502,"title":{},"body":{"components/HomeComponent.html":{}}}],["browse",{"_index":1080,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["btn:hover",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["build",{"_index":873,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"index.html":{}}}],["button",{"_index":310,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["button:active",{"_index":320,"title":{},"body":{"components/ContactComponent.html":{}}}],["button:hover",{"_index":318,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["c8e6c9",{"_index":283,"title":{},"body":{"components/ContactComponent.html":{}}}],["calc(100",{"_index":815,"title":{},"body":{"components/SettingsComponent.html":{}}}],["canactivate",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{}}}],["canactivate(route",{"_index":638,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["canactivate:[loginguardian",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["capabilities",{"_index":1072,"title":{},"body":{"index.html":{}}}],["case",{"_index":500,"title":{},"body":{"components/HomeComponent.html":{}}}],["catch",{"_index":893,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["catch(error",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["ccc",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["celltype",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/enumerations.html":{}}}],["celltype.block",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.empty",{"_index":509,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.food",{"_index":512,"title":{},"body":{"components/HomeComponent.html":{}}}],["celltype.snake",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{}}}],["center",{"_index":291,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["change",{"_index":1047,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["changes",{"_index":778,"title":{},"body":{"components/SettingsComponent.html":{}}}],["changestatemessage",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["changestatemessage(gamestate",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{}}}],["characters",{"_index":716,"title":{},"body":{"components/RegisterComponent.html":{}}}],["check",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["choice",{"_index":1066,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["class.directive",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["class.directive.ts",{"_index":166,"title":{},"body":{"directives/BodyClassDirective.html":{},"coverage.html":{}}}],["class.directive.ts:10",{"_index":183,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:14",{"_index":191,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:22",{"_index":194,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["class.directive.ts:35",{"_index":188,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["classes",{"_index":921,"title":{},"body":{"classes/User.html":{}}}],["cli",{"_index":1036,"title":{},"body":{"index.html":{}}}],["close",{"_index":359,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["closed",{"_index":876,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["closeerrors",{"_index":355,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["closegameover",{"_index":406,"title":{},"body":{"components/GameOverComponent.html":{}}}],["closesettings",{"_index":763,"title":{},"body":{"components/SettingsComponent.html":{}}}],["cluster_appmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":158,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":159,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":160,"title":{},"body":{"modules/AppServerModule.html":{}}}],["code",{"_index":1049,"title":{},"body":{"index.html":{}}}],["col",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{}}}],["color",{"_index":267,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["colorcell",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{}}}],["colorcell(row",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["cols",{"_index":800,"title":{},"body":{"components/SettingsComponent.html":{}}}],["column",{"_index":301,"title":{},"body":{"components/ContactComponent.html":{}}}],["columns",{"_index":861,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["command",{"_index":1067,"title":{},"body":{"index.html":{}}}],["common/enums",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["common/user",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["communications.service",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["communications.service.ts",{"_index":828,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"coverage.html":{}}}],["communications.service.ts:106",{"_index":844,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:12",{"_index":865,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:13",{"_index":867,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:14",{"_index":863,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:15",{"_index":866,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:16",{"_index":842,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:47",{"_index":857,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:62",{"_index":848,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:66",{"_index":846,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:70",{"_index":856,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:76",{"_index":849,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:80",{"_index":850,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:84",{"_index":860,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:89",{"_index":847,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:93",{"_index":854,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["communications.service.ts:99",{"_index":852,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["conexión",{"_index":881,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["confirmpassword",{"_index":699,"title":{},"body":{"components/RegisterComponent.html":{}}}],["connection",{"_index":897,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.error(\"form",{"_index":708,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.error('error",{"_index":256,"title":{},"body":{"components/ContactComponent.html":{}}}],["console.error(error",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(\"game",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(\"score",{"_index":491,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(\"user",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('connection",{"_index":875,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log('error",{"_index":895,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log('idtoken",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('mail",{"_index":252,"title":{},"body":{"components/ContactComponent.html":{}}}],["console.log('unexpected",{"_index":902,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["console.log(error",{"_index":373,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["console.log(newboardcolsvalue",{"_index":799,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log(this.loginservice.gettoken",{"_index":645,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["console.log(this.userservice.gettoken",{"_index":242,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["const",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["constructor",{"_index":177,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["constructor(auth",{"_index":937,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(contactservice",{"_index":226,"title":{},"body":{"components/ContactComponent.html":{}}}],["constructor(http",{"_index":333,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["constructor(loginservice",{"_index":635,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["constructor(private",{"_index":202,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":370,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(renderer",{"_index":178,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["constructor(router",{"_index":652,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(snakecommunicationsservice",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["constructor(snakecomunicationsservice",{"_index":360,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["constructor(userservice",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["contact",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/NavbarComponent.html":{}}}],["contact'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["contact.component.css",{"_index":219,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.component.html",{"_index":220,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact/contact.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["contactcomponent",{"_index":44,"title":{"components/ContactComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactform",{"_index":243,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactservice",{"_index":227,"title":{"injectables/ContactService.html":{}},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"coverage.html":{}}}],["container",{"_index":271,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["content",{"_index":378,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["content.ng",{"_index":811,"title":{},"body":{"components/SettingsComponent.html":{}}}],["continue",{"_index":674,"title":{},"body":{"components/PauseComponent.html":{}}}],["cookie",{"_index":957,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["cookies",{"_index":939,"title":{},"body":{"injectables/UserService.html":{}}}],["cookies:cookieservice",{"_index":960,"title":{},"body":{"injectables/UserService.html":{}}}],["cookieservice",{"_index":940,"title":{},"body":{"injectables/UserService.html":{}}}],["correctly",{"_index":254,"title":{},"body":{"components/ContactComponent.html":{}}}],["courier",{"_index":263,"title":{},"body":{"components/ContactComponent.html":{}}}],["coverage",{"_index":977,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createuserwithemailandpassword",{"_index":950,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":962,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":314,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["d8e8d8",{"_index":268,"title":{},"body":{"components/ContactComponent.html":{}}}],["data",{"_index":338,"title":{},"body":{"injectables/ContactService.html":{}}}],["databaseurl",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ddd",{"_index":816,"title":{},"body":{"components/SettingsComponent.html":{}}}],["declarations",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["decoration",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["decorators",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["default",{"_index":232,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":182,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["definitive",{"_index":528,"title":{},"body":{"components/HomeComponent.html":{}}}],["dependencies",{"_index":79,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":1041,"title":{},"body":{"index.html":{}}}],["development",{"_index":1038,"title":{},"body":{"index.html":{}}}],["direction",{"_index":300,"title":{},"body":{"components/ContactComponent.html":{}}}],["directive",{"_index":39,"title":{"directives/BodyClassDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1052,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1056,"title":{},"body":{"index.html":{}}}],["display",{"_index":298,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"classes/User.html":{}}}],["displayname",{"_index":923,"title":{},"body":{"classes/User.html":{}}}],["dist",{"_index":1055,"title":{},"body":{"index.html":{}}}],["divider",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["document",{"_index":181,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["document:keydown",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{}}}],["document:keydown(event",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["documentation.component.css",{"_index":347,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.html",{"_index":345,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["documentationcomponent",{"_index":46,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["don't",{"_index":585,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1064,"title":{},"body":{"index.html":{}}}],["e8f5e9",{"_index":308,"title":{},"body":{"components/ContactComponent.html":{}}}],["ease",{"_index":399,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["email",{"_index":221,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email/password",{"_index":564,"title":{},"body":{"components/LoginComponent.html":{}}}],["emitevent",{"_index":783,"title":{},"body":{"components/SettingsComponent.html":{}}}],["empty",{"_index":1025,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["encapsulation",{"_index":676,"title":{},"body":{"components/RegisterComponent.html":{}}}],["end",{"_index":1063,"title":{},"body":{"index.html":{}}}],["enter",{"_index":713,"title":{},"body":{"components/RegisterComponent.html":{}}}],["enumerations",{"_index":1022,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":894,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["err.message",{"_index":898,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["error",{"_index":255,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["error('no",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{}}}],["error.code",{"_index":704,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessage",{"_index":357,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["erroroccurred",{"_index":829,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["errors",{"_index":349,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["errors.component.css",{"_index":350,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors.component.html",{"_index":351,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["errors/errors.component",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["errorscomponent",{"_index":48,"title":{"components/ErrorsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorsvisible",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["event",{"_index":206,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["event.key",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["eventemitter",{"_index":363,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["execute",{"_index":1060,"title":{},"body":{"index.html":{}}}],["experience",{"_index":529,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["express",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["express.express",{"_index":1031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["f1f1f1",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{}}}],["failed",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":236,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuardian.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":262,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ff4c4c",{"_index":367,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["ffe6e6",{"_index":400,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["fff",{"_index":598,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ffffff",{"_index":591,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":1048,"title":{},"body":{"index.html":{}}}],["firebase",{"_index":1010,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":1069,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":804,"title":{},"body":{"components/SettingsComponent.html":{}}}],["flex",{"_index":299,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["font",{"_index":261,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["food",{"_index":1026,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["form",{"_index":297,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["formcontrol(20",{"_index":770,"title":{},"body":{"components/SettingsComponent.html":{}}}],["formgroup",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup.get('password')!.value",{"_index":698,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formgroup.get('passwordconfirm')!.value",{"_index":700,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formlogin",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{}}}],["formreg",{"_index":680,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1030,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1073,"title":{},"body":{"index.html":{}}}],["g",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["game",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["gameover",{"_index":1028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gameovercomponent",{"_index":50,"title":{"components/GameOverComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameovervisible",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestate",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["gamestates",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"miscellaneous/enumerations.html":{}}}],["gamestates.gameover",{"_index":489,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.none",{"_index":507,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.paused",{"_index":503,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.running",{"_index":505,"title":{},"body":{"components/HomeComponent.html":{}}}],["gamestates.win",{"_index":506,"title":{},"body":{"components/HomeComponent.html":{}}}],["generate",{"_index":1051,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1034,"title":{},"body":{"index.html":{}}}],["getauth",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["getbestscore",{"_index":832,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getbestscore(howmany",{"_index":843,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getbestscore(howmany:number",{"_index":919,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getgamestates",{"_index":833,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["gets",{"_index":926,"title":{},"body":{"classes/User.html":{}}}],["getscore",{"_index":834,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getsnakeboardupdate",{"_index":835,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["getting",{"_index":1032,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":934,"title":{},"body":{"injectables/UserService.html":{}}}],["github",{"_index":582,"title":{},"body":{"components/LoginComponent.html":{}}}],["githubauthprovider",{"_index":955,"title":{},"body":{"injectables/UserService.html":{}}}],["githubauthprovider()).then((usercredential",{"_index":974,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":719,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["goback",{"_index":682,"title":{},"body":{"components/RegisterComponent.html":{}}}],["google",{"_index":578,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleauthprovider",{"_index":954,"title":{},"body":{"injectables/UserService.html":{}}}],["googleauthprovider()).then((usercredential",{"_index":973,"title":{},"body":{"injectables/UserService.html":{}}}],["graph",{"_index":1081,"title":{},"body":{"modules.html":{}}}],["green",{"_index":323,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{}}}],["group",{"_index":593,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["guard",{"_index":139,"title":{"guards/LoginGuardian.html":{}},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["guardian",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guardian.ts",{"_index":634,"title":{},"body":{"guards/LoginGuardian.html":{},"coverage.html":{}}}],["guardian.ts:11",{"_index":642,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["guardian.ts:8",{"_index":636,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["guards",{"_index":632,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["h2",{"_index":590,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["ha",{"_index":882,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["handle",{"_index":900,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["handlekeydown",{"_index":661,"title":{},"body":{"components/PauseComponent.html":{}}}],["handlekeydown(event",{"_index":667,"title":{},"body":{"components/PauseComponent.html":{}}}],["handlekeypress",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{}}}],["handlekeypress(event",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{}}}],["headers",{"_index":906,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["height",{"_index":381,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["help",{"_index":1074,"title":{},"body":{"index.html":{}}}],["hide",{"_index":808,"title":{},"body":{"components/SettingsComponent.html":{}}}],["hideerrors",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidegameover",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidepassword",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidepause",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["hidesettings",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{}}}],["home",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["home.component.css",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":53,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hostlistener",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["hostlistener('document:keydown",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{}}}],["hostlistener('window:keydown",{"_index":668,"title":{},"body":{"components/PauseComponent.html":{}}}],["hostlisteners",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["howmany",{"_index":845,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["http",{"_index":335,"title":{},"body":{"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["http://localhost:4200",{"_index":1043,"title":{},"body":{"index.html":{}}}],["http://localhost:5273/api/contact/send",{"_index":340,"title":{},"body":{"injectables/ContactService.html":{}}}],["httpclient",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["httpclientmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["https://snakepro",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubconnection",{"_index":830,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["icon",{"_index":725,"title":{},"body":{"components/RegisterComponent.html":{}}}],["icon:hover",{"_index":729,"title":{},"body":{"components/RegisterComponent.html":{}}}],["identifier",{"_index":932,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["idtoken",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["img",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["implements",{"_index":167,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"guards/LoginGuardian.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["index",{"_index":169,"title":{"index.html":{}},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["initializeapp",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.firebase",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["inject",{"_index":198,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["inject(document",{"_index":203,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["injectable",{"_index":328,"title":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":329,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":726,"title":{},"body":{"components/RegisterComponent.html":{}}}],["inner",{"_index":819,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input",{"_index":305,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/SettingsComponent.html":{}}}],["input::placeholder",{"_index":599,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["input:focus",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["input:hover",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["input[type=\"number",{"_index":814,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input[type=\"number\"]:focus",{"_index":824,"title":{},"body":{"components/SettingsComponent.html":{}}}],["input[type=\"number\"]:hover",{"_index":823,"title":{},"body":{"components/SettingsComponent.html":{}}}],["inputs",{"_index":356,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/ScoreItemComponent.html":{}}}],["instanceof",{"_index":207,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["invalid",{"_index":709,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iserror",{"_index":222,"title":{},"body":{"components/ContactComponent.html":{}}}],["issuccess",{"_index":223,"title":{},"body":{"components/ContactComponent.html":{}}}],["item",{"_index":732,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["item.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":734,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item.component.html",{"_index":733,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item.component.ts",{"_index":731,"title":{},"body":{"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:9",{"_index":736,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["item/score",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["items",{"_index":379,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["js",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(idtoken",{"_index":915,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify(key",{"_index":908,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify(score",{"_index":917,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["json.stringify({columns",{"_index":912,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["justify",{"_index":377,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["karma",{"_index":1062,"title":{},"body":{"index.html":{}}}],["key",{"_index":697,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["keyboardevent",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{},"components/PauseComponent.html":{}}}],["label",{"_index":302,"title":{},"body":{"components/ContactComponent.html":{},"components/SettingsComponent.html":{}}}],["left",{"_index":386,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["link",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["literal",{"_index":735,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["localstorage.getitem('boardcols",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["localstorage.getitem('boardrows",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["localstorage.setitem('boardcols",{"_index":795,"title":{},"body":{"components/SettingsComponent.html":{}}}],["localstorage.setitem('boardrows",{"_index":797,"title":{},"body":{"components/SettingsComponent.html":{}}}],["log",{"_index":584,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["login(undefined",{"_index":943,"title":{},"body":{"injectables/UserService.html":{}}}],["login({email",{"_index":963,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.css",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.component",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":55,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginguardian",{"_index":140,"title":{"guards/LoginGuardian.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/LoginGuardian.html":{},"coverage.html":{}}}],["loginservice",{"_index":637,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["loginwithgithub",{"_index":935,"title":{},"body":{"injectables/UserService.html":{}}}],["loginwithgoogle",{"_index":936,"title":{},"body":{"injectables/UserService.html":{}}}],["logout",{"_index":651,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["logs",{"_index":967,"title":{},"body":{"injectables/UserService.html":{}}}],["long",{"_index":717,"title":{},"body":{"components/RegisterComponent.html":{}}}],["m4bpjrsbvw",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":258,"title":{},"body":{"components/ContactComponent.html":{}}}],["margin",{"_index":275,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["match",{"_index":711,"title":{},"body":{"components/RegisterComponent.html":{}}}],["matching",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":272,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["maximum",{"_index":801,"title":{},"body":{"components/SettingsComponent.html":{}}}],["measurementid",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":803,"title":{},"body":{"components/SettingsComponent.html":{}}}],["menu.ng",{"_index":807,"title":{},"body":{"components/SettingsComponent.html":{}}}],["message",{"_index":224,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["messagingsenderid",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":173,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["microsoft/signalr",{"_index":869,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["miscellaneous",{"_index":1021,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":701,"title":{},"body":{"components/RegisterComponent.html":{}}}],["module",{"_index":76,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["modules",{"_index":78,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["monospace",{"_index":265,"title":{},"body":{"components/ContactComponent.html":{}}}],["more",{"_index":1075,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navbar",{"_index":648,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["navbar.component.css",{"_index":650,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":649,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":57,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1042,"title":{},"body":{"index.html":{}}}],["navigatetoregister",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigationend",{"_index":199,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["need",{"_index":1068,"title":{},"body":{"index.html":{}}}],["new",{"_index":264,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newboardcolsvalue",{"_index":790,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardcolsvalue.tostring",{"_index":796,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardrowsvalue",{"_index":792,"title":{},"body":{"components/SettingsComponent.html":{}}}],["newboardrowsvalue.tostring",{"_index":798,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ng",{"_index":1039,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{}}}],["ngondestroy",{"_index":174,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["ngoninit",{"_index":175,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["ngx",{"_index":956,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["none",{"_index":396,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["null",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["number",{"_index":407,"title":{},"body":{"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/ScoreItemComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{}}}],["object",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":339,"title":{},"body":{"injectables/ContactService.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["oldboardcolsvalue",{"_index":788,"title":{},"body":{"components/SettingsComponent.html":{}}}],["oldboardrowsvalue",{"_index":789,"title":{},"body":{"components/SettingsComponent.html":{}}}],["ondestroy",{"_index":168,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["ongithublogin",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{}}}],["ongooglelogin",{"_index":541,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["onsubmit",{"_index":225,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["opacity",{"_index":806,"title":{},"body":{"components/SettingsComponent.html":{}}}],["optional",{"_index":186,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["out",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":821,"title":{},"body":{"components/SettingsComponent.html":{}}}],["outline",{"_index":817,"title":{},"body":{"components/SettingsComponent.html":{}}}],["output",{"_index":369,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["outputs",{"_index":358,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["over",{"_index":403,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["over.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["over.component.css",{"_index":405,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.html",{"_index":404,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts",{"_index":402,"title":{},"body":{"components/GameOverComponent.html":{},"coverage.html":{}}}],["over.component.ts:10",{"_index":408,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts:12",{"_index":410,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over.component.ts:9",{"_index":409,"title":{},"body":{"components/GameOverComponent.html":{}}}],["over/game",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/GameOverComponent.html":{},"coverage.html":{}}}],["overview",{"_index":1076,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["package",{"_index":999,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":278,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["page",{"_index":210,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"index.html":{}}}],["parameters",{"_index":184,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["password",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["password).then((usercredential",{"_index":965,"title":{},"body":{"injectables/UserService.html":{}}}],["passwordconfirm",{"_index":695,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordmatchvalidator",{"_index":681,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwords",{"_index":710,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pause",{"_index":658,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["pause.component.css",{"_index":660,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause.component.html",{"_index":659,"title":{},"body":{"components/PauseComponent.html":{}}}],["pause/pause.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["pausecomponent",{"_index":59,"title":{"components/PauseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paused",{"_index":671,"title":{},"body":{"components/PauseComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pausegame",{"_index":836,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["pausevisible",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{}}}],["platform",{"_index":1065,"title":{},"body":{"index.html":{}}}],["player",{"_index":737,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["playing",{"_index":412,"title":{},"body":{"components/GameOverComponent.html":{}}}],["please",{"_index":375,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/PauseComponent.html":{}}}],["pointer",{"_index":315,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["points",{"_index":738,"title":{},"body":{"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["position",{"_index":384,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["press",{"_index":672,"title":{},"body":{"components/PauseComponent.html":{}}}],["private",{"_index":171,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1033,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":858,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["properties",{"_index":170,"title":{"properties.html":{}},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provideauth",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["provideclienthydration",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":341,"title":{},"body":{"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["providefirebaseapp",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["public",{"_index":352,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["radius",{"_index":390,"title":{},"body":{"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["reactiveformsmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["red",{"_index":327,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["redirectto",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirectunauthorizedto",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reestablished",{"_index":879,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["reference",{"_index":1077,"title":{},"body":{"index.html":{}}}],["register",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["register'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["register(undefined",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["register({email",{"_index":961,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":678,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":679,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":61,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["relative",{"_index":594,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reload",{"_index":1046,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":187,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["renderer2",{"_index":179,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["required",{"_index":712,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reset",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["response",{"_index":248,"title":{},"body":{"components/ContactComponent.html":{}}}],["response.user",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{}}}],["restablecida",{"_index":884,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["restart",{"_index":376,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["results",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resumegame",{"_index":662,"title":{},"body":{"components/PauseComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["retro",{"_index":270,"title":{},"body":{"components/ContactComponent.html":{}}}],["return",{"_index":342,"title":{},"body":{"injectables/ContactService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["returned",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{}}}],["returns",{"_index":189,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":382,"title":{},"body":{"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["right",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ContactService.html":{},"guards/LoginGuardian.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":643,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["router",{"_index":180,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":641,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["routersubscription",{"_index":172,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["routes",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{}}}],["rows",{"_index":802,"title":{},"body":{"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["rtdb.europe",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":1027,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["rxjs",{"_index":200,"title":{},"body":{"directives/BodyClassDirective.html":{},"injectables/ContactService.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"dependencies.html":{}}}],["sans",{"_index":722,"title":{},"body":{"components/RegisterComponent.html":{}}}],["saved",{"_index":492,"title":{},"body":{"components/HomeComponent.html":{}}}],["savedboardcols",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["savedboardrows",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{},"components/SettingsComponent.html":{}}}],["savescore",{"_index":837,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["savescore(score",{"_index":851,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["savesettings",{"_index":764,"title":{},"body":{"components/SettingsComponent.html":{}}}],["scaffolding",{"_index":1050,"title":{},"body":{"index.html":{}}}],["score",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{}}}],["score.player",{"_index":739,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["score.points",{"_index":740,"title":{},"body":{"components/ScoreItemComponent.html":{}}}],["scoreboard",{"_index":215,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ScoreboardsComponent.html":{}}}],["scoreboards",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["scoreboards'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["scoreboards.component.css",{"_index":743,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["scoreboards.component.html",{"_index":742,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["scoreboards/score",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["scoreboards/scoreboards.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["scoreboardscomponent",{"_index":63,"title":{"components/ScoreboardsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scoreboardscomponent,canactivate:[loginguardian",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scoreitemcomponent",{"_index":65,"title":{"components/ScoreItemComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scores",{"_index":744,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["send",{"_index":259,"title":{},"body":{"components/ContactComponent.html":{}}}],["sendcontactform",{"_index":332,"title":{},"body":{"injectables/ContactService.html":{}}}],["sendcontactform(data",{"_index":336,"title":{},"body":{"injectables/ContactService.html":{}}}],["sending",{"_index":257,"title":{},"body":{"components/ContactComponent.html":{}}}],["sendtoken",{"_index":838,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sendtoken(idtoken",{"_index":853,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sent",{"_index":253,"title":{},"body":{"components/ContactComponent.html":{}}}],["serif",{"_index":312,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["serve",{"_index":1040,"title":{},"body":{"index.html":{}}}],["server",{"_index":163,"title":{},"body":{"modules/AppServerModule.html":{},"components/ErrorsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["servermodule",{"_index":162,"title":{},"body":{"modules/AppServerModule.html":{}}}],["service",{"_index":958,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["services/contact.service",{"_index":240,"title":{},"body":{"components/ContactComponent.html":{}}}],["services/snake",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["services/user.service",{"_index":241,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["set",{"_index":966,"title":{},"body":{"injectables/UserService.html":{}}}],["setmovement",{"_index":839,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["setmovement(key",{"_index":855,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sets",{"_index":927,"title":{},"body":{"classes/User.html":{}}}],["settings",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.css",{"_index":761,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":762,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["settingscomponent",{"_index":68,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["settingsvisible",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":285,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["showsettings",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{}}}],["sido",{"_index":883,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["sign",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{}}}],["signalr",{"_index":868,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signalr.hubconnection",{"_index":864,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signalr.hubconnectionbuilder",{"_index":871,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["signinwithemailandpassword",{"_index":951,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":964,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithpopup",{"_index":953,"title":{},"body":{"injectables/UserService.html":{}}}],["signinwithpopup(this.auth",{"_index":972,"title":{},"body":{"injectables/UserService.html":{}}}],["signout",{"_index":952,"title":{},"body":{"injectables/UserService.html":{}}}],["signout(this.auth",{"_index":975,"title":{},"body":{"injectables/UserService.html":{}}}],["size",{"_index":292,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["sizing",{"_index":595,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["snake",{"_index":527,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["snakeboardupdate",{"_index":831,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["snakecommunicationsservice",{"_index":28,"title":{"injectables/SnakeCommunicationsService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"coverage.html":{},"overview.html":{}}}],["snakecomunicationsservice",{"_index":354,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["snakepro",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snakeproweb",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["solid",{"_index":282,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["sortscores",{"_index":745,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":673,"title":{},"body":{"components/PauseComponent.html":{}}}],["span",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["span:hover",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["spin",{"_index":820,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/.../enums.ts",{"_index":1023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.ts",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.server.ts",{"_index":161,"title":{},"body":{"modules/AppServerModule.html":{}}}],["src/app/app.module.ts",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/body",{"_index":165,"title":{},"body":{"directives/BodyClassDirective.html":{},"coverage.html":{}}}],["src/app/contact/contact.component.ts",{"_index":218,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["src/app/contact/contact.component.ts:11",{"_index":239,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:12",{"_index":234,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:13",{"_index":238,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:14",{"_index":237,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:15",{"_index":229,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:19",{"_index":230,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/contact/contact.component.ts:23",{"_index":231,"title":{},"body":{"components/ContactComponent.html":{}}}],["src/app/documentation/documentation.component.ts",{"_index":344,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/errors/errors.component.ts",{"_index":348,"title":{},"body":{"components/ErrorsComponent.html":{},"coverage.html":{}}}],["src/app/errors/errors.component.ts:10",{"_index":364,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:11",{"_index":362,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:12",{"_index":361,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:14",{"_index":368,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:16",{"_index":366,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/errors/errors.component.ts:24",{"_index":365,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["src/app/game",{"_index":401,"title":{},"body":{"components/GameOverComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:104",{"_index":457,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:108",{"_index":455,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:112",{"_index":458,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:117",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:128",{"_index":452,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:132",{"_index":453,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:137",{"_index":454,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:16",{"_index":459,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:17",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:18",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":465,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:20",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:21",{"_index":461,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":462,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:23",{"_index":467,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:29",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":463,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:32",{"_index":456,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:71",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:89",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login",{"_index":633,"title":{},"body":{"guards/LoginGuardian.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:103",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:17",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:26",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:53",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:77",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":647,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:10",{"_index":653,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:17",{"_index":654,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/pause/pause.component.ts",{"_index":657,"title":{},"body":{"components/PauseComponent.html":{},"coverage.html":{}}}],["src/app/pause/pause.component.ts:11",{"_index":666,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/pause/pause.component.ts:17",{"_index":669,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/pause/pause.component.ts:9",{"_index":664,"title":{},"body":{"components/PauseComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":675,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:13",{"_index":686,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:14",{"_index":683,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":688,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:30",{"_index":685,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:47",{"_index":684,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/scoreboards/score",{"_index":730,"title":{},"body":{"components/ScoreItemComponent.html":{},"coverage.html":{}}}],["src/app/scoreboards/scoreboards.component.ts",{"_index":741,"title":{},"body":{"components/ScoreboardsComponent.html":{},"coverage.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:10",{"_index":754,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:14",{"_index":746,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:18",{"_index":747,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/scoreboards/scoreboards.component.ts:23",{"_index":748,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["src/app/settings/settings.component.ts",{"_index":760,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/app/settings/settings.component.ts:11",{"_index":766,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:12",{"_index":773,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:13",{"_index":765,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:15",{"_index":774,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:18",{"_index":768,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:39",{"_index":769,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/settings/settings.component.ts:60",{"_index":767,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/common/enums.ts",{"_index":1024,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/user.ts",{"_index":922,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/common/user.ts:10",{"_index":925,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:15",{"_index":928,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:20",{"_index":929,"title":{},"body":{"classes/User.html":{}}}],["src/common/user.ts:5",{"_index":930,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.ts",{"_index":994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/contact.service.ts",{"_index":330,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/services/contact.service.ts:13",{"_index":337,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/services/contact.service.ts:9",{"_index":334,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/services/snake",{"_index":827,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{},"coverage.html":{}}}],["src/services/user.service.ts",{"_index":933,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:10",{"_index":941,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:13",{"_index":949,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:17",{"_index":944,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:27",{"_index":946,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:38",{"_index":945,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:48",{"_index":947,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:54",{"_index":942,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":531,"title":{},"body":{"components/HomeComponent.html":{}}}],["startconnection",{"_index":841,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["started",{"_index":519,"title":{"index.html":{}},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["startgame",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["startgame(columns",{"_index":859,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["starting",{"_index":896,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["startsettings",{"_index":532,"title":{},"body":{"components/HomeComponent.html":{}}}],["state",{"_index":640,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["statements",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["storagebucket",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1054,"title":{},"body":{"index.html":{}}}],["string",{"_index":193,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurl",{"_index":346,"title":{},"body":{"components/DocumentationComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["subject",{"_index":862,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["subscribe",{"_index":777,"title":{},"body":{"components/SettingsComponent.html":{}}}],["subscription",{"_index":196,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["success",{"_index":322,"title":{},"body":{"components/ContactComponent.html":{}}}],["successfully",{"_index":260,"title":{},"body":{"components/ContactComponent.html":{}}}],["support",{"_index":1078,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1079,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":499,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["test",{"_index":1059,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1071,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1058,"title":{},"body":{"index.html":{}}}],["text",{"_index":289,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["textarea",{"_index":306,"title":{},"body":{"components/ContactComponent.html":{}}}],["thanks",{"_index":411,"title":{},"body":{"components/GameOverComponent.html":{}}}],["then(idtoken",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{}}}],["then(response",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.bestscore",{"_index":495,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardarray",{"_index":485,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardarray[row][col",{"_index":508,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardcols",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardcols.setvalue(+savedboardcols",{"_index":775,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.setvalue(value",{"_index":785,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.value",{"_index":791,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardcols.valuechanges.subscribe(value",{"_index":781,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows",{"_index":482,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardrows).subscribe",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.boardrows.setvalue(+savedboardrows",{"_index":776,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.setvalue(value",{"_index":782,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.value",{"_index":793,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.boardrows.valuechanges.subscribe(value",{"_index":784,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.changestatemessage(gamestate",{"_index":488,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.close.emit",{"_index":374,"title":{},"body":{"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/PauseComponent.html":{},"components/SettingsComponent.html":{}}}],["this.contactservice.sendcontactform(contactform).subscribe",{"_index":247,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.cookies.get(\"token",{"_index":976,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookies.set(\"token\",this.token",{"_index":970,"title":{},"body":{"injectables/UserService.html":{}}}],["this.email",{"_index":245,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.errormessage",{"_index":372,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.erroroccurred.emit('la",{"_index":880,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(err.message",{"_index":899,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(error.message",{"_index":877,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.erroroccurred.emit(string(err",{"_index":903,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.errorsvisible",{"_index":498,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formlogin",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formreg",{"_index":691,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formreg.valid",{"_index":702,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.gameovervisible",{"_index":501,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.gamestates.asobservable",{"_index":905,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.gamestates.next(gamestate",{"_index":888,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hidepassword",{"_index":583,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.http.get(`http://localhost:5273/api/firebasedb/gettopscores?count=${howmany",{"_index":920,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/firebasedb/getuserdata",{"_index":916,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/firebasedb/savescore",{"_index":918,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/pausegame",{"_index":910,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/resumegame",{"_index":911,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post('http://localhost:5273/api/game/setmovement",{"_index":909,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post(`http://localhost:5273/api/game/start",{"_index":913,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.http.post(this.apiurl",{"_index":343,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.hubconnection",{"_index":870,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"gamestates",{"_index":887,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"score",{"_index":889,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.on(\"snakeboardupdate",{"_index":885,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.onclose((error",{"_index":874,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.onreconnected((connectionid",{"_index":878,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.hubconnection.start",{"_index":892,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.iserror",{"_index":251,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.issuccess",{"_index":249,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.loginservice.gettoken",{"_index":644,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["this.message",{"_index":246,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.name",{"_index":244,"title":{},"body":{"components/ContactComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":696,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.pausevisible",{"_index":504,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.renderer.addclass(this.document.body",{"_index":212,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.renderer.removeclass(this.document.body",{"_index":209,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.resumegame",{"_index":670,"title":{},"body":{"components/PauseComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":205,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.router.navigate(['/home",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":656,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/register",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['login",{"_index":646,"title":{},"body":{"guards/LoginGuardian.html":{}}}],["this.routersubscription",{"_index":204,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.routersubscription.unsubscribe",{"_index":217,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.score",{"_index":494,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.score.asobservable",{"_index":914,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.score.next(score",{"_index":890,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.score=0",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.scores.sort((a",{"_index":756,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.settingsvisible",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakeboardupdate.asobservable",{"_index":904,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.snakeboardupdate.next(boardarray",{"_index":886,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["this.snakecommunicationsservice.erroroccurred.subscribe((error",{"_index":497,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getbestscore(1).subscribe((bestscore",{"_index":496,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getgamestates().subscribe((gamestate",{"_index":487,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getscore().subscribe((score",{"_index":493,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.getsnakeboardupdate().subscribe((board",{"_index":484,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.pausegame().subscribe",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.resumegame().subscribe",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.savescore(this.score).subscribe",{"_index":490,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.sendtoken(idtoken).subscribe((user",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.snakecommunicationsservice.setmovement(event.key).subscribe",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.startconnection().then",{"_index":483,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecommunicationsservice.startgame(this.boardcols",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snakecomunicationsservice.erroroccurred.subscribe((error",{"_index":371,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["this.sortscores",{"_index":755,"title":{},"body":{"components/ScoreboardsComponent.html":{}}}],["this.token",{"_index":969,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updatebodyclass(event.urlafterredirects",{"_index":208,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["this.userservice.login(this.formlogin.value",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.loginwithgithub",{"_index":581,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.loginwithgoogle",{"_index":577,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logout",{"_index":655,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userservice.register(this.formreg.value",{"_index":703,"title":{},"body":{"components/RegisterComponent.html":{}}}],["throw",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{}}}],["title",{"_index":288,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{}}}],["toggle",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["togglepasswordvisibility",{"_index":542,"title":{},"body":{"components/LoginComponent.html":{}}}],["token",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["tools",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":326,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["transform",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["transition",{"_index":316,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["translatey",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["translatey(0",{"_index":810,"title":{},"body":{"components/SettingsComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["true",{"_index":250,"title":{},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/RegisterComponent.html":{}}}],["try",{"_index":579,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{}}}],["tslib",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":185,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{}}}],["uid",{"_index":924,"title":{},"body":{"classes/User.html":{}}}],["ultimate",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":197,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/HomeComponent.html":{}}}],["underline",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["unexpected",{"_index":901,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["unique",{"_index":931,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":1057,"title":{},"body":{"index.html":{}}}],["up",{"_index":587,"title":{},"body":{"components/LoginComponent.html":{}}}],["update",{"_index":779,"title":{},"body":{"components/SettingsComponent.html":{}}}],["updatebodyclass",{"_index":176,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["updatebodyclass(url",{"_index":192,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url",{"_index":195,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('contact",{"_index":216,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('home",{"_index":213,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('login",{"_index":211,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["url.includes('scoreboards",{"_index":214,"title":{},"body":{"directives/BodyClassDirective.html":{}}}],["use",{"_index":707,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["user",{"_index":472,"title":{"classes/User.html":{}},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.getidtoken",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{}}}],["usercredential",{"_index":971,"title":{},"body":{"injectables/UserService.html":{}}}],["usercredential.user.getidtoken().then((idtoken",{"_index":968,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":228,"title":{"injectables/UserService.html":{}},"body":{"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"guards/LoginGuardian.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["valid",{"_index":714,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":687,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":689,"title":{},"body":{"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["validators.email",{"_index":693,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.max(30",{"_index":772,"title":{},"body":{"components/SettingsComponent.html":{}}}],["validators.min(10",{"_index":771,"title":{},"body":{"components/SettingsComponent.html":{}}}],["validators.minlength(6",{"_index":694,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":692,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":233,"title":{},"body":{"components/ContactComponent.html":{},"injectables/ContactService.html":{},"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"injectables/SnakeCommunicationsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/ContactComponent.html":{},"components/DocumentationComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreItemComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1085,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1037,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1061,"title":{},"body":{"index.html":{}}}],["videogamefont",{"_index":311,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/SettingsComponent.html":{}}}],["viewencapsulation",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewencapsulation.none",{"_index":677,"title":{},"body":{"components/RegisterComponent.html":{}}}],["visible",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":190,"title":{},"body":{"directives/BodyClassDirective.html":{},"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/GameOverComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PauseComponent.html":{},"components/RegisterComponent.html":{},"components/ScoreboardsComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["webkit",{"_index":818,"title":{},"body":{"components/SettingsComponent.html":{}}}],["weight",{"_index":324,"title":{},"body":{"components/ContactComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["west1.firebasedatabase.app",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["white",{"_index":393,"title":{},"body":{"components/ErrorsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["width",{"_index":273,"title":{},"body":{"components/ContactComponent.html":{},"components/ErrorsComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsComponent.html":{}}}],["win",{"_index":1029,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{}}}],["window:keydown",{"_index":663,"title":{},"body":{"components/PauseComponent.html":{}}}],["window:keydown(event",{"_index":665,"title":{},"body":{"components/PauseComponent.html":{}}}],["withurl(\"http://localhost:5273/snakegamehub",{"_index":872,"title":{},"body":{"injectables/SnakeCommunicationsService.html":{}}}],["wrapper",{"_index":588,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["xlt2r3bhbzeo7_5yrvxg3xjjeq",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yellow",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":387,"title":{},"body":{"components/ErrorsComponent.html":{}}}],["zone.js",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, HostListener, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CellType, GameStates} from \"../common/Enums\";\nimport {SnakeCommunicationsService} from \"../services/snake-communications.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyClassDirective\n\nBodyClassDirective\n\nAppModule -->\n\nBodyClassDirective->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nErrorsComponent\n\nErrorsComponent\n\nAppModule -->\n\nErrorsComponent->AppModule\n\n\n\n\n\nGameOverComponent\n\nGameOverComponent\n\nAppModule -->\n\nGameOverComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPauseComponent\n\nPauseComponent\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nScoreItemComponent\n\nScoreItemComponent\n\nAppModule -->\n\nScoreItemComponent->AppModule\n\n\n\n\n\nScoreboardsComponent\n\nScoreboardsComponent\n\nAppModule -->\n\nScoreboardsComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSnakeCommunicationsService\n\nSnakeCommunicationsService\n\nAppModule -->\n\nSnakeCommunicationsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BodyClassDirective\n                        \n                        \n                            ContactComponent\n                        \n                        \n                            DocumentationComponent\n                        \n                        \n                            ErrorsComponent\n                        \n                        \n                            GameOverComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PauseComponent\n                        \n                        \n                            PauseComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ScoreItemComponent\n                        \n                        \n                            ScoreboardsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SnakeCommunicationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule, provideClientHydration } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {SnakeCommunicationsService} from \"../services/snake-communications.service\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport { ErrorsComponent } from './errors/errors.component';\nimport { GameOverComponent } from './game-over/game-over.component';\nimport { PauseComponent } from './pause/pause.component';\nimport {initializeApp, provideFirebaseApp} from \"@angular/fire/app\";\nimport {getAuth, provideAuth} from \"@angular/fire/auth\";\nimport {environment} from \"../environments/environment\";\nimport { RegisterComponent } from './register/register.component';\nimport {HomeComponent} from \"./home/home.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport { ScoreboardsComponent } from './scoreboards/scoreboards.component';\nimport { ScoreItemComponent } from './scoreboards/score-item/score-item.component';\nimport {BodyClassDirective} from \"./body-class.directive\";\nimport { ContactComponent } from './contact/contact.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SettingsComponent,\n    ErrorsComponent,\n    GameOverComponent,\n    PauseComponent,\n    PauseComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    ScoreboardsComponent,\n    ScoreItemComponent,\n    RegisterComponent,\n    BodyClassDirective,\n    ContactComponent,\n    DocumentationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    provideClientHydration(),\n    SnakeCommunicationsService,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth())\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from \"./login/login.component\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {canActivate, redirectUnauthorizedTo} from \"@angular/fire/auth-guard\";\nimport {ScoreboardsComponent} from \"./scoreboards/scoreboards.component\";\nimport {ContactComponent} from \"./contact/contact.component\";\nimport {LoginGuardian} from \"./login/login-guardian\";\nimport {DocumentationComponent} from \"./documentation/documentation.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent, canActivate:[LoginGuardian]},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'scoreboards', component: ScoreboardsComponent,canActivate:[LoginGuardian]},\n  {path: 'contact', component: ContactComponent, canActivate:[LoginGuardian]},\n  { path: 'documentation', component: DocumentationComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\ncluster_AppServerModule_imports\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.server.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/BodyClassDirective.html":{"url":"directives/BodyClassDirective.html","title":"directive - BodyClassDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  BodyClassDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/body-class.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appBodyClass]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                routerSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateBodyClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, router: Router, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/body-class.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBodyClass\n                        \n                    \n                \n            \n            \n                \nupdateBodyClass(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/body-class.directive.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/body-class.directive.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Renderer2, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[appBodyClass]'\n})\nexport class BodyClassDirective implements OnInit, OnDestroy {\n  private routerSubscription: Subscription | undefined;\n\n  constructor(private renderer: Renderer2, private router: Router, @Inject(DOCUMENT) private document: Document) {}\n\n  ngOnInit() {\n    this.routerSubscription = this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.updateBodyClass(event.urlAfterRedirects);\n      }\n    });\n  }\n\n  updateBodyClass(url: string) {\n    this.renderer.removeClass(this.document.body, 'login-page');\n    this.renderer.removeClass(this.document.body, 'home-page');\n    if (url.includes('login')) {\n      this.renderer.addClass(this.document.body, 'login-page');\n    } else if (url.includes('home')) {\n      this.renderer.addClass(this.document.body, 'home-page');\n    }else if (url.includes('scoreboards')) {\n      this.renderer.addClass(this.document.body, 'scoreboard-page');\n    }else if (url.includes('contact')) {\n      this.renderer.addClass(this.document.body, 'home-page');}\n  }\n\n  ngOnDestroy() {\n    if (this.routerSubscription) {\n      this.routerSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contact/contact.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n\n\n            \n                styleUrls\n                ./contact.component.css\n            \n\n\n\n            \n                templateUrl\n                ./contact.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isError\n                            \n                            \n                                isSuccess\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(contactService: ContactService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contact/contact.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        contactService\n                                                  \n                                                        \n                                                                        ContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact/contact.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact/contact.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact/contact.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport { ContactService } from \"../../services/contact.service\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit{\n  name: string = '';\n  email: string = '';\n  message: string = '';\n  isSuccess: boolean = false;\n  isError: boolean = false;\n\n  constructor(private contactService: ContactService, private userService: UserService) {}\n\n  ngOnInit() {\n    console.log(this.userService.getToken());\n  }\n\n  onSubmit() {\n    const contactForm = {\n      name: this.name,\n      email: this.email,\n      message: this.message\n    };\n\n    this.contactService.sendContactForm(contactForm).subscribe(\n        (response: any) => {\n        this.isSuccess = true;\n        this.isError = false;\n        console.log('Mail sent correctly', response);\n          this.name = '';\n          this.email = '';\n          this.message = '';\n      },\n        (error: any) => {\n        this.isSuccess = false;\n        this.isError = true;\n        console.error('Error sending mail', error);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n\n  Contact Page\n  \n    Name\n    \n\n    Email\n    \n\n    Message\n    \n\n    Send\n  \n  Email sent successfully.\n  Error sending email.\n\n\n    \n\n    \n                \n                    ./contact.component.css\n                \n                body {\n  font-family: 'Courier New', Courier, monospace;\n  background-color: #d8e8d8;\n  color: #000;\n}\n\n.retro-container {\n  max-width: 600px;\n  margin: 50px auto;\n  padding: 20px;\n  border: 5px solid #000;\n  background-color: #c8e6c9;\n  box-shadow: 10px 10px 0 #000;\n}\n\n.retro-title {\n  text-align: center;\n  font-size: 2.5em;\n  margin-bottom: 20px;\n  text-shadow: 2px 2px 0 #388e3c;\n}\n\n.retro-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.retro-label {\n  font-size: 1.2em;\n  margin-bottom: 5px;\n  color: #1b5e20;\n}\n\n.retro-input, .retro-textarea {\n  font-size: 1em;\n  padding: 10px;\n  margin-bottom: 20px;\n  border: 2px solid #000;\n  background-color: #e8f5e9;\n  box-shadow: 4px 4px 0 #000;\n}\n\n.retro-button {\n  font-family: VideoGameFont, serif;\n  font-size: 1.2em;\n  padding: 10px;\n  border: 2px solid #000;\n  background-color: #66bb6a;\n  cursor: pointer;\n  box-shadow: 4px 4px 0 #000;\n  transition: all 0.2s;\n}\n\n.retro-button:hover {\n  background-color: #4caf50;\n  box-shadow: 2px 2px 0 #000;\n}\n\n.retro-button:active {\n  box-shadow: 1px 1px 0 #000;\n}\n\n.success-message {\n  color: green;\n  font-weight: bold;\n  margin-top: 20px;\n}\n\n.error-message {\n  color: red;\n  font-weight: bold;\n  margin-top: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Contact Page      Name        Email        Message        Send    Email sent successfully.  Error sending email.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendContactForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/contact.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendContactForm\n                        \n                    \n                \n            \n            \n                \nsendContactForm(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/contact.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5273/api/Contact/send'\n                    \n                \n                    \n                        \n                                Defined in src/services/contact.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  private apiUrl = 'http://localhost:5273/api/Contact/send';\n\n  constructor(private http: HttpClient) {}\n\n  sendContactForm(data: any): Observable {\n    return this.http.post(this.apiUrl, data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./documentation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrl: './documentation.component.css'\n})\nexport class DocumentationComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorsComponent.html":{"url":"components/ErrorsComponent.html","title":"component - ErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/errors/errors.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-errors\n            \n\n\n\n            \n                styleUrls\n                ./errors.component.css\n            \n\n\n\n            \n                templateUrl\n                ./errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backgroundcolor\n                            \n                            \n                                    Public\n                                snakeComunicationsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeErrors\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeComunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/errors/errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeComunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/errors/errors.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/errors/errors.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeErrors\n                        \n                    \n                \n            \n            \n                \ncloseErrors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/errors/errors.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/errors/errors.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        backgroundcolor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#ff4c4c'\n                    \n                \n                    \n                        \n                                Defined in src/app/errors/errors.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snakeComunicationsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnakeCommunicationsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/errors/errors.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport { SnakeCommunicationsService } from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-errors',\n  templateUrl: './errors.component.html',\n  styleUrls: ['./errors.component.css']\n})\nexport class ErrorsComponent implements OnInit {\n  @Output() close = new EventEmitter();\n  @Input() errorMessage: string = '';\n  public backgroundcolor: string = '#ff4c4c';\n\n  constructor(public snakeComunicationsService: SnakeCommunicationsService) { }\n\n  ngOnInit() {\n    /*\n    this.snakeComunicationsService.errorOccurred.subscribe((error) => {\n      this.errorMessage = error;\n      console.log(error);\n    }); */\n  }\n\n  closeErrors() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n    Please restart the server\n    Close\n  \n\n\n    \n\n    \n                \n                    ./errors.component.css\n                \n                \n.error-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 9999;\n}\n\n.error-message {\n  padding: 20px 30px;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  color: white;\n  font-size: 18px;\n  text-align: center;\n}\n\n.error-button {\n  margin-top: 15px;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  background-color: white;\n  color: #ff4c4c;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  font-family: VideoGameFont, serif;\n}\n\n.error-button:hover {\n  background-color: #ffe6e6;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}    Please restart the server    Close  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameOverComponent.html":{"url":"components/GameOverComponent.html","title":"component - GameOverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameOverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game-over/game-over.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game-over\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./game-over.component.html\n            \n\n\n\n            \n                styleUrl\n                ./game-over.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeGameOver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game-over/game-over.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/game-over/game-over.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeGameOver\n                        \n                    \n                \n            \n            \n                \ncloseGameOver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game-over/game-over.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-game-over',\n  templateUrl: './game-over.component.html',\n  styleUrl: './game-over.component.css'\n})\nexport class GameOverComponent {\n  @Output() close = new EventEmitter();\n  @Input() score!: number;\n\n  closeGameOver() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    Game Over\n    Thanks for playing! Your score was: {{score}}\n    \n      Close\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Game Over    Thanks for playing! Your score was: {{score}}          Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'GameOverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bestScore\n                            \n                            \n                                    Public\n                                boardArray\n                            \n                            \n                                boardCols\n                            \n                            \n                                boardRows\n                            \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                errorsVisible\n                            \n                            \n                                gameOverVisible\n                            \n                            \n                                pauseVisible\n                            \n                            \n                                score\n                            \n                            \n                                settingsVisible\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStateMessage\n                            \n                            \n                                colorCell\n                            \n                            \n                                    \n                                handleKeyPress\n                            \n                            \n                                hideErrors\n                            \n                            \n                                hideGameOver\n                            \n                            \n                                hidePause\n                            \n                            \n                                hideSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showSettings\n                            \n                            \n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeCommunicationsService: SnakeCommunicationsService, http: HttpClient, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:117\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStateMessage\n                        \n                    \n                \n            \n            \n                \nchangeStateMessage(gameState: GameStates)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                            GameStates\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colorCell\n                        \n                    \n                \n            \n            \n                \ncolorCell(row: number, col: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                col\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyPress\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyPress(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideErrors\n                        \n                    \n                \n            \n            \n                \nhideErrors()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideGameOver\n                        \n                    \n                \n            \n            \n                \nhideGameOver()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePause\n                        \n                    \n                \n            \n            \n                \nhidePause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideSettings\n                        \n                    \n                \n            \n            \n                \nhideSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSettings\n                        \n                    \n                \n            \n            \n                \nshowSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bestScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        boardArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CellType[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardCols\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameOverVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pauseVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        settingsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SnakeProWeb'\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CellType, GameStates} from \"../../common/Enums\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"../../common/User\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css',\n})\n\nexport class HomeComponent implements OnInit{\n  title = 'SnakeProWeb';\n  public boardArray: CellType[][] = [];\n  public visible: boolean = true;\n  settingsVisible = false;\n  gameOverVisible = false;\n  pauseVisible: boolean = false;\n  boardCols: number = 20;\n  boardRows: number = 20;\n  score: number = 0;\n  bestScore: number = 0;\n\n  constructor(private snakeCommunicationsService: SnakeCommunicationsService, private http: HttpClient, private userService: UserService) {\n  }\n\n  public errorsVisible = false;\n  public errorMessage: string = '';\n\n  ngOnInit() {\n    if (typeof window !== 'undefined') {\n      const savedboardCols = localStorage.getItem('boardCols');\n      if (savedboardCols !== null) {\n        this.boardCols = +savedboardCols;\n      }\n      const savedboardRows = localStorage.getItem('boardRows');\n      if (savedboardRows !== null) {\n        this.boardRows = +savedboardRows;\n      }\n    }\n    this.snakeCommunicationsService.startConnection().then(() => {\n      this.snakeCommunicationsService.getSnakeBoardUpdate().subscribe((board) => {\n        this.boardArray = board;\n      });\n      this.snakeCommunicationsService.getGameStates().subscribe((gameState: GameStates) => {\n        this.changeStateMessage(gameState)\n        if (gameState === GameStates.GameOver) {\n          this.snakeCommunicationsService.saveScore(this.score).subscribe(() => console.log(\"Score saved\"));\n        }\n      });\n      this.snakeCommunicationsService.getScore().subscribe((score) => {\n        this.score = score;\n        if (score > this.bestScore) {\n          this.bestScore = score;\n        }\n      });\n      this.snakeCommunicationsService.getBestScore(1).subscribe((bestScore) => {\n        this.bestScore = bestScore;\n      });\n    });\n\n    this.snakeCommunicationsService.errorOccurred.subscribe((error) => {\n      this.errorsVisible = true;\n      this.errorMessage = error;\n    });\n    console.log(this.userService.getToken());\n  }\n\n  changeStateMessage(gameState: GameStates) {\n    switch (gameState) {\n      case GameStates.GameOver:\n        this.gameOverVisible = true;\n        break;\n      case GameStates.Paused:\n        this.pauseVisible = true;\n        break;\n      case GameStates.Running:\n        this.pauseVisible = false;\n        break;\n      case GameStates.Win:\n      case GameStates.None:\n        break;\n    }\n  }\n\n\n  colorCell(row: number, col: number): string {\n    switch (this.boardArray[row][col]) {\n      case CellType.Empty:\n        return 'green';\n      case CellType.Block:\n        return 'black';\n      case CellType.Food:\n        return 'red';\n      case CellType.Snake:\n        return 'yellow';\n      default:\n        return 'white';\n    }\n  }\n\n  showSettings() {\n    this.settingsVisible = true;\n  }\n\n  hideSettings() {\n    this.settingsVisible = false;\n  }\n\n  startGame(): void {\n    this.snakeCommunicationsService.startGame(this.boardCols, this.boardRows).subscribe(() => console.log(\"Game started\"));\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyPress(event: KeyboardEvent) {\n    if (event.key === 'p') {\n      this.snakeCommunicationsService.pauseGame().subscribe();\n    } else if (event.key === ' ') {\n      this.snakeCommunicationsService.resumeGame().subscribe();\n    } else {\n      this.snakeCommunicationsService.setMovement(event.key).subscribe();\n    }\n  }\n\n\n  hideErrors() {\n    this.errorsVisible = false;\n  }\n\n  hideGameOver() {\n    this.gameOverVisible = false;\n    this.score=0;\n  }\n\n  hidePause() {\n    this.pauseVisible = false;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Ultimate Snake Game\n      The Definitive Snake Game Experience\n    \n    \n      SCORE: {{score}}\n      BEST SCORE: {{bestScore}}\n    \n  \n\n\n\n  \n    \n      \n    \n  \n\n\nSTART\nSETTINGS\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Ultimate Snake Game      The Definitive Snake Game Experience              SCORE: {{score}}      BEST SCORE: {{bestScore}}                        STARTSETTINGS'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formLogin\n                            \n                            \n                                hidePassword\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToRegister\n                            \n                            \n                                onGithubLogin\n                            \n                            \n                                onGoogleLogin\n                            \n                            \n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToRegister\n                        \n                    \n                \n            \n            \n                \nnavigateToRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGithubLogin\n                        \n                    \n                \n            \n            \n                \nonGithubLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGoogleLogin\n                        \n                    \n                \n            \n            \n                \nonGoogleLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\nimport {Observable} from \"rxjs\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  formLogin: FormGroup;\n  errorMessage: string | null = null;\n  hidePassword: boolean = true;\n  private token: string | null = null;\n\n  constructor(private userService: UserService, private router: Router, private snakeCommunicationsService: SnakeCommunicationsService) {\n    this.formLogin = new FormGroup({\n      email: new FormControl(),\n      password: new FormControl()\n    });\n  }\n\n  onSubmit() {\n    this.userService.login(this.formLogin.value)\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from email/password sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login. Please check your email and password.\";\n      });\n  }\n\n  navigateToRegister() {\n    this.router.navigate(['/register']);\n  }\n\n  onGoogleLogin() {\n    this.userService.loginWithGoogle()\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from Google sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login with Google. Please try again.\";\n      });\n\n  }\n\n  onGithubLogin() {\n    this.userService.loginWithGithub()\n      .then(response => {\n        const user = response.user;\n        if (user) {\n          return user.getIdToken();\n        } else {\n          throw new Error('No user returned from Github sign-in.');\n        }\n      })\n      .then(idToken => {\n        console.log('idToken:', idToken);\n        this.snakeCommunicationsService.sendToken(idToken).subscribe((user) => console.log(\"user: \", user));\n      })\n      .then(() => {\n        this.router.navigate(['/home']);\n      })\n      .catch(error => {\n        console.error(error)\n        this.errorMessage = \"Failed to login with Github. Please try again.\";\n      });\n\n  }\n\n\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n}\n\n    \n\n    \n        \n  \n    Log in\n    \n      \n        \n      \n      \n        \n        👁️\n      \n      Log in\n    \n\n\n    \n      {{ errorMessage }}\n    \n    \n    \n      Have Google or GitHub?\n      \n        \n        Log in with Google\n      \n      \n        \n        Log in with GitHub\n      \n    \n    \n      Don't have an account yet?\n      Sign up\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n.login-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.login-container {\n  max-width: 400px;\n  width: 400px;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.login-container h2 {\n  margin-bottom: 15px;\n  color: #ffffff;\n  font-size: 1.3rem;\n}\n\n.form-group {\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  box-sizing: border-box;\n  border: 2px solid #4b4f54;\n  border-radius: 5px;\n  background-color: #070b10;\n  color: #fff;\n}\n\n.form-group input::placeholder {\n  color: #bbb;\n  font-size: 14px;\n}\n\n.toggle-password {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #fff;\n}\n\n.login-btn {\n  width: 100%;\n  padding: 9px;\n  background-color: #68f0b0;\n  color: #247b56;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.login-btn:hover {\n  background-color: #95f1c1;\n}\n\n.alternative-login {\n  text-align: center;\n  margin-top: 30px;\n}\n\n.alternative-login p {\n  margin-bottom: 30px;\n  font-size: 14px;\n  margin-top: 20px;\n}\n\n.google-btn, .github-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 5px;\n  margin-top: 20px;\n  background-color: #070b10;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.google-btn img, .github-btn img {\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n}\n\n.google-btn span, .github-btn span {\n  font-weight: bold;\n  color: #fff;\n}\n\n\n.google-btn:hover, .github-btn:hover {\n  background-color: #f1f1f1;\n\n}\n\nspan:hover {\n  text-decoration: underline;\n}\n\n.register-link {\n  margin-top: 23px;\n  text-align: center;\n}\n\n.register-link span {\n  margin-right: 5px;\n  font-size: 14px;\n}\n\n.register-link a {\n  color: #1dbf73;\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.register-link a:hover {\n  text-decoration: underline;\n}\n\n.error-message {\n  color: red;\n  margin-top: 15px;\n  text-align: center;\n}\n\n.divider {\n  width: 100%;\n  height: 2px;\n  background-color: white;\n  margin: 25px 0;\n}\n\n.google-btn:hover span,\n.github-btn:hover span {\n  color: #757575;\n}\n.google-btn span:hover,\n.github-btn span:hover {\n  color: black;\n}\n\n/*\n.form-group input:hover {\n  background-color: #95f1c1;\n}\n\n  .form-group input:focus {\n  background-color: #95f1c1;\n  color: #000;\n}\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Log in                                              👁️            Log in              {{ errorMessage }}                  Have Google or GitHub?                      Log in with Google                            Log in with GitHub                    Don\\'t have an account yet?      Sign up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuardian.html":{"url":"guards/LoginGuardian.html","title":"guard - LoginGuardian","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuardian\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/login/login-guardian.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login-guardian.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login-guardian.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from \"@angular/core\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuardian implements CanActivate {\n  constructor(private loginService: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.loginService.getToken()) {\n      console.log(this.loginService.getToken())\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n\n  constructor(private router: Router,  private userService: UserService) {\n\n  }\n\n\n  logout(): void {\n    this.userService.logout()\n      .then(() => {\n        this.router.navigate(['/login']);\n      })\n      .catch(error => console.error(error));\n  }\n\n}\n\n    \n\n    \n        \n  \n    Home\n    Scoreboards\n    Contact\n    Logout\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Home    Scoreboards    Contact    Logout  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PauseComponent.html":{"url":"components/PauseComponent.html","title":"component - PauseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PauseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pause/pause.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pause\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./pause.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pause.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleKeyDown\n                            \n                            \n                                resumeGame\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pause/pause.component.ts:9\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyDown\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyDown(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resumeGame\n                        \n                    \n                \n            \n            \n                \nresumeGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pause/pause.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-pause',\n  templateUrl: './pause.component.html',\n  styleUrl: './pause.component.css'\n})\nexport class PauseComponent {\n  @Output() close = new EventEmitter();\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === ' ') {\n      this.resumeGame();\n    }\n  }\n\n  resumeGame() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    The game is paused\n    Please press space to continue.\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      The game is paused    Please press space to continue.          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'PauseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formReg\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formReg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ViewEncapsulation} from '@angular/core';\nimport { FormControl, FormGroup, Validators, ValidatorFn, AbstractControl } from \"@angular/forms\";\nimport { UserService } from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css',],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RegisterComponent {\n  formReg: FormGroup;\n  errorMessage: string | null = null;\n\n  constructor(private userService: UserService, private router: Router) {\n    this.formReg = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      passwordConfirm: new FormControl('', [Validators.required, Validators.minLength(6)])\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator: ValidatorFn = (formGroup: AbstractControl): { [key: string]: boolean } | null => {\n    const password = formGroup.get('password')!.value;\n    const confirmPassword = formGroup.get('passwordConfirm')!.value;\n    return password === confirmPassword ? null : { 'mismatch': true };\n  };\n\n  onSubmit() {\n    if (this.formReg.valid) {\n      this.userService.register(this.formReg.value)\n        .then(response =>\n          this.router.navigate(['/login']))\n        .catch(error => {\n          console.error(error)\n          if (error.code === 'auth/email-already-in-use') {\n            this.errorMessage = 'Email already in use';\n          }\n        });\n    } else {\n      console.error(\"Form is invalid or passwords do not match.\");\n    }\n  }\n\n\n  goBack() {\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Register\n    \n      \n        \n        \n          Email is required.\n          Enter a valid email.\n        \n      \n      \n        \n        \n          Password is required.\n          Password must be at least 6 characters long.\n        \n      \n      \n        \n        \n          Passwords do not match.\n        \n      \n      Register\n      \n        {{ errorMessage }}\n      \n      &#8592; Go Back\n\n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                body {\n  background-color: #070b10;\n  color: #ffffff;\n  font-family: 'Arial', sans-serif;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n}\n\n.register-wrapper {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.register-container {\n  max-width: 400px;\n  width: 400px;\n  padding: 20px;\n  border-radius: 10px;\n}\n\n.register-container h2 {\n  margin-bottom: 15px;\n  color: #ffffff;\n  font-size: 1.3rem;\n}\n\n.form-group {\n  margin-bottom: 30px;\n  position: relative;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 15px;\n  box-sizing: border-box;\n  border: 2px solid #4b4f54;\n  border-radius: 5px;\n  background-color: #070b10;\n  color: #fff;\n}\n\n.form-group input::placeholder {\n  color: #bbb;\n  font-size: 14px;\n}\n\n.error {\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.register-btn {\n  width: 100%;\n  padding: 9px;\n  background-color: #68f0b0;\n  color: #247b56;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.register-btn:hover {\n  background-color: #95f1c1;\n}\n\n.goback-icon {\n  display: inline-block;\n  margin-top: 15px;\n  color: #68f0b0;\n  cursor: pointer;\n  font-size: 0.9rem;\n  text-decoration: none;\n}\n\n.goback-icon:hover {\n  color: #95f1c1;\n  text-decoration: underline;\n}\n\n.error-message {\n  color: red;\n  margin-top: 15px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Register                                    Email is required.          Enter a valid email.                                              Password is required.          Password must be at least 6 characters long.                                              Passwords do not match.                    Register              {{ errorMessage }}            ← Go Back      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreItemComponent.html":{"url":"components/ScoreItemComponent.html","title":"component - ScoreItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScoreItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/scoreboards/score-item/score-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-score-item\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./score-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./score-item.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                score\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/scoreboards/score-item/score-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-score-item',\n  templateUrl: './score-item.component.html',\n  styleUrl: './score-item.component.css'\n})\nexport class ScoreItemComponent {\n  @Input() score!: { player: string, points: number };\n}\n\n    \n\n    \n        \n  {{ score.player }}\n  {{ score.points }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ score.player }}  {{ score.points }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScoreboardsComponent.html":{"url":"components/ScoreboardsComponent.html","title":"component - ScoreboardsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScoreboardsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/scoreboards/scoreboards.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scoreboards\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./scoreboards.component.html\n            \n\n\n\n            \n                styleUrl\n                ./scoreboards.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                scores\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sortScores\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/scoreboards/scoreboards.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/scoreboards/scoreboards.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortScores\n                        \n                    \n                \n            \n            \n                \nsortScores()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/scoreboards/scoreboards.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        scores\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { player: 'Player 1', points: 60 },\n    { player: 'Player 2', points: 100 },\n    { player: 'Player 3', points: 80 }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/scoreboards/scoreboards.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n  selector: 'app-scoreboards',\n  templateUrl: './scoreboards.component.html',\n  styleUrl: './scoreboards.component.css'\n})\nexport class ScoreboardsComponent implements OnInit {\n  scores = [\n    { player: 'Player 1', points: 60 },\n    { player: 'Player 2', points: 100 },\n    { player: 'Player 3', points: 80 }\n  ];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.sortScores();\n    console.log(this.userService.getToken());\n  }\n\n  sortScores(): void {\n    this.scores.sort((a, b) => b.points - a.points);\n  }\n\n}\n\n    \n\n    \n        \n\n\n  Scoreboard\n  \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Scoreboard                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScoreboardsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boardCols\n                            \n                            \n                                boardRows\n                            \n                            \n                                    Public\n                                snakeCommunicationsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSettings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveSettings\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snakeCommunicationsService: SnakeCommunicationsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/settings/settings.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snakeCommunicationsService\n                                                  \n                                                        \n                                                                        SnakeCommunicationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/settings/settings.component.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSettings\n                        \n                    \n                \n            \n            \n                \ncloseSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveSettings\n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/settings/settings.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        boardCols\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(20, [Validators.min(10), Validators.max(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boardRows\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(20, [Validators.min(10), Validators.max(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snakeCommunicationsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SnakeCommunicationsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/settings/settings.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Output, EventEmitter, OnInit} from '@angular/core';\nimport {FormControl, Validators} from \"@angular/forms\";\nimport {SnakeCommunicationsService} from \"../../services/snake-communications.service\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  @Output() close = new EventEmitter();\n  boardCols = new FormControl(20, [Validators.min(10), Validators.max(30)]);\n  boardRows = new FormControl(20, [Validators.min(10), Validators.max(30)]);\n\n  constructor(public snakeCommunicationsService: SnakeCommunicationsService) {\n  }\n\n  ngOnInit() {\n    const savedboardCols = localStorage.getItem('boardCols');\n    if (savedboardCols !== null) {\n      this.boardCols.setValue(+savedboardCols);\n    }\n    const savedboardRows = localStorage.getItem('boardRows');\n    if (savedboardRows !== null) {\n      this.boardRows.setValue(+savedboardRows);\n    }\n\n    // Subscribe to changes in boardCols and update boardRows accordingly\n    this.boardCols.valueChanges.subscribe(value => {\n      this.boardRows.setValue(value, {emitEvent: false});\n    });\n\n    // Subscribe to changes in boardRows and update boardCols accordingly\n    this.boardRows.valueChanges.subscribe(value => {\n      this.boardCols.setValue(value, {emitEvent: false});\n    });\n  }\n\n  saveSettings() {\n    const boardColsItem = localStorage.getItem('boardCols');\n    const boardRowsItem = localStorage.getItem('boardRows');\n    const oldBoardColsValue = boardColsItem ? +boardColsItem : 20;\n    const oldBoardRowsValue = boardRowsItem ? +boardRowsItem : 20;\n\n    let newBoardColsValue = this.boardCols.value ?? oldBoardColsValue;\n    let newBoardRowsValue = this.boardRows.value ?? oldBoardRowsValue;\n\n    if (newBoardColsValue > 30) {\n      newBoardColsValue = oldBoardColsValue;\n    }\n    if (newBoardRowsValue > 30) {\n      newBoardRowsValue = oldBoardRowsValue;\n    }\n\n    localStorage.setItem('boardCols', newBoardColsValue.toString());\n    localStorage.setItem('boardRows', newBoardRowsValue.toString());\n    console.log(newBoardColsValue, newBoardRowsValue);\n  }\n\n  closeSettings() {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    Settings\n\n    \n      Board Cols:\n      \n      \n        The maximum value is 30.\n      \n    \n\n    \n      Board Rows:\n      \n      \n        The maximum value is 30.\n      \n    \n\n    \n      Close\n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                #settings-menu {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.3s ease;\n  opacity: 1;\n}\n\n#settings-menu.ng-hide {\n  opacity: 0;\n}\n\n#settings-content {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  max-width: 400px;\n  width: 90%;\n  transition: transform 0.3s ease, opacity 0.3s ease;\n  transform: translateY(0);\n  opacity: 1;\n}\n\n#settings-content.ng-hide {\n  transform: translateY(-20px);\n  opacity: 0;\n}\n\n#settings-content h2 {\n  margin-top: 0;\n  color: #333;\n}\n\n.input-group {\n  margin-bottom: 20px;\n}\n\n#settings-content label {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #555;\n}\n\n#settings-content input[type=\"number\"] {\n  width: calc(100% - 20px);\n  margin-bottom: 10px;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  outline: none;\n  box-sizing: border-box;\n}\n\n#settings-content input[type=\"number\"]::-webkit-inner-spin-button,\n#settings-content input[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n#settings-content input[type=\"number\"]:hover,\n#settings-content input[type=\"number\"]:focus {\n  border-color: #3eff65;\n}\n\n.button-group {\n  margin-top: 20px;\n}\n\n#settings-content button {\n  background-color: #3eff65;\n  color: black;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.3s ease;\n  font-family: VideoGameFont, serif;\n}\n\n#settings-content button:hover {\n  background-color: #3ea62d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Settings          Board Cols:                    The maximum value is 30.                    Board Rows:                    The maximum value is 30.                    Close      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'ErrorsComponent', 'selector': 'app-errors'},{'name': 'GameOverComponent', 'selector': 'app-game-over'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PauseComponent', 'selector': 'app-pause'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ScoreboardsComponent', 'selector': 'app-scoreboards'},{'name': 'ScoreItemComponent', 'selector': 'app-score-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [{'name': 'BodyClassDirective', 'selector': '[appBodyClass]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnakeCommunicationsService.html":{"url":"injectables/SnakeCommunicationsService.html","title":"injectable - SnakeCommunicationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SnakeCommunicationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/snake-communications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorOccurred\n                            \n                            \n                                    Private\n                                gameStates\n                            \n                            \n                                    Private\n                                hubConnection\n                            \n                            \n                                    Private\n                                score\n                            \n                            \n                                    Private\n                                snakeBoardUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBestScore\n                            \n                            \n                                    Public\n                                getGameStates\n                            \n                            \n                                    Public\n                                getScore\n                            \n                            \n                                    Public\n                                getSnakeBoardUpdate\n                            \n                            \n                                    Public\n                                pauseGame\n                            \n                            \n                                    Public\n                                resumeGame\n                            \n                            \n                                    Public\n                                saveScore\n                            \n                            \n                                    Public\n                                sendToken\n                            \n                            \n                                    Public\n                                setMovement\n                            \n                            \n                                    Public\n                                    Async\n                                startConnection\n                            \n                            \n                                    Public\n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/snake-communications.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getBestScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBestScore(howMany: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                howMany\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getGameStates\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGameStates()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    getScore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSnakeBoardUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSnakeBoardUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pauseGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    pauseGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resumeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    resumeGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveScore\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveScore(score: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                score\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sendToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendToken(idToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setMovement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMovement(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        startConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    startConnection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        startGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    startGame(columns: number, rows: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/snake-communications.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columns\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rows\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        errorOccurred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     signalR.HubConnection\n\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        snakeBoardUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/snake-communications.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport * as signalR from '@microsoft/signalr';\nimport {CellType, GameStates} from \"../common/Enums\";\nimport {Observable, Subject} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from \"../common/User\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnakeCommunicationsService {\n  private hubConnection: signalR.HubConnection;\n  private snakeBoardUpdate = new Subject()\n  private gameStates = new Subject()\n  private score = new Subject()\n  public errorOccurred = new EventEmitter();\n\n  constructor(private http: HttpClient) {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n      .withUrl(\"http://localhost:5273/snakegamehub\")\n      .build();\n\n    this.hubConnection.onclose((error) => {\n      console.log('Connection closed');\n      if (error) {\n        this.errorOccurred.emit(error.message);\n      }\n    });\n\n\n    this.hubConnection.onreconnected((connectionId) => {\n      console.log('Connection reestablished');\n      this.errorOccurred.emit('La conexión ha sido restablecida');\n    });\n\n    this.hubConnection.on(\"SnakeBoardUpdate\", (boardArray: CellType [][]) => {\n      this.snakeBoardUpdate.next(boardArray);\n    });\n    this.hubConnection.on(\"GameStates\", (gameState: GameStates) => {\n      this.gameStates.next(gameState);\n    });\n    this.hubConnection.on(\"Score\", (score: number) => {\n      this.score.next(score);\n    });\n  }\n\n  public async startConnection(): Promise {\n    try {\n      await this.hubConnection.start();\n      console.log('Connection started');\n    } catch (err) {\n      if (err instanceof Error) {\n        console.log('Error while starting connection: ' + err.message);\n        this.errorOccurred.emit(err.message);\n      } else {\n        // Handle unexpected error type\n        console.log('Unexpected error while starting connection: ' + err);\n        this.errorOccurred.emit(String(err));\n      }\n    }\n  }\n  public getSnakeBoardUpdate(): Observable {\n    return this.snakeBoardUpdate.asObservable();\n  }\n\n  public getGameStates(): Observable {\n    return this.gameStates.asObservable();\n  }\n\n  public setMovement(key: string): Observable {\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify(key);\n    return this.http.post('http://localhost:5273/api/Game/SetMovement', body, {'headers': headers});\n  }\n\n  public pauseGame(): Observable {\n    return this.http.post('http://localhost:5273/api/Game/PauseGame', null);\n  }\n\n  public resumeGame(): Observable {\n    return this.http.post('http://localhost:5273/api/Game/ResumeGame', null);\n  }\n\n  public startGame(columns: number, rows: number): Observable {\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify({columns, rows});\n    return this.http.post(`http://localhost:5273/api/Game/Start`, body, {'headers': headers});\n  }\n  public getScore(): Observable {\n    return this.score.asObservable();\n  }\n\n  public sendToken(idToken: string): Observable {\n    const headers = { 'Content-Type': 'application/json' };\n    const body = JSON.stringify(idToken);\n    return this.http.post('http://localhost:5273/api/FirebaseDb/GetUserData', body, { headers });\n  }\n\n  public saveScore(score: number): Observable {\n    const headers = { 'Content-Type': 'application/json' };\n    const body = JSON.stringify(score);\n    return this.http.post('http://localhost:5273/api/FirebaseDb/SaveScore', body, { headers });\n  }\n\n\n  public getBestScore(howMany:number): Observable {\n    return this.http.get(`http://localhost:5273/api/FirebaseDb/GetTopScores?count=${howMany}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/User.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                displayName\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                score\n                            \n                            \n                                    Optional\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:10\n                        \n                    \n\n            \n                \n                    Gets or sets the display name of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:15\n                        \n                    \n\n            \n                \n                    Gets or sets the email of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:20\n                        \n                    \n\n            \n                \n                    Gets or sets the score of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/User.ts:5\n                        \n                    \n\n            \n                \n                    Gets or sets the unique identifier for the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  /**\n   * Gets or sets the unique identifier for the user.\n   */\n  uid?: string;\n\n  /**\n   * Gets or sets the display name of the user.\n   */\n  displayName?: string;\n\n  /**\n   * Gets or sets the email of the user.\n   */\n  email?: string;\n\n  /**\n   * Gets or sets the score of the user.\n   */\n  score?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                login\n                            \n                            \n                                loginWithGithub\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, cookies: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookies\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGithub\n                        \n                    \n                \n            \n            \n                \nloginWithGithub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/services/user.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, signInWithPopup, GoogleAuthProvider, GithubAuthProvider} from \"@angular/fire/auth\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private token: string | null = null;\n  constructor(private auth: Auth,private cookies:CookieService) { }\n\n  register({email, password}: any) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n\n  login({email, password}: any) {\n    return signInWithEmailAndPassword(this.auth, email, password).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token)\n      });\n      return userCredential;\n    });\n  }\n  loginWithGoogle() {\n    return signInWithPopup(this.auth, new GoogleAuthProvider()).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token);\n      });\n      return userCredential;\n    });\n  }\n\n  loginWithGithub(){\n    return signInWithPopup(this.auth, new GithubAuthProvider()).then((userCredential) => {\n      // Set the token when the user logs in\n      userCredential.user.getIdToken().then((idToken) => {\n        this.token = idToken;\n        this.cookies.set(\"token\",this.token);\n      });\n      return userCredential;\n    });\n  }\n  logout() {\n    this.token=\"\";\n    this.cookies.set(\"token\",this.token)\n    return signOut(this.auth);\n  }\n\n  getToken() {\n    return this.cookies.get(\"token\")\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/body-class.directive.ts\n            \n            directive\n            BodyClassDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/contact/contact.component.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            component\n            DocumentationComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/errors/errors.component.ts\n            \n            component\n            ErrorsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/game-over/game-over.component.ts\n            \n            component\n            GameOverComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/login/login-guardian.ts\n            \n            guard\n            LoginGuardian\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pause/pause.component.ts\n            \n            component\n            PauseComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/scoreboards/score-item/score-item.component.ts\n            \n            component\n            ScoreItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/scoreboards/scoreboards.component.ts\n            \n            component\n            ScoreboardsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/common/User.ts\n            \n            class\n            User\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/snake-communications.service.ts\n            \n            injectable\n            SnakeCommunicationsService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/fire : ^17.1.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/platform-server : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @angular/ssr : ^17.3.3\n        \n            express : ^4.18.2\n        \n            firebase-tools : ^13.10.2\n        \n            js-cookie : ^3.0.5\n        \n            ngx-cookie-service : ^17.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellType   (src/.../Enums.ts)\n                        \n                        \n                            GameStates   (src/.../Enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/Enums.ts\n    \n        \n            \n                \n                    \n                        \n                        CellType\n                    \n                \n                        \n                            \n                                 Empty\n                            \n                        \n                        \n                            \n                                 Block\n                            \n                        \n                        \n                            \n                                 Food\n                            \n                        \n                        \n                            \n                                 Snake\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GameStates\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                 Paused\n                            \n                        \n                        \n                            \n                                 GameOver\n                            \n                        \n                        \n                            \n                                 Win\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSnakeProWeb\nThis project was generated with Angular CLI version 17.3.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBodyClassDirective\n\nBodyClassDirective\n\nAppModule -->\n\nBodyClassDirective->AppModule\n\n\n\n\n\nContactComponent\n\nContactComponent\n\nAppModule -->\n\nContactComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nErrorsComponent\n\nErrorsComponent\n\nAppModule -->\n\nErrorsComponent->AppModule\n\n\n\n\n\nGameOverComponent\n\nGameOverComponent\n\nAppModule -->\n\nGameOverComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPauseComponent\n\nPauseComponent\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\nAppModule -->\n\nPauseComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nScoreItemComponent\n\nScoreItemComponent\n\nAppModule -->\n\nScoreItemComponent->AppModule\n\n\n\n\n\nScoreboardsComponent\n\nScoreboardsComponent\n\nAppModule -->\n\nScoreboardsComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSnakeCommunicationsService\n\nSnakeCommunicationsService\n\nAppModule -->\n\nSnakeCommunicationsService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    apiKey: \"AIzaSyC4K7mi-Xlt2R3BhbZEo7_5yRvxG3xJJeQ\",\n    authDomain: \"snakepro-2bf73.firebaseapp.com\",\n    databaseURL: \"https://snakepro-2bf73-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"snakepro-2bf73\",\n    storageBucket: \"snakepro-2bf73.appspot.com\",\n    messagingSenderId: \"169384997647\",\n    appId: \"1:169384997647:web:53c3c0e1a388f9bc2ac47a\",\n    measurementId: \"G-M4BPJRSBVW\",\n  },\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
